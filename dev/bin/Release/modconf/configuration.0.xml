<?xml version="1.0" encoding="utf-8"?>
<!--
  Uwaga:
  Typ: int - Tylko liczby calkowite. Dozwolone: { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
  Typ: Double - Liczby calkowite i rzeczywiste. Dozwolone: { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, .}
  Nie wolno zmieniac nazw wezlow i atrybutow !
-->
<Config>
  
  <!--Samolot gracza:
  rocketCount - Maksymalna liczba dostępnych rakiet. Typ:int
  bombCount - Maksymalna liczba dostępnych bomb. Typ:int
  petrolLoss - Ilość benzyny, którą samolot spala w czasie timeUnit. Typ: Double
  oilLoss - Ilość oleju, którą samolot spala w czasie timeUnit. Typ: Double
  hitCoefficient - Dodatkowa wartość dodawana do ilości oleju traconej, gdy samolot zostanie trafiony. Typ: Double
  moveStep - Wartosc o jaka będzie zwiekszany(zmniejszany) wektor ruchu po nicisnieciu strzałki. Typ: int
  maxSpeed - Maxsymalna prędkośc samolotu jaką może wyciągnąć. Typ: int
  rangeFastWheelingMaxSpeed - Określa jaką częścia maksymalnej prędkości jest prędkoc przy szybkim kołowaniu.
                              Jednocześnie określa jaką cześcią prędkości maksymalnej jest prędkość minimalna lotu. Typ: Double
  rangeSlowWheelingSpeed - Określa jaką częścią maksymalnej prędkości jest prędkość przy wolnym kołowaniu. Typ: Double
  breakingPower - Stała mówi ile razy moveStep jest większy w czasie hamowannia na lotniskowcu.
                  Gdy jest przyciskana strzałka przeciwna do ruchu samolotu. Typ: Double 
  engineCounterThreshold - Prog, po przekroczeniu ktorego zostaje uruchomiony silnik. Czas w milisekundach. Typ: int
  engineCounterThresholdInAir - Prog, po przekroczeniu ktorego zostaje uruchomiony silnik gdy samolot znajduje sie w powietrzu. Czas w milisekundach. Typ: int 
  breakingMinSpeed - Prędkośc samolotu w czasie lądowania poniżej której samolot sie zatrzymuje. Typ: int
  sinkingSpeed - Określa z jaką prędkością samolot będzie tonąć. Wyrażona jako liczba dodatnia. Typ: Double
  maxHeight - Maksymalna wysokość na jaką samolot może się wzbić. Typ: int
  -->
  <UserPlane 
    oilLoss="0.05"
    moveStep="10"
    maxSpeed="65"
    petrolLoss="1"
    bombCount="30"
    rocketCount="30"
    breakingPower = "4"
    hitCoefficient="0.3"
    rangeSlowWheelingSpeed = "0.004"
    rangeFastWheelingMaxSpeed = "0.3"
    engineCounterThreshold="1500"
    engineCounterThresholdInAir="500"
    breakingMinSpeed = "5"
    sinkingSpeed = "1.3"
    maxHeight = "150"
    landingSpeed = "4.0"
    userRotateStep = "2.5943951"
    userRotateBrakingFactor = "1.6"
    userMaxRotateValue = "2.0943951"
    godMode = "0"
    width = "5.5"
    height = "2.1"/>
  
  <!--Samolot wroga:
    speed - Prędkosć samolotu wroga. Typ: int
    oilLoss - Ilość oleju, która wycieka z samolotu wroga w czasie timeUnit. Typ: Double
    minPitch - Najmniejszy pułap na jakim może latać samolot wroga. Typ: int
    nextRocketInterval - Czas jaki musi minąć, żeby samolot mógł wystrzelić kolejną rakietę. Wyrażony w ms. Type: int
    viewRange - Określa maksymalną odległość wroga od gracza (na osi X), w której może atakować. Typ: int
                Dodane, żeby samolot wroga strzelał w miarę bliskiej odległości.
    storagePlaneDistanceFault - Okresli o ile metrów samolot wroga może się pomylić w ataku na dodatkowe samoloty. Typ: Double
    safeUserPlaneDistance - Minimalna odległość na którą może się zbliżyć do samolotu gracza. Lecąc naprzeciwko. Typ: int
    attackStoragePlaneDistance - Okresla kiedy samolot wroga moze zaatakować(wystrzelic rakiete) do samolotu na lotniskowcu. Odleglosc. Typ: Double
    carrierDistanceAlarm - Określa na na jakiej odlełości od lotniskowca włacza się alarm. Typ: int
  -->
  <EnemyPlane 
    speed="30"
    oilLoss="1"
    minPitch = "10"
    viewRange = "50"
    rocketCount="0"
    nextRocketInterval = "1000"
    storagePlaneDistanceFault = "16"
    safeUserPlaneDistance = "50"
    attackStoragePlaneDistance = "15.5"
    carrierDistanceAlarm = "1200"
    enemyRotateStep = "1.04719755"
    maxSimultaneousEnemyPlanes="2"
  />

  <!--Żołnierze:
    minSpeed - Minimalna prędkość żołnierza. Typ: int
    maxSpeed - Maksymalna prędkość żołnierza. Typ: int
    homelessTime - Czas jaki musi uplynac, aby zolnierz mogl wejść ponownie do bunkra. Podany w ms. Typ: int
  -->
  <Soldier 
    minSpeed = "3"
    maxSpeed = "5"
    homelessTime = "15000"/>
  
  <!-- Bunkier:
  fireDelay - odstęp pomiedzy każdym strzałem. Podany w ms. Typ: int
  horizonHeight - wysokość pola widzenia. Pionowy zasieg dzialka. Typ: int
  horizonWidth - szerokość pola widzenia. Poziomy zaieg dzialka. Typ: int
  -->
  <ConcreteBunker
    fireDelay = "800"
    horizonHeight = "30"
    horizonWidth ="35"/>
  
  <WoodenBunker
    fireDelay = "800"
    horizonHeight = "30"
    horizonWidth ="35"/>

  <!--Bomby:
  fireInterval - Przedzial czasu, jaki musi uplynac, aby gracz mogl zrzucic nastepna bombe. Podany w milisekundach(ms). Typ: int
  gravitation - przyciaganie ziemskie. Typ: Double
  airResistance - Wspolczynnik oporu powietrza. Im wiekszy opor tym bardziej bomba zostaje z tylu samolotu. Typ: Double.
  accelerationInterval - Przerwa pomiedzy kazdym przyrostem przyspieszenia. Im mniejszy czas, tym wieksza predkosc osiaga bomba. Typ: int
  -->
  <Bomb
    fireInterval = "200"
    gravitation = "1.05"
    airResistance = "0.97"
    accelerationInterval = "100"/>

  <!--Rakiety:
  fireInterval - Przedzial czasu, jaki musi uplynac, aby gracz mogl zrzucic nastepna rakiete. Podany w milisekundach(ms). Typ: int
  maxSpeed - Maksymalna pozioma predkosc rakiety. Typ: int
  -->
  <Rocket
    fireInterval = "350"
    baseSpeed = "30"/>
  
</Config>