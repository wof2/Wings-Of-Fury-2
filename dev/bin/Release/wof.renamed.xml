<?xml version="1.0" encoding="utf-8"?>
<Mapping xmlns="urn:xmlns:metapropeller-com:assemblur" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0">
  <AssemblurVersion>1.4.2.12669</AssemblurVersion>
  <TimeStamp>2014-12-03T19:50:49.3000982+01:00</TimeStamp>
  <Assembly name="G:\Workspace\wings\WoF\bin\Release\Wof.exe">
    <Type from="&lt;Module&gt;" to="&lt;Module&gt;" />
    <Type from="Wof.Properties.Resources" to="Wof.Properties.Resources">
      <Field from="resourceMan" to="è" />
      <Field from="resourceCulture" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Properties.Settings" to="è">
      <Field from="defaultInstance" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Splash" to="Splash" />
    <Type from="Wof.Controller.AdAction.AdManager" to="â">
      <Field from="C_DEBUG_MODE" to="è" />
      <Field from="C_AD_KEY" to="â" />
      <Field from="C_AD_DOWNLOAD_TIMEOUT" to="ì" />
      <Field from="C_CONNECT_TIMEOUT" to="ã" />
      <Field from="C_ADS_DIR" to="ý" />
      <Field from="C_MIN_AD_INTERVAL" to="ò" />
      <Field from="ads" to="å" />
      <Field from="downloadingAds" to="æ" />
      <Field from="adAction" to="é" />
      <Field from="adHelper3D" to="ë" />
      <Field from="singleton" to="í" />
      <Field from="lastRegisterImpression" to="ê" />
      <Field from="timer" to="î" />
      <Field from="connectionErrorOccured" to="ä" />
      <Field from="camera" to="ó" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Finalize" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_AdAction" to="â">
        <Signature>() : AdManaged.CommercialAdAction</Signature>
      </Method>
      <Method from="get_AdHelper3D" to="ì">
        <Signature>() : AdManaged.AdHelper3D</Signature>
      </Method>
      <Method from="get_ConnectionErrorOccured" to="ã">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="Work" to="ý">
        <Signature>(Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="TestConnection" to="ò">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_Singleton" to="å">
        <Signature>() : Wof.Controller.AdAction.AdManager</Signature>
      </Method>
      <Method from="AdDownloaded" to="æ">
        <Signature>(Wof.Controller.AdAction.AdManager.Ad) : Void</Signature>
      </Method>
      <Method from="AdDownloaded" to="é">
        <Signature>(Int32, String, Boolean) : Void</Signature>
      </Method>
      <Method from="CanShowAd" to="ë">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="RegisterImpression" to="í">
        <Signature>(Wof.Controller.AdAction.AdManager.Ad) : Void</Signature>
      </Method>
      <Method from="LoadAdTexture" to="ê">
        <Signature>(Wof.Controller.AdAction.AdManager.Ad) : String</Signature>
      </Method>
      <Method from="GetAd" to="î">
        <Signature>(String, Single, Wof.Controller.AdAction.AdManager.Ad&amp;) : Wof.Controller.AdAction.AdManager.AdStatus</Signature>
      </Method>
      <Method from="GetAd" to="ä">
        <Signature>(String, Int32, Single, AdManaged.AdDownloaded, Wof.Controller.AdAction.AdManager.Ad&amp;) : Wof.Controller.AdAction.AdManager.AdStatus</Signature>
      </Method>
      <Method from="GatherAsyncResult" to="ó">
        <Signature>(Int32, Int32, Wof.Controller.AdAction.AdManager.Ad&amp;) : Wof.Controller.AdAction.AdManager.AdStatus</Signature>
      </Method>
      <Method from="ClearDynamicAds" to="õ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="RemoveDynamicAd" to="ñ">
        <Signature>(Wof.View.Effects.AdQuadrangle3D) : Void</Signature>
      </Method>
      <Method from="AddDynamicAd" to="ö">
        <Signature>(Mogre.SceneManager, Int32, Mogre.Vector3, Mogre.Vector2, Boolean) : Wof.View.Effects.AdQuadrangle3D</Signature>
      </Method>
      <Method from="UpdateCamera" to="ù">
        <Signature>(Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="IsDynamicAdVisible" to="ï">
        <Signature>(Wof.View.Effects.AdQuadrangle3D) : Boolean</Signature>
      </Method>
      <Method from="GetAdAsync" to="ú">
        <Signature>(String, Single, Int32&amp;) : Wof.Controller.AdAction.AdManager.AdStatus</Signature>
      </Method>
      <Method from="GetAdAsync" to="ü">
        <Signature>(String, Single, Int32&amp;, Wof.Controller.AdAction.AdManager.AdDownloadedAsync) : Wof.Controller.AdAction.AdManager.AdStatus</Signature>
      </Method>
      <Method from="CloseAd" to="ç">
        <Signature>(Wof.Controller.AdAction.AdManager.Ad) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.AdAction.AdManager.AdDownloadedAsync" to="â.ì">
      <Method from=".ctor" to=".ctor">
        <Signature>(Object, IntPtr) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.AdAction.AdManager.AdStatus" to="â.ã">
      <Field from="NO_ADS" to="è" />
      <Field from="TIMEOUT" to="â" />
      <Field from="OK" to="ì" />
      <Field from="DOWNLOAD_FAILED" to="ã" />
      <Field from="ADS_DISABLED" to="ý" />
    </Type>
    <Type from="Wof.Controller.AdAction.AdManager.Ad" to="â.ý">
      <Field from="id" to="è" />
      <Field from="path" to="â" />
      <Field from="animated" to="ì" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Int32, String, Boolean) : Void</Signature>
      </Method>
      <Method from="Equals" to="è">
        <Signature>(Wof.Controller.AdAction.AdManager.Ad) : Boolean</Signature>
      </Method>
      <Method from="GetHashCode" to="â">
        <Signature>() : Int32</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.AdAction.AdManager.&lt;&gt;c__DisplayClass2" to="â.&lt;&gt;c__DisplayClass2" />
    <Type from="Wof.Controller.AdAction.AdManager.&lt;&gt;c__DisplayClass5" to="â.&lt;&gt;c__DisplayClass5" />
    <Type from="Wof.Controller.AdAction.AdManager.&lt;&gt;c__DisplayClass8" to="â.&lt;&gt;c__DisplayClass8" />
    <Type from="Wof.Controller.AdAction.AdManager.&lt;&gt;c__DisplayClassd" to="â.&lt;&gt;c__DisplayClassd" />
    <Type from="Wof.Controller.AdAction.AdManager.&lt;&gt;c__DisplayClassd.&lt;&gt;c__DisplayClass10" to="â.&lt;&gt;c__DisplayClassd.&lt;&gt;c__DisplayClass10" />
    <Type from="Wof.Controller.AdAction.AdSizeUtils" to="ò">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ScaleAdToDisplay" to="è">
        <Signature>(Mogre.Pair`2, Wof.Model.Level.Common.PointD, Boolean) : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="GetAllSizes" to="â">
        <Signature>() : Wof.Controller.AdAction.IAdSize[]</Signature>
      </Method>
      <Method from="GetSizesGreaterEqual" to="ì">
        <Signature>(Int32, Int32) : Wof.Controller.AdAction.IAdSize[]</Signature>
      </Method>
      <Method from="GetSizesSmallerEqual" to="ã">
        <Signature>(Int32, Int32) : Wof.Controller.AdAction.IAdSize[]</Signature>
      </Method>
      <Method from="GetSizesGreaterEqual" to="ý">
        <Signature>(Wof.Controller.AdAction.AdSize) : Wof.Controller.AdAction.IAdSize[]</Signature>
      </Method>
      <Method from="GetSizesSmallerEqual" to="ò">
        <Signature>(Wof.Controller.AdAction.AdSize) : Wof.Controller.AdAction.IAdSize[]</Signature>
      </Method>
      <Method from="GetSizesOfHeight" to="å">
        <Signature>(Int32) : Wof.Controller.AdAction.IAdSize[]</Signature>
      </Method>
      <Method from="GetSizesOfWidth" to="æ">
        <Signature>(Int32) : Wof.Controller.AdAction.IAdSize[]</Signature>
      </Method>
      <Method from="GetSizesOfHeightSmallerEqual" to="é">
        <Signature>(Int32) : Wof.Controller.AdAction.IAdSize[]</Signature>
      </Method>
      <Method from="GetSizesOfHeightGreaterEqual" to="ë">
        <Signature>(Int32) : Wof.Controller.AdAction.IAdSize[]</Signature>
      </Method>
      <Method from="GetSizesOfWidthSmallerEqual" to="í">
        <Signature>(Int32) : Wof.Controller.AdAction.IAdSize[]</Signature>
      </Method>
      <Method from="GetSizesOfWidthGreaterEqual" to="ê">
        <Signature>(Int32) : Wof.Controller.AdAction.IAdSize[]</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.AdAction.AdSizeUtils.&lt;&gt;c__DisplayClass1" to="ò.&lt;&gt;c__DisplayClass1" />
    <Type from="Wof.Controller.AdAction.AdSizeUtils.&lt;&gt;c__DisplayClass4" to="ò.&lt;&gt;c__DisplayClass4" />
    <Type from="Wof.Controller.AdAction.AdSizeUtils.&lt;&gt;c__DisplayClass7" to="ò.&lt;&gt;c__DisplayClass7" />
    <Type from="Wof.Controller.AdAction.AdSizeUtils.&lt;&gt;c__DisplayClassa" to="ò.&lt;&gt;c__DisplayClassa" />
    <Type from="Wof.Controller.AdAction.AdSizeUtils.&lt;&gt;c__DisplayClassd" to="ò.&lt;&gt;c__DisplayClassd" />
    <Type from="Wof.Controller.AdAction.AdSizeUtils.&lt;&gt;c__DisplayClass10" to="ò.&lt;&gt;c__DisplayClass10" />
    <Type from="Wof.Controller.AdAction.AdSizeUtils.&lt;&gt;c__DisplayClass13" to="ò.&lt;&gt;c__DisplayClass13" />
    <Type from="Wof.Controller.AdAction.AdSizeUtils.&lt;&gt;c__DisplayClass16" to="ò.&lt;&gt;c__DisplayClass16" />
    <Type from="Wof.Controller.AdAction.IAdSize" to="å">
      <Method from="getSize" to="ì">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.AdAction.AdSize" to="æ">
      <Field from="size" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(AdManaged.AdList) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Int32, Int32) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Common.PointD) : Void</Signature>
      </Method>
      <Method from="Equals" to="ã">
        <Signature>(Object) : Boolean</Signature>
      </Method>
      <Method from="GetHashCode" to="ý">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="getSize" to="ì">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.AdAction.Billboard_1024x1024" to="é">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="getSize" to="ì">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.AdAction.Billboard_512x1024" to="ë">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="getSize" to="ì">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.AdAction.Billboard_1024x512" to="í">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="getSize" to="ì">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.AdAction.Billboard_1024x256" to="ê">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="getSize" to="ì">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.AdAction.Billboard_1024x128" to="î">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="getSize" to="ì">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Browser" to="Wof.Controller.Browser" />
    <Type from="Wof.Controller.Browser.PointDelegate" to="Wof.Controller.Browser.PointDelegate" />
    <Type from="Wof.Controller.Browser.IntDelegate" to="Wof.Controller.Browser.IntDelegate" />
    <Type from="Wof.Controller.Browser.VoidDelegate" to="Wof.Controller.Browser.VoidDelegate" />
    <Type from="Wof.Controller.Browser.UriDelegate" to="Wof.Controller.Browser.UriDelegate" />
    <Type from="Wof.Controller.Browser.BoolDelegate" to="Wof.Controller.Browser.BoolDelegate" />
    <Type from="Wof.Controller.Browser.SetDelegate" to="Wof.Controller.Browser.SetDelegate" />
    <Type from="Wof.Controller.Browser.NewBrowserDelegate" to="Wof.Controller.Browser.NewBrowserDelegate" />
    <Type from="Wof.Controller.BugReport" to="ä">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.CameraListenerBase" to="ó">
      <Field from="cameraLastRealPosition" to="è" />
      <Field from="cameraLastRealOrientation" to="â" />
      <Field from="camera" to="ì" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="get_CameraLastRealPosition" to="è">
        <Signature>() : System.Nullable`1</Signature>
      </Method>
      <Method from="get_CameraLastRealOrientation" to="â">
        <Signature>() : System.Nullable`1</Signature>
      </Method>
      <Method from="get_Camera" to="ì">
        <Signature>() : Mogre.Camera</Signature>
      </Method>
      <Method from="IsReady" to="ã">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="ObjectMoved" to="ò">
        <Signature>(Mogre.MovableObject) : Void</Signature>
      </Method>
      <Method from="ObjectRendering" to="å">
        <Signature>(Mogre.MovableObject, Mogre.Camera) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.CameraListener" to="õ">
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.Camera) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.DebugInfo" to="ñ">
      <Field from="debugName" to="è" />
      <Field from="items" to="â" />
      <Field from="lockSync" to="ì" />
      <Field from="keysUpdated" to="ã" />
      <Method from=".ctor" to=".ctor">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="get_LockSync" to="è">
        <Signature>() : Object</Signature>
      </Method>
      <Method from="ClearNotUpdated" to="â">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Update" to="ì">
        <Signature>(String, String) : Void</Signature>
      </Method>
      <Method from="ToStringArray" to="ã">
        <Signature>() : String[]</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.IController" to="ö">
      <Method from="OnRegisterDebugInfo" to="æ">
        <Signature>(Wof.Controller.DebugInfo) : Void</Signature>
      </Method>
      <Method from="OnRegisterPlane" to="é">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="FindPlaneView" to="ë">
        <Signature>(Wof.Model.Level.Planes.Plane) : Wof.View.PlaneView</Signature>
      </Method>
      <Method from="OnBunkerFire" to="í">
        <Signature>(Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.BunkerTile, Wof.Model.Level.Planes.Plane, Boolean) : Void</Signature>
      </Method>
      <Method from="OnRegisterSoldier" to="ê">
        <Signature>(Wof.Model.Level.Infantry.Soldier, Wof.Model.Level.MissionType) : Void</Signature>
      </Method>
      <Method from="UnregisterSoldier" to="î">
        <Signature>(Wof.Model.Level.Infantry.Soldier) : Void</Signature>
      </Method>
      <Method from="OnSoldierBeginDeath" to="ä">
        <Signature>(Wof.Model.Level.Infantry.Soldier, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from="OnSoldierPrepareToFire" to="ó">
        <Signature>(Wof.Model.Level.Infantry.Soldier, Single) : Void</Signature>
      </Method>
      <Method from="OnSoldierEndPrepareToFire" to="õ">
        <Signature>(Wof.Model.Level.Infantry.Soldier) : Void</Signature>
      </Method>
      <Method from="OnTurnOffEngine" to="ñ">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnTurnOnEngine" to="ö">
        <Signature>(Boolean, Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnEngineFaulty" to="ù">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnEngineRepaired" to="ï">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnStartEngineFailed" to="ú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnEnemyPlaneBombed" to="ü">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="OnTileBombed" to="ç">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="OnTorpedoSunk" to="û">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Model.Level.Weapon.Torpedo, System.Nullable`1) : Void</Signature>
      </Method>
      <Method from="OnTileDestroyed" to="ÿ">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="OnTorpedoHitGroundOrWater" to="ô">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Model.Level.Weapon.Torpedo, Single, Single) : Void</Signature>
      </Method>
      <Method from="OnPrepareChangeDirection" to="âè">
        <Signature>(Wof.Model.Level.Direction, Wof.Model.Level.Planes.Plane, Wof.Model.Level.Planes.TurnType) : Void</Signature>
      </Method>
      <Method from="OnPrepareChangeDirectionEnd" to="ââ">
        <Signature>(Object) : Void</Signature>
      </Method>
      <Method from="OnChangeDirectionEnd" to="âì">
        <Signature>(Object) : Void</Signature>
      </Method>
      <Method from="OnSpinBegin" to="âã">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnSpinEnd" to="âý">
        <Signature>(Object) : Void</Signature>
      </Method>
      <Method from="OnRegisterBomb" to="âò">
        <Signature>(Wof.Model.Level.Weapon.Bomb) : Void</Signature>
      </Method>
      <Method from="OnToggleGear" to="âå">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnRegisterRocket" to="âæ">
        <Signature>(Wof.Model.Level.Weapon.Rocket) : Void</Signature>
      </Method>
      <Method from="OnRegisterFlakBullet" to="âé">
        <Signature>(Wof.Model.Level.Weapon.FlakBullet) : Void</Signature>
      </Method>
      <Method from="OnRegisterGunBullet" to="âë">
        <Signature>(Wof.Model.Level.Weapon.GunBullet) : Void</Signature>
      </Method>
      <Method from="OnRegisterBunkerShellBullet" to="âí">
        <Signature>(Wof.Model.Level.Weapon.BunkerShellBullet) : Void</Signature>
      </Method>
      <Method from="OnRegisterTorpedo" to="âê">
        <Signature>(Wof.Model.Level.Weapon.Torpedo) : Void</Signature>
      </Method>
      <Method from="OnGearToggleEnd" to="âî">
        <Signature>(Object) : Void</Signature>
      </Method>
      <Method from="OnFireGun" to="âä">
        <Signature>(Wof.Model.Level.Weapon.IObject2D) : Void</Signature>
      </Method>
      <Method from="OnGunHit" to="âó">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Single, Single) : Void</Signature>
      </Method>
      <Method from="OnKillSoldier" to="âõ">
        <Signature>(Wof.Model.Level.Infantry.Soldier) : Void</Signature>
      </Method>
      <Method from="OnReadyLevelEnd" to="âñ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnChangeAmmunition" to="âö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnPlaneCrashed" to="âù">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Model.Level.LevelTiles.TileKind) : Void</Signature>
      </Method>
      <Method from="OnPlaneDestroyed" to="âï">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnFortressHit" to="âú">
        <Signature>(Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.FortressBunkerTile, Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="OnWarCry" to="âü">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnCatchPlane" to="âç">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Model.Level.LevelTiles.AircraftCarrierTiles.EndAircraftCarrierTile) : Void</Signature>
      </Method>
      <Method from="OnReleasePlane" to="âû">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Model.Level.LevelTiles.AircraftCarrierTiles.EndAircraftCarrierTile) : Void</Signature>
      </Method>
      <Method from="OnUnregisterRocket" to="âÿ">
        <Signature>(Wof.Model.Level.Weapon.Rocket) : Void</Signature>
      </Method>
      <Method from="OnUnregisterTorpedo" to="âô">
        <Signature>(Wof.Model.Level.Weapon.Torpedo) : Void</Signature>
      </Method>
      <Method from="OnUnregisterBunkerShellBullet" to="ìè">
        <Signature>(Wof.Model.Level.Weapon.BunkerShellBullet) : Void</Signature>
      </Method>
      <Method from="OnUnregisterAmmunition" to="ìâ">
        <Signature>(Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="OnTileRestored" to="ìì">
        <Signature>(Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.BunkerTile) : Void</Signature>
      </Method>
      <Method from="OnTakeOff" to="ìã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnTouchDown" to="ìý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnPlaneWrecked" to="ìò">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnPlanePass" to="ìå">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnUnregisterPlane" to="ìæ">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnGunHitPlane" to="ìé">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnEnemyPlaneFromTheSide" to="ìë">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="OnPlaneForceChangeDirection" to="ìí">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnPlaneForceGoDown" to="ìê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnEnemyAttacksCarrier" to="ìî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnPlaneWrongDirectionStart" to="ìä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnStartWaterBubblesSound" to="ìó">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnStopWaterBubblesSound" to="ìõ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnShipDamaged" to="ìñ">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.ShipTile, Wof.Model.Level.LevelTiles.Watercraft.ShipState) : Void</Signature>
      </Method>
      <Method from="OnShipBeginSinking" to="ìö">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.ShipTile) : Void</Signature>
      </Method>
      <Method from="OnShipSinking" to="ìù">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.ShipTile) : Void</Signature>
      </Method>
      <Method from="OnShipSunk" to="ìï">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.BeginShipTile) : Void</Signature>
      </Method>
      <Method from="OnPotentialLanding" to="ìú">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnSecondaryFireOnCarrier" to="ìü">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnRocketHitPlane" to="ìç">
        <Signature>(Wof.Model.Level.Weapon.Rocket, Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnLevelFinished" to="ìû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnPlayFanfare" to="ìÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnPotentialBadLanding" to="ìô">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnShipBeginSubmerging" to="ãè">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipBeginEmerging" to="ãâ">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipSubmerging" to="ãì">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipEmerging" to="ãã">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipEmerged" to="ãý">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipSubmerged" to="ãò">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="GetFramework" to="ãå">
        <Signature>() : Wof.Controller.IFrameWork</Signature>
      </Method>
      <Method from="OnAchievementFulFilled" to="ãæ">
        <Signature>(Wof.Model.Level.Achievement, Boolean) : Void</Signature>
      </Method>
      <Method from="OnAchievementUpdated" to="ãé">
        <Signature>(Wof.Model.Level.Achievement) : Void</Signature>
      </Method>
      <Method from="OnPlaneEnterRestoreAmmunitionTile" to="ãë">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnPlaneLeaveRestoreAmmunitionTile" to="ãí">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.DelayedControllerFacade" to="ù">
      <Field from="jobs" to="è" />
      <Field from="lastId" to="â" />
      <Field from="lockSync" to="ì" />
      <Field from="controller" to="ã" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.IController) : Void</Signature>
      </Method>
      <Method from="ClearJobs" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="AddJob" to="â">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="AddJob" to="ì">
        <Signature>(String, Object[]) : Void</Signature>
      </Method>
      <Method from="DoJobs" to="ã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnRegisterDebugInfo" to="æ">
        <Signature>(Wof.Controller.DebugInfo) : Void</Signature>
      </Method>
      <Method from="OnRegisterPlane" to="é">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="FindPlaneView" to="ë">
        <Signature>(Wof.Model.Level.Planes.Plane) : Wof.View.PlaneView</Signature>
      </Method>
      <Method from="OnBunkerFire" to="í">
        <Signature>(Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.BunkerTile, Wof.Model.Level.Planes.Plane, Boolean) : Void</Signature>
      </Method>
      <Method from="OnRegisterSoldier" to="ê">
        <Signature>(Wof.Model.Level.Infantry.Soldier, Wof.Model.Level.MissionType) : Void</Signature>
      </Method>
      <Method from="UnregisterSoldier" to="î">
        <Signature>(Wof.Model.Level.Infantry.Soldier) : Void</Signature>
      </Method>
      <Method from="OnSoldierBeginDeath" to="ä">
        <Signature>(Wof.Model.Level.Infantry.Soldier, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from="OnSoldierPrepareToFire" to="ó">
        <Signature>(Wof.Model.Level.Infantry.Soldier, Single) : Void</Signature>
      </Method>
      <Method from="OnSoldierEndPrepareToFire" to="õ">
        <Signature>(Wof.Model.Level.Infantry.Soldier) : Void</Signature>
      </Method>
      <Method from="OnTurnOffEngine" to="ñ">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnTurnOnEngine" to="ö">
        <Signature>(Boolean, Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnEngineFaulty" to="ù">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnEngineRepaired" to="ï">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnStartEngineFailed" to="ú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnEnemyPlaneBombed" to="ü">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="OnTileBombed" to="ç">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="OnTorpedoSunk" to="û">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Model.Level.Weapon.Torpedo, System.Nullable`1) : Void</Signature>
      </Method>
      <Method from="OnTileDestroyed" to="ÿ">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="OnTorpedoHitGroundOrWater" to="ô">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Model.Level.Weapon.Torpedo, Single, Single) : Void</Signature>
      </Method>
      <Method from="OnPrepareChangeDirection" to="âè">
        <Signature>(Wof.Model.Level.Direction, Wof.Model.Level.Planes.Plane, Wof.Model.Level.Planes.TurnType) : Void</Signature>
      </Method>
      <Method from="OnPrepareChangeDirectionEnd" to="ââ">
        <Signature>(Object) : Void</Signature>
      </Method>
      <Method from="OnChangeDirectionEnd" to="âì">
        <Signature>(Object) : Void</Signature>
      </Method>
      <Method from="OnSpinBegin" to="âã">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnSpinEnd" to="âý">
        <Signature>(Object) : Void</Signature>
      </Method>
      <Method from="OnRegisterBomb" to="âò">
        <Signature>(Wof.Model.Level.Weapon.Bomb) : Void</Signature>
      </Method>
      <Method from="OnToggleGear" to="âå">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnRegisterRocket" to="âæ">
        <Signature>(Wof.Model.Level.Weapon.Rocket) : Void</Signature>
      </Method>
      <Method from="OnRegisterBunkerShellBullet" to="âí">
        <Signature>(Wof.Model.Level.Weapon.BunkerShellBullet) : Void</Signature>
      </Method>
      <Method from="OnRegisterTorpedo" to="âê">
        <Signature>(Wof.Model.Level.Weapon.Torpedo) : Void</Signature>
      </Method>
      <Method from="OnGearToggleEnd" to="âî">
        <Signature>(Object) : Void</Signature>
      </Method>
      <Method from="OnFireGun" to="âä">
        <Signature>(Wof.Model.Level.Weapon.IObject2D) : Void</Signature>
      </Method>
      <Method from="OnGunHit" to="âó">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Single, Single) : Void</Signature>
      </Method>
      <Method from="OnKillSoldier" to="âõ">
        <Signature>(Wof.Model.Level.Infantry.Soldier) : Void</Signature>
      </Method>
      <Method from="OnReadyLevelEnd" to="âñ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnChangeAmmunition" to="âö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnPlaneCrashed" to="âù">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Model.Level.LevelTiles.TileKind) : Void</Signature>
      </Method>
      <Method from="OnPlaneDestroyed" to="âï">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnFortressHit" to="âú">
        <Signature>(Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.FortressBunkerTile, Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="OnWarCry" to="âü">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnCatchPlane" to="âç">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Model.Level.LevelTiles.AircraftCarrierTiles.EndAircraftCarrierTile) : Void</Signature>
      </Method>
      <Method from="OnReleasePlane" to="âû">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Model.Level.LevelTiles.AircraftCarrierTiles.EndAircraftCarrierTile) : Void</Signature>
      </Method>
      <Method from="OnUnregisterRocket" to="âÿ">
        <Signature>(Wof.Model.Level.Weapon.Rocket) : Void</Signature>
      </Method>
      <Method from="OnUnregisterTorpedo" to="âô">
        <Signature>(Wof.Model.Level.Weapon.Torpedo) : Void</Signature>
      </Method>
      <Method from="OnUnregisterBunkerShellBullet" to="ìè">
        <Signature>(Wof.Model.Level.Weapon.BunkerShellBullet) : Void</Signature>
      </Method>
      <Method from="OnTileRestored" to="ìì">
        <Signature>(Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.BunkerTile) : Void</Signature>
      </Method>
      <Method from="OnTakeOff" to="ìã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnTouchDown" to="ìý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnPlaneWrecked" to="ìò">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnPlanePass" to="ìå">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnUnregisterPlane" to="ìæ">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnGunHitPlane" to="ìé">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnEnemyPlaneFromTheSide" to="ìë">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="OnPlaneForceChangeDirection" to="ìí">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnPlaneForceGoDown" to="ìê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnEnemyAttacksCarrier" to="ìî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnPlaneWrongDirectionStart" to="ìä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnStartWaterBubblesSound" to="ìó">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnStopWaterBubblesSound" to="ìõ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnShipDamaged" to="ìñ">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.ShipTile, Wof.Model.Level.LevelTiles.Watercraft.ShipState) : Void</Signature>
      </Method>
      <Method from="OnShipBeginSinking" to="ìö">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.ShipTile) : Void</Signature>
      </Method>
      <Method from="OnShipSinking" to="ìù">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.ShipTile) : Void</Signature>
      </Method>
      <Method from="OnShipSunk" to="ìï">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.BeginShipTile) : Void</Signature>
      </Method>
      <Method from="OnPotentialLanding" to="ìú">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnPotentialBadLanding" to="ìô">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnShipBeginSubmerging" to="ãè">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipBeginEmerging" to="ãâ">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipSubmerging" to="ãì">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipEmerging" to="ãã">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipEmerged" to="ãý">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipSubmerged" to="ãò">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnSecondaryFireOnCarrier" to="ìü">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnRocketHitPlane" to="ìç">
        <Signature>(Wof.Model.Level.Weapon.Rocket, Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnLevelFinished" to="ìû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnPlayFanfare" to="ìÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnRegisterGunBullet" to="âë">
        <Signature>(Wof.Model.Level.Weapon.GunBullet) : Void</Signature>
      </Method>
      <Method from="OnRegisterFlakBullet" to="âé">
        <Signature>(Wof.Model.Level.Weapon.FlakBullet) : Void</Signature>
      </Method>
      <Method from="OnUnregisterAmmunition" to="ìâ">
        <Signature>(Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="OnAchievementFulFilled" to="ãæ">
        <Signature>(Wof.Model.Level.Achievement, Boolean) : Void</Signature>
      </Method>
      <Method from="OnAchievementUpdated" to="ãé">
        <Signature>(Wof.Model.Level.Achievement) : Void</Signature>
      </Method>
      <Method from="OnPlaneEnterRestoreAmmunitionTile" to="ãë">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnPlaneLeaveRestoreAmmunitionTile" to="ãí">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="GetFramework" to="ãå">
        <Signature>() : Wof.Controller.IFrameWork</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.EffectBars.AltitudeBar" to="ï">
      <Field from="ImageBar" to="è" />
      <Field from="ImageBarBg" to="â" />
      <Field from="_height" to="ì" />
      <Field from="_width" to="ã" />
      <Field from="_bar" to="ý" />
      <Field from="_bar2" to="ò" />
      <Field from="_gui1" to="å" />
      <Field from="_gui2" to="æ" />
      <Field from="_barOverConta" to="é" />
      <Field from="_barOverContaBg" to="ë" />
      <Field from="_text" to="í" />
      <Field from="_startPoint" to="ê" />
      <Field from="blinkDelay" to="î" />
      <Field from="_colour1" to="ä" />
      <Field from="_colour2" to="ó" />
      <Field from="_threshold" to="õ" />
      <Field from="thresholdCrossed" to="ñ" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Mogre.Viewport, Single, Single) : Void</Signature>
      </Method>
      <Method from="Update" to="è">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="Dispose" to="ãê">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.EffectBars.BulletTimeBar" to="ú">
      <Field from="ImageBar" to="è" />
      <Field from="ImageBarBg" to="â" />
      <Field from="_height" to="ì" />
      <Field from="_width" to="ã" />
      <Field from="_bar" to="ý" />
      <Field from="_bar2" to="ò" />
      <Field from="_gui1" to="å" />
      <Field from="_gui2" to="æ" />
      <Field from="_barOverConta" to="é" />
      <Field from="_barOverContaBg" to="ë" />
      <Field from="_text" to="í" />
      <Field from="_startPoint" to="ê" />
      <Field from="blinkDelay" to="î" />
      <Field from="_colour1" to="ä" />
      <Field from="_colour2" to="ó" />
      <Field from="_threshold" to="õ" />
      <Field from="thresholdCrossed" to="ñ" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Mogre.Viewport, Single, Single) : Void</Signature>
      </Method>
      <Method from="Update" to="è">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="Dispose" to="ãî">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.ErrorBox" to="ü">
      <Field from="components" to="è" />
      <Field from="exitButton" to="â" />
      <Field from="openLogLocationButton" to="ì" />
      <Field from="textBox1" to="ã" />
      <Field from="pictureBox1" to="ý" />
      <Field from="titleLabel" to="ò" />
      <Field from="button1" to="å" />
      <Method from=".ctor" to=".ctor">
        <Signature>(String, String) : Void</Signature>
      </Method>
      <Method from="exitButton_Click" to="è">
        <Signature>(Object, System.EventArgs) : Void</Signature>
      </Method>
      <Method from="openLogLocationButton_Click" to="â">
        <Signature>(Object, System.EventArgs) : Void</Signature>
      </Method>
      <Method from="button1_Click" to="ì">
        <Signature>(Object, System.EventArgs) : Void</Signature>
      </Method>
      <Method from="Dispose" to="ãä">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="InitializeComponent" to="ã">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Firewall" to="ç">
      <Field from="CLSID_FIREWALL_MANAGER" to="è" />
      <Field from="PROGID_AUTHORIZED_APPLICATION" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetFirewallManager" to="è">
        <Signature>() : NetFwTypeLib.INetFwMgr</Signature>
      </Method>
      <Method from="AuthorizeApplication" to="â">
        <Signature>(String, String, NetFwTypeLib.NET_FW_SCOPE_, NetFwTypeLib.NET_FW_IP_VERSION_) : Boolean</Signature>
      </Method>
      <Method from="AddException" to="ì">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.src.Controller.Form1" to="û">
      <Field from="components" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Dispose" to="ãó">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="InitializeComponent" to="è">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.IFrameWork" to="ÿ">
      <Method from="get_Camera" to="ãõ">
        <Signature>() : Mogre.Camera</Signature>
      </Method>
      <Method from="get_MinimapCamera" to="ãñ">
        <Signature>() : Mogre.Camera</Signature>
      </Method>
      <Method from="get_MinimapNoseCamera" to="ãö">
        <Signature>() : Mogre.Camera</Signature>
      </Method>
      <Method from="get_Viewport" to="ãù">
        <Signature>() : Mogre.Viewport</Signature>
      </Method>
      <Method from="get_MinimapViewport" to="ãï">
        <Signature>() : Mogre.Viewport</Signature>
      </Method>
      <Method from="get_OverlayViewport" to="ãú">
        <Signature>() : Mogre.Viewport</Signature>
      </Method>
      <Method from="Go" to="ãü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_InputKeyboard" to="ãç">
        <Signature>() : MOIS.Keyboard</Signature>
      </Method>
      <Method from="get_SceneMgr" to="ãû">
        <Signature>() : Mogre.SceneManager</Signature>
      </Method>
      <Method from="set_SceneMgr" to="ãÿ">
        <Signature>(Mogre.SceneManager) : Void</Signature>
      </Method>
      <Method from="get_MinimapMgr" to="ãô">
        <Signature>() : Mogre.SceneManager</Signature>
      </Method>
      <Method from="set_MinimapMgr" to="ýè">
        <Signature>(Mogre.SceneManager) : Void</Signature>
      </Method>
      <Method from="get_OverlayMgr" to="ýâ">
        <Signature>() : Mogre.SceneManager</Signature>
      </Method>
      <Method from="set_OverlayMgr" to="ýì">
        <Signature>(Mogre.SceneManager) : Void</Signature>
      </Method>
      <Method from="get_CameraListener" to="ýã">
        <Signature>() : Wof.Controller.CameraListenerBase</Signature>
      </Method>
      <Method from="ChooseSceneManager" to="ýý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="HandleCameraInput" to="ýò">
        <Signature>(MOIS.Keyboard, MOIS.Mouse, System.Collections.Generic.IList`1, Mogre.FrameEvent, Mogre.Camera, Mogre.Camera, Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="TakeScreenshot" to="ýå">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="UpdateStats" to="ýæ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="SetCompositorEnabled" to="ýé">
        <Signature>(Wof.Controller.FrameWorkForm.CompositorTypes, Boolean) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.FrameWorkForm" to="ô">
      <Field from="resetStatisticsEvery" to="è" />
      <Field from="updateStatisticsEvery" to="â" />
      <Field from="cameraZoom" to="ì" />
      <Field from="minimapHeight" to="ã" />
      <Field from="minimapWidth" to="ý" />
      <Field from="performanceTestFramework" to="ò" />
      <Field from="modelWorker" to="å" />
      <Field from="root" to="æ" />
      <Field from="camera" to="é" />
      <Field from="minimapCamera" to="ë" />
      <Field from="minimapNoseCamera" to="í" />
      <Field from="overlayCamera" to="ê" />
      <Field from="cameraListener" to="î" />
      <Field from="viewport" to="ä" />
      <Field from="minimapViewport" to="ó" />
      <Field from="overlayViewport" to="õ" />
      <Field from="sceneMgr" to="ñ" />
      <Field from="minimapMgr" to="ö" />
      <Field from="overlayMgr" to="ù" />
      <Field from="window" to="ï" />
      <Field from="windowWidth" to="ú" />
      <Field from="windowHeight" to="ü" />
      <Field from="inputManager" to="ç" />
      <Field from="inputKeyboard" to="û" />
      <Field from="inputJoysticks" to="ÿ" />
      <Field from="inputMouse" to="ô" />
      <Field from="showDebugOverlay" to="âè" />
      <Field from="debugTextDelay" to="ââ" />
      <Field from="toggleDelay" to="âì" />
      <Field from="statDelay" to="âã" />
      <Field from="filtering" to="âý" />
      <Field from="aniso" to="âò" />
      <Field from="camSpeed" to="âå" />
      <Field from="rotateSpeed" to="âæ" />
      <Field from="shutDown" to="âé" />
      <Field from="mDebugText" to="âë" />
      <Field from="directSound" to="âí" />
      <Field from="hwnd" to="âê" />
      <Field from="modelDuration" to="âî" />
      <Field from="lastResetStatistics" to="âä" />
      <Field from="lastUpdateStatistics" to="âó" />
      <Field from="lastStats" to="âõ" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_CameraZoom" to="è">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_CameraZoom" to="â">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_Root" to="ì">
        <Signature>() : Mogre.Root</Signature>
      </Method>
      <Method from="get_InputKeyboard" to="ãç">
        <Signature>() : MOIS.Keyboard</Signature>
      </Method>
      <Method from="get_Camera" to="ãõ">
        <Signature>() : Mogre.Camera</Signature>
      </Method>
      <Method from="get_MinimapCamera" to="ãñ">
        <Signature>() : Mogre.Camera</Signature>
      </Method>
      <Method from="get_MinimapNoseCamera" to="ãö">
        <Signature>() : Mogre.Camera</Signature>
      </Method>
      <Method from="get_OverlayCamera" to="ã">
        <Signature>() : Mogre.Camera</Signature>
      </Method>
      <Method from="get_Viewport" to="ãù">
        <Signature>() : Mogre.Viewport</Signature>
      </Method>
      <Method from="get_MinimapViewport" to="ãï">
        <Signature>() : Mogre.Viewport</Signature>
      </Method>
      <Method from="get_OverlayViewport" to="ãú">
        <Signature>() : Mogre.Viewport</Signature>
      </Method>
      <Method from="get_SceneMgr" to="ãû">
        <Signature>() : Mogre.SceneManager</Signature>
      </Method>
      <Method from="set_SceneMgr" to="ãÿ">
        <Signature>(Mogre.SceneManager) : Void</Signature>
      </Method>
      <Method from="get_MinimapMgr" to="ãô">
        <Signature>() : Mogre.SceneManager</Signature>
      </Method>
      <Method from="set_MinimapMgr" to="ýè">
        <Signature>(Mogre.SceneManager) : Void</Signature>
      </Method>
      <Method from="get_OverlayMgr" to="ýâ">
        <Signature>() : Mogre.SceneManager</Signature>
      </Method>
      <Method from="set_OverlayMgr" to="ýì">
        <Signature>(Mogre.SceneManager) : Void</Signature>
      </Method>
      <Method from="get_Window" to="ý">
        <Signature>() : Mogre.RenderWindow</Signature>
      </Method>
      <Method from="Go" to="ãü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="InjectPerformanceTestResults" to="ò">
        <Signature>(Wof.Controller.PerformanceTestFramework) : Void</Signature>
      </Method>
      <Method from="Setup" to="ýë">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="SetupEngineConfig" to="å">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="InitDirectSound" to="æ">
        <Signature>(IntPtr) : Void</Signature>
      </Method>
      <Method from="OgreForm_Resize" to="é">
        <Signature>(Object, System.EventArgs) : Void</Signature>
      </Method>
      <Method from="Configure" to="ýí">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="Configure2" to="ýê">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_CameraListener" to="ýã">
        <Signature>() : Wof.Controller.CameraListenerBase</Signature>
      </Method>
      <Method from="ChooseSceneManager" to="ýý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateMinimapCamera" to="ë">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateMinimapNoseCamera" to="í">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateOverlayCamera" to="ê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateCamera" to="ýî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetupShadows" to="ýä">
        <Signature>(Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="SetSplitPointsForMaterial" to="î">
        <Signature>(String, Mogre.Vector3) : Void</Signature>
      </Method>
      <Method from="WireEventListeners" to="ýó">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="RenderSystem_EventOccurred" to="ä">
        <Signature>(String, Mogre.Const_NameValuePairList) : Void</Signature>
      </Method>
      <Method from="LoopModelWorker" to="ýõ">
        <Signature>(Object, System.EventArgs) : Void</Signature>
      </Method>
      <Method from="ModelFrameStarted" to="ýñ">
        <Signature>(Mogre.FrameEvent) : Void</Signature>
      </Method>
      <Method from="FrameEnded" to="ýö">
        <Signature>(Mogre.FrameEvent) : Boolean</Signature>
      </Method>
      <Method from="FrameStarted" to="ýù">
        <Signature>(Mogre.FrameEvent) : Boolean</Signature>
      </Method>
      <Method from="HandleCameraInput" to="ýò">
        <Signature>(MOIS.Keyboard, MOIS.Mouse, System.Collections.Generic.IList`1, Mogre.FrameEvent, Mogre.Camera, Mogre.Camera, Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnUpdateModel" to="ýï">
        <Signature>(Mogre.FrameEvent) : Void</Signature>
      </Method>
      <Method from="TakeScreenshot" to="ó">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="TakeScreenshot" to="ýå">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="UpdateStats" to="ýæ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_UseBufferedInput" to="ýú">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="CreateInput" to="ýü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateScene" to="ýç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateMinimapViewport" to="õ">
        <Signature>(Int32, Single, Single, Single, Single) : Void</Signature>
      </Method>
      <Method from="CreateMainViewport" to="ñ">
        <Signature>(Int32, Single, Single, Single, Single) : Void</Signature>
      </Method>
      <Method from="CreateOverlayViewport" to="ö">
        <Signature>(Int32, Single, Single, Single, Single) : Void</Signature>
      </Method>
      <Method from="CreateViewports" to="ýû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetupResources" to="ù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetupResources" to="ï">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="CreateResourceListener" to="ýÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="LoadResources" to="ú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetCompositorEnabled" to="ýé">
        <Signature>(Wof.Controller.FrameWorkForm.CompositorTypes, Boolean) : Void</Signature>
      </Method>
      <Method from="CreateMotionBlurCompositor" to="ü">
        <Signature>(Mogre.Viewport) : Void</Signature>
      </Method>
      <Method from="AddCompositors" to="ç">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.FrameWorkForm.CompositorTypes" to="ô.âè">
      <Field from="OLDMOVIE" to="è" />
      <Field from="BLOOM" to="â" />
      <Field from="MOTION_BLUR" to="ì" />
      <Field from="GAUSSIAN_BLUR" to="ã" />
      <Field from="BW" to="ý" />
    </Type>
    <Type from="Wof.Controller.FrameWorkStaticHelper" to="ââ">
      <Field from="C_VIDEO_MODE" to="è" />
      <Field from="C_VSYNC" to="â" />
      <Field from="C_ANTIALIASING" to="ì" />
      <Field from="C_USE_NV_PERFHUD" to="ã" />
      <Field from="C_FULLSCREEN" to="ý" />
      <Field from="numberOfAvailableJoysticks" to="ò" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ShowOgreException" to="è">
        <Signature>(System.Runtime.InteropServices.SEHException) : Void</Signature>
      </Method>
      <Method from="ShowWofException" to="â">
        <Signature>(System.Exception) : Void</Signature>
      </Method>
      <Method from="GetAntialiasingModes" to="ì">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="GetCurrentColourDepth" to="ã">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetCurrentUseNVPerfHUD" to="ý">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="GetCurrentFullscreen" to="ò">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="GetCurrentFSAA" to="å">
        <Signature>() : Int32[]</Signature>
      </Method>
      <Method from="GetCurrentVsync" to="æ">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="GetCurrentVideoMode" to="é">
        <Signature>() : Mogre.Vector2</Signature>
      </Method>
      <Method from="GetVideoModes" to="ë">
        <Signature>(Boolean, Int32, Int32) : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="GetVideoModes" to="í">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="CreateSoundSystem" to="ê">
        <Signature>(Wof.Controller.CameraListenerBase, FSLOgreCS.FreeSL.FSL_SOUND_SYSTEM) : Boolean</Signature>
      </Method>
      <Method from="IsEnterPressed" to="î">
        <Signature>(MOIS.Keyboard, System.Collections.Generic.IList`1) : Boolean</Signature>
      </Method>
      <Method from="IsEscapePressed" to="ä">
        <Signature>(MOIS.Keyboard, System.Collections.Generic.IList`1) : Boolean</Signature>
      </Method>
      <Method from="GetJoystickButton" to="ó">
        <Signature>(System.Collections.Generic.IList`1, Int32) : Boolean</Signature>
      </Method>
      <Method from="SetNumberOfAvailableJoysticks" to="õ">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="GetNumberOfAvailableJoysticks" to="ñ">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="GetJoystickVector" to="ö">
        <Signature>(System.Collections.Generic.IList`1, Boolean) : Mogre.Vector2</Signature>
      </Method>
      <Method from="ReloadAllReources" to="ù">
        <Signature>(Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="DestroyScenes" to="ï">
        <Signature>(Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Indicators.AchievementIcon" to="âì">
      <Field from="achievement" to="è" />
      <Field from="achievementsWindow" to="â" />
      <Field from="viewport" to="ì" />
      <Field from="textContainer" to="ã" />
      <Field from="imageContainer" to="ý" />
      <Field from="imageContainerFulfilled" to="ò" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Achievement, BetaGUI.Window, Mogre.Viewport) : Void</Signature>
      </Method>
      <Method from="Update" to="è">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="DisposeImageContainer" to="â">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="DisposeFullfilledImageContainer" to="ì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="DisposeTextContainer" to="ã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Dispose" to="ýô">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Indicators.MessageEntry" to="âã">
      <Field from="noBackground" to="è" />
      <Field from="blinking" to="â" />
      <Field from="permanent" to="ì" />
      <Field from="x" to="ã" />
      <Field from="y" to="ý" />
      <Field from="message" to="ò" />
      <Field from="time" to="å" />
      <Field from="charHeight" to="æ" />
      <Field from="colourTop" to="é" />
      <Field from="colourBottom" to="ë" />
      <Field from="defaultColourTop" to="í" />
      <Field from="defaultColourBottom" to="ê" />
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, UInt32, String, Single, Mogre.ColourValue, Mogre.ColourValue, Boolean, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(UInt32, String, Single, Mogre.ColourValue, Mogre.ColourValue) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(UInt32, String) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, String, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, String, Boolean, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, String) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, String, UInt32) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="get_Blinking" to="è">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_Permanent" to="â">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_X" to="ì">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="IncreaseX" to="ã">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_Y" to="ý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="IncreaseY" to="ò">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_Message" to="å">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_Time" to="æ">
        <Signature>() : UInt32</Signature>
      </Method>
      <Method from="get_CharHeight" to="é">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="getCharHeightString" to="ë">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_ColourTop" to="í">
        <Signature>() : Mogre.ColourValue</Signature>
      </Method>
      <Method from="get_ColourTopString" to="ê">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_ColourBottom" to="î">
        <Signature>() : Mogre.ColourValue</Signature>
      </Method>
      <Method from="get_ColourBottomString" to="ä">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_DefaultColourTop" to="ó">
        <Signature>() : Mogre.ColourValue</Signature>
      </Method>
      <Method from="get_DefaultColourTopString" to="õ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_DefaultColourBottom" to="ñ">
        <Signature>() : Mogre.ColourValue</Signature>
      </Method>
      <Method from="get_DefaultColourBottomString" to="ö">
        <Signature>() : String</Signature>
      </Method>
      <Method from="RestoreDefaultColours" to="ù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetDefaultColours" to="ï">
        <Signature>(Mogre.ColourValue, Mogre.ColourValue) : Void</Signature>
      </Method>
      <Method from="GetCharsPerLine" to="ú">
        <Signature>(Single, Single) : Int32</Signature>
      </Method>
      <Method from="GetMessageAdjustedByContainerWidth" to="ü">
        <Signature>(Single, Single) : String</Signature>
      </Method>
      <Method from="get_NoBackground" to="ç">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="Init" to="òè">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Indicators.CenteredMessageEntry" to="âý">
      <Field from="viewport" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.Viewport, UInt32, String, Single, Mogre.ColourValue, Mogre.ColourValue, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.Viewport, UInt32, String) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.Viewport, String, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.Viewport, String) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.Viewport, String, UInt32) : Void</Signature>
      </Method>
      <Method from="CenterMessage" to="è">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Indicators.IconedMessageEntry" to="âò">
      <Field from="icon" to="è" />
      <Field from="customIconDimensions" to="â" />
      <Field from="iconFrames" to="ì" />
      <Field from="iconAnimationDuration" to="ã" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.Indicators.MessageEntry, String) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, UInt32, String, Single, Mogre.ColourValue, Mogre.ColourValue, Boolean, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, UInt32, String, Single, Mogre.ColourValue, Mogre.ColourValue, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(UInt32, String, Single, Mogre.ColourValue, Mogre.ColourValue) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(UInt32, String) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, String, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, String) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, String, UInt32) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, String, Boolean) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="CenterIconOnScreen" to="è">
        <Signature>(Mogre.Viewport) : Void</Signature>
      </Method>
      <Method from="UseAutoDectetedIconDimesions" to="â">
        <Signature>(Mogre.Viewport) : Void</Signature>
      </Method>
      <Method from="get_Icon" to="ì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="set_Icon" to="ã">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="get_CustomIconDimensions" to="ý">
        <Signature>() : Mogre.Vector2</Signature>
      </Method>
      <Method from="set_CustomIconDimensions" to="ò">
        <Signature>(Mogre.Vector2) : Void</Signature>
      </Method>
      <Method from="get_IconAnimationDuration" to="å">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_IconAnimationDuration" to="æ">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_IconFrames" to="é">
        <Signature>() : UInt32</Signature>
      </Method>
      <Method from="set_IconFrames" to="ë">
        <Signature>(UInt32) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.src.Controller.Input.Keyboard.KeyCodeConflictException" to="Wof.src.Controller.Input.Keyboard.KeyCodeConflictException" />
    <Type from="Wof.Misc.IniFileConfiguration`1" to="Wof.Misc.IniFileConfiguration`1" />
    <Type from="Wof.Controller.Input.KeyboardAndJoystick.KeyMap" to="âå">
      <Field from="russianKeyMapping" to="è" />
      <Field from="ukrainianKeyMapping" to="â" />
      <Field from="Instance" to="ì" />
      <Field from="_cam1" to="ã" />
      <Field from="_cam2" to="ý" />
      <Field from="_cam3" to="ò" />
      <Field from="_cam4" to="å" />
      <Field from="_cam5" to="æ" />
      <Field from="_cam6" to="é" />
      <Field from="_resetCamera" to="ë" />
      <Field from="_pausePlane" to="í" />
      <Field from="_gunFire" to="ê" />
      <Field from="_up" to="î" />
      <Field from="_down" to="ä" />
      <Field from="_left" to="ó" />
      <Field from="_right" to="õ" />
      <Field from="_altFire" to="ñ" />
      <Field from="_bulletTimeEffect" to="ö" />
      <Field from="_enter" to="ù" />
      <Field from="_back" to="ï" />
      <Field from="_gear" to="ú" />
      <Field from="_camera" to="ü" />
      <Field from="_zoomIn" to="ç" />
      <Field from="_zoomOut" to="û" />
      <Field from="_engine" to="ÿ" />
      <Field from="_spin" to="ô" />
      <Field from="_joystickVerticalAxisNo" to="âè" />
      <Field from="_joystickHorizontalAxisNo" to="ââ" />
      <Field from="_joystickBulletTimeEffect" to="âì" />
      <Field from="_joystickGun" to="âã" />
      <Field from="_joystickEnter" to="âý" />
      <Field from="_joystickGear" to="âò" />
      <Field from="_joystickRocket" to="âå" />
      <Field from="_joystickCamera" to="âæ" />
      <Field from="_joystickEngine" to="âé" />
      <Field from="_joystickEscape" to="âë" />
      <Field from="_joystickDeadZone" to="âí" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetString" to="è">
        <Signature>(String, String) : String</Signature>
      </Method>
      <Method from="GetKeyCode" to="â">
        <Signature>(String, String) : MOIS.KeyCode</Signature>
      </Method>
      <Method from="GetModifier" to="ì">
        <Signature>(String, String) : MOIS.Keyboard.Modifier</Signature>
      </Method>
      <Method from="ToString" to="òâ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_Cam1" to="ã">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_Cam1" to="ý">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_Cam2" to="ò">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_Cam2" to="å">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_Cam3" to="æ">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_Cam3" to="é">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_Cam4" to="ë">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_Cam4" to="í">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_Cam5" to="ê">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_Cam5" to="î">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_Cam6" to="ä">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_Cam6" to="ó">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_ResetCamera" to="õ">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_ResetCamera" to="ñ">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_PausePlane" to="ö">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_PausePlane" to="ù">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_Gun" to="ï">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_Gun" to="ú">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_Up" to="ü">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_Up" to="ç">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_Down" to="û">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_Down" to="ÿ">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_Left" to="ô">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_Left" to="âè">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_Right" to="ââ">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_Right" to="âì">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_Bombs" to="âã">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_Bombs" to="âý">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_BulletTimeEffect" to="âò">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_BulletTimeEffect" to="âå">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_Enter" to="âæ">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_Enter" to="âé">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_Escape" to="âë">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_Escape" to="âí">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_Gear" to="âê">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_Gear" to="âî">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_Camera" to="âä">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_Camera" to="âó">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_ZoomIn" to="âõ">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_ZoomIn" to="âñ">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_ZoomOut" to="âö">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_ZoomOut" to="âù">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_Engine" to="âï">
        <Signature>() : MOIS.KeyCode</Signature>
      </Method>
      <Method from="set_Engine" to="âú">
        <Signature>(MOIS.KeyCode) : Void</Signature>
      </Method>
      <Method from="get_Spin" to="âü">
        <Signature>() : Object</Signature>
      </Method>
      <Method from="set_Spin" to="âç">
        <Signature>(Object) : Void</Signature>
      </Method>
      <Method from="get_JoystickVerticalAxisNo" to="âû">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_JoystickVerticalAxisNo" to="âÿ">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_JoystickHorizontalAxisNo" to="âô">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_JoystickHorizontalAxisNo" to="ìè">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_JoystickBulletiTimeEffect" to="ìâ">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_JoystickBulletiTimeEffect" to="ìì">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_JoystickGun" to="ìã">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_JoystickGun" to="ìý">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_JoystickEnter" to="ìò">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_JoystickEnter" to="ìå">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_JoystickGear" to="ìæ">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_JoystickGear" to="ìé">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_JoystickRocket" to="ìë">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_JoystickRocket" to="ìí">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_JoystickCamera" to="ìê">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_JoystickCamera" to="ìî">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_JoystickEngine" to="ìä">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_JoystickEngine" to="ìó">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_JoystickEscape" to="ìõ">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_JoystickEscape" to="ìñ">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_JoystickDeadZone" to="ìö">
        <Signature>() : Double</Signature>
      </Method>
      <Method from="set_JoystickDeadZone" to="ìù">
        <Signature>(Double) : Void</Signature>
      </Method>
      <Method from="CheckKeyCodeConflict" to="ìï">
        <Signature>(MOIS.KeyCode, MOIS.KeyCode) : Boolean</Signature>
      </Method>
      <Method from="CheckKeyCodeConflict" to="ìú">
        <Signature>(String, MOIS.KeyCode) : Boolean</Signature>
      </Method>
      <Method from="CheckKeyCodeConflict" to="ìü">
        <Signature>(String, MOIS.KeyCode, String[]) : Boolean</Signature>
      </Method>
      <Method from="GetRussianName" to="ìç">
        <Signature>(MOIS.KeyCode) : String</Signature>
      </Method>
      <Method from="GetUkrainianName" to="ìû">
        <Signature>(MOIS.KeyCode) : String</Signature>
      </Method>
      <Method from="GetName" to="ìÿ">
        <Signature>(Object) : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Input.KeyboardAndJoystick.KeyMap.&lt;&gt;c__DisplayClass3" to="âå.&lt;&gt;c__DisplayClass3" />
    <Type from="Wof.Controller.Input.KeyboardAndJoystick.KeyMap.&lt;&gt;c__DisplayClass6" to="âå.&lt;&gt;c__DisplayClass6" />
    <Type from="BetaGUI.BetaGUIListener" to="âæ">
      <Method from="onButtonPress" to="òì">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.ControlsChangerHelper" to="âé">
      <Field from="lastId" to="è" />
      <Field from="parent" to="â" />
      <Field from="callback" to="ì" />
      <Field from="keyboard" to="ã" />
      <Field from="parentGuiWindow" to="ý" />
      <Field from="controlChangeWindow" to="ò" />
      <Field from="onControlsChanged" to="å" />
      <Field from="onControlsCaptureStarted" to="æ" />
      <Field from="onControlsCaptureEnded" to="é" />
      <Field from="onChangeButtonAdded" to="ë" />
      <Field from="identifiers" to="í" />
      <Field from="parentGui" to="ê" />
      <Field from="currentKeyId" to="î" />
      <Field from="capturingKeys" to="ä" />
      <Field from="twoStep" to="ó" />
      <Method from=".ctor" to=".ctor">
        <Signature>(MOIS.Keyboard, Wof.Controller.Screens.MenuScreen) : Void</Signature>
      </Method>
      <Method from="add_onControlsChanged" to="è">
        <Signature>(Wof.Controller.Screens.ControlsChangerHelper.OnControlsChanged) : Void</Signature>
      </Method>
      <Method from="remove_onControlsChanged" to="â">
        <Signature>(Wof.Controller.Screens.ControlsChangerHelper.OnControlsChanged) : Void</Signature>
      </Method>
      <Method from="add_onControlsCaptureStarted" to="ì">
        <Signature>(Wof.Controller.Screens.ControlsChangerHelper.OnControlsCaptureStarted) : Void</Signature>
      </Method>
      <Method from="remove_onControlsCaptureStarted" to="ã">
        <Signature>(Wof.Controller.Screens.ControlsChangerHelper.OnControlsCaptureStarted) : Void</Signature>
      </Method>
      <Method from="add_onControlsCaptureEnded" to="ý">
        <Signature>(Wof.Controller.Screens.ControlsChangerHelper.OnControlsCaptureEnded) : Void</Signature>
      </Method>
      <Method from="remove_onControlsCaptureEnded" to="ò">
        <Signature>(Wof.Controller.Screens.ControlsChangerHelper.OnControlsCaptureEnded) : Void</Signature>
      </Method>
      <Method from="add_onChangeButtonAdded" to="å">
        <Signature>(Wof.Controller.Screens.ControlsChangerHelper.OnChangeButtonAdded) : Void</Signature>
      </Method>
      <Method from="remove_onChangeButtonAdded" to="æ">
        <Signature>(Wof.Controller.Screens.ControlsChangerHelper.OnChangeButtonAdded) : Void</Signature>
      </Method>
      <Method from="ActivateKeyboard" to="é">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="DisableKeyboard" to="ë">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="keyboard_KeyPressed" to="í">
        <Signature>(MOIS.KeyEvent) : Boolean</Signature>
      </Method>
      <Method from="keyboard_KeyReleased" to="ê">
        <Signature>(MOIS.KeyEvent) : Boolean</Signature>
      </Method>
      <Method from="ControlsChangerHelper_onControlsCaptureStarted" to="î">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ControlsChangerHelper_onControlsCaptureEnded" to="ä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Setup" to="ó">
        <Signature>(BetaGUI.GUI, BetaGUI.Window) : Void</Signature>
      </Method>
      <Method from="GetLanguageKeyById" to="õ">
        <Signature>(UInt32) : String</Signature>
      </Method>
      <Method from="DisplayControlChangeWindow" to="ñ">
        <Signature>(UInt32) : Void</Signature>
      </Method>
      <Method from="CloseControlChangeWindow" to="ö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="onButtonPress" to="òì">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
      <Method from="AddChangeButton" to="ù">
        <Signature>(Mogre.Vector2, UInt32, String) : BetaGUI.Button</Signature>
      </Method>
      <Method from="AddControlsInfoToGui" to="ï">
        <Signature>(BetaGUI.Window, BetaGUI.GUI, Int32, Int32, Int32, Single, Single, UInt32) : Int32</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.ControlsChangerHelper.OnControlsChanged" to="âé.âë">
      <Method from=".ctor" to=".ctor">
        <Signature>(Object, IntPtr) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.ControlsChangerHelper.OnControlsCaptureStarted" to="âé.âí">
      <Method from=".ctor" to=".ctor">
        <Signature>(Object, IntPtr) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.ControlsChangerHelper.OnControlsCaptureEnded" to="âé.âê">
      <Method from=".ctor" to=".ctor">
        <Signature>(Object, IntPtr) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.ControlsChangerHelper.OnChangeButtonAdded" to="âé.âî">
      <Method from=".ctor" to=".ctor">
        <Signature>(Object, IntPtr) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.MenuScreen" to="âä">
      <Method from="DisplayGUI" to="òã">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="Displayed" to="òý">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="CleanUp" to="òò">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="OnUpdateModel" to="òå">
        <Signature>(Mogre.FrameEvent, MOIS.Mouse, MOIS.Keyboard, System.Collections.Generic.IList`1) : Void</Signature>
      </Method>
      <Method from="OnHandleViewUpdate" to="òæ">
        <Signature>(Mogre.FrameEvent, MOIS.Mouse, MOIS.Keyboard, System.Collections.Generic.IList`1) : Void</Signature>
      </Method>
      <Method from="OnHandleViewUpdateEnded" to="òé">
        <Signature>(Mogre.FrameEvent, MOIS.Mouse, MOIS.Keyboard, System.Collections.Generic.IList`1) : Void</Signature>
      </Method>
      <Method from="GetContainer" to="òë">
        <Signature>() : System.Windows.Forms.Control</Signature>
      </Method>
      <Method from="GetMargin" to="òí">
        <Signature>() : Mogre.Vector2</Signature>
      </Method>
      <Method from="ViewportToScreen" to="òê">
        <Signature>(Mogre.Vector2) : Mogre.Vector2</Signature>
      </Method>
      <Method from="GetFontSize" to="òî">
        <Signature>() : UInt32</Signature>
      </Method>
      <Method from="SetFontSize" to="òä">
        <Signature>(UInt32) : Void</Signature>
      </Method>
      <Method from="GetTextVSpacing" to="òó">
        <Signature>() : UInt32</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.AbstractScreen" to="âó">
      <Field from="C_RESPONSE_DELAY" to="è" />
      <Field from="C_MAX_OPTIONS" to="â" />
      <Field from="currentScreen" to="ì" />
      <Field from="fontSize" to="ã" />
      <Field from="forceRebuild" to="ý" />
      <Field from="displayed" to="ò" />
      <Field from="mGui" to="å" />
      <Field from="gameEventListener" to="æ" />
      <Field from="sceneMgr" to="é" />
      <Field from="viewport" to="ë" />
      <Field from="camera" to="í" />
      <Field from="screenTime" to="ê" />
      <Field from="cheats" to="î" />
      <Field from="cheatGodMode" to="ä" />
      <Field from="cheatPlane" to="ó" />
      <Field from="cheatAllLevels" to="õ" />
      <Field from="cheatLives" to="ñ" />
      <Field from="planeViews" to="ö" />
      <Field from="cloudNodes" to="ù" />
      <Field from="buttons" to="ï" />
      <Field from="wasLeftMousePressed" to="ú" />
      <Field from="wasUpKeyPressed" to="ü" />
      <Field from="wasDownKeyPressed" to="ç" />
      <Field from="wasEnterKeyPressed" to="û" />
      <Field from="keyDelay" to="ÿ" />
      <Field from="currentButton" to="ô" />
      <Field from="buttonsCount" to="âè" />
      <Field from="backButtonIndex" to="ââ" />
      <Field from="initialized" to="âì" />
      <Field from="clickSound" to="âã" />
      <Field from="cheatSound" to="âý" />
      <Field from="framework" to="âò" />
      <Field from="wereAllKeysReleased" to="âå" />
      <Field from="screenStateSet" to="âæ" />
      <Field from="planesInitialPositions" to="âé" />
      <Field from="lastTimeSinceLastFrame" to="âë" />
      <Field from="skipHandlingGuiButtons" to="âí" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera, UInt32) : Void</Signature>
      </Method>
      <Method from="SetFontSize" to="òä">
        <Signature>(UInt32) : Void</Signature>
      </Method>
      <Method from="get_ForceRebuild" to="è">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_ForceRebuild" to="â">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="GetFontSize" to="òî">
        <Signature>() : UInt32</Signature>
      </Method>
      <Method from="GetTextVSpacing" to="òó">
        <Signature>() : UInt32</Signature>
      </Method>
      <Method from="GetMargin" to="òí">
        <Signature>() : Mogre.Vector2</Signature>
      </Method>
      <Method from="Displayed" to="òý">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_PlaneViews" to="ì">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="set_PlaneViews" to="ã">
        <Signature>(System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="get_CloudNodes" to="ý">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="set_CloudNodes" to="ò">
        <Signature>(System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="get_XScale" to="å">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_YScale" to="æ">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="ViewportToScreen" to="òê">
        <Signature>(Mogre.Vector2) : Mogre.Vector2</Signature>
      </Method>
      <Method from="get_MousePosScreen" to="é">
        <Signature>() : System.Drawing.Point</Signature>
      </Method>
      <Method from="CenterMousePosition" to="ë">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetMousePosition" to="í">
        <Signature>(Wof.Controller.Screens.ScreenState) : Void</Signature>
      </Method>
      <Method from="SetMousePosition" to="ê">
        <Signature>(UInt32, UInt32) : Void</Signature>
      </Method>
      <Method from="SetMousePosition" to="î">
        <Signature>(System.Drawing.Point) : Void</Signature>
      </Method>
      <Method from="SetMousePosition" to="ä">
        <Signature>(Mogre.Vector2) : Void</Signature>
      </Method>
      <Method from="GetContainer" to="òë">
        <Signature>() : System.Windows.Forms.Control</Signature>
      </Method>
      <Method from="get_MousePos" to="ó">
        <Signature>() : System.Drawing.Point</Signature>
      </Method>
      <Method from="get_Viewport" to="õ">
        <Signature>() : Mogre.Viewport</Signature>
      </Method>
      <Method from="pinImageToButton" to="ñ">
        <Signature>(BetaGUI.Button, String) : Void</Signature>
      </Method>
      <Method from="pinImageToButton" to="ö">
        <Signature>(BetaGUI.Button, String, Single) : Void</Signature>
      </Method>
      <Method from="GetScreenState" to="ù">
        <Signature>() : Wof.Controller.Screens.ScreenState</Signature>
      </Method>
      <Method from="SetScreenState" to="ï">
        <Signature>(Wof.Controller.Screens.ScreenState) : Void</Signature>
      </Method>
      <Method from="CreateSkybox" to="òõ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateOcean" to="òñ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateScene" to="òö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlaceCamera" to="òù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="createMouse" to="ú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateGUI" to="òï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="DisplayGUI" to="òã">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="CleanUp" to="òò">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="KeyReceived" to="òú">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="MouseReceived" to="òü">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="OnHandleViewUpdateEnded" to="òé">
        <Signature>(Mogre.FrameEvent, MOIS.Mouse, MOIS.Keyboard, System.Collections.Generic.IList`1) : Void</Signature>
      </Method>
      <Method from="showAdText" to="ü">
        <Signature>(Mogre.Viewport) : Void</Signature>
      </Method>
      <Method from="hideAdText" to="ç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="HandleInput" to="û">
        <Signature>(MOIS.Mouse, MOIS.Keyboard, System.Collections.Generic.IList`1) : Void</Signature>
      </Method>
      <Method from="OnHandleViewUpdate" to="òæ">
        <Signature>(Mogre.FrameEvent, MOIS.Mouse, MOIS.Keyboard, System.Collections.Generic.IList`1) : Void</Signature>
      </Method>
      <Method from="FrameStarted" to="òç">
        <Signature>(Mogre.FrameEvent) : Void</Signature>
      </Method>
      <Method from="OnUpdateModel" to="òå">
        <Signature>(Mogre.FrameEvent, MOIS.Mouse, MOIS.Keyboard, System.Collections.Generic.IList`1) : Void</Signature>
      </Method>
      <Method from="receiveKeys" to="ÿ">
        <Signature>(MOIS.Keyboard, System.Collections.Generic.IList`1) : Void</Signature>
      </Method>
      <Method from="areAllKeysReleased" to="òû">
        <Signature>(MOIS.Keyboard, System.Collections.Generic.IList`1) : Boolean</Signature>
      </Method>
      <Method from="doCheating" to="òÿ">
        <Signature>(MOIS.Keyboard, System.Collections.Generic.IList`1) : Boolean</Signature>
      </Method>
      <Method from="doCheatGodMode" to="ô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="doCheatPlane" to="âè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="doCheatAllLevels" to="ââ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="doCheatLives" to="âì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="tryToPressBackButton" to="âã">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="tryToChangeSelectedButton" to="âý">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="deselectButtons" to="âò">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="deselectButtons" to="âå">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="selectButton" to="âæ">
        <Signature>(Int32, Boolean) : Void</Signature>
      </Method>
      <Method from="selectButton" to="âé">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="initButtons" to="âë">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="initButtons" to="âí">
        <Signature>(Int32, Int32) : Void</Signature>
      </Method>
      <Method from="PlayClickSound" to="âê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayCheatSound" to="âî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetOverlayColor" to="âä">
        <Signature>(Mogre.OverlayContainer, Mogre.ColourValue, Mogre.ColourValue) : Void</Signature>
      </Method>
      <Method from="Wrap" to="âó">
        <Signature>(String, Int32) : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.AbstractScreen.KeyDirection" to="âó.âõ">
      <Field from="UP" to="è" />
      <Field from="DOWN" to="â" />
      <Field from="NONE" to="ì" />
    </Type>
    <Type from="Wof.Controller.Screens.AbstractScreen.VoidDelegateVoid" to="âó.âñ">
      <Method from=".ctor" to=".ctor">
        <Signature>(Object, IntPtr) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.AbstractOptionsScreen" to="âö">
      <Field from="showRestartRequiredMessage" to="è" />
      <Field from="autoGoBack" to="â" />
      <Field from="options" to="ì" />
      <Field from="guiWindow" to="ã" />
      <Field from="exitButton" to="ý" />
      <Field from="nextButton" to="ò" />
      <Field from="prevButton" to="å" />
      <Field from="availableOptions" to="æ" />
      <Field from="OnOptionCreated" to="é" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="CreateGUI" to="òï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="createScreen" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetOptionDisplayText" to="òô">
        <Signature>(String) : String</Signature>
      </Method>
      <Method from="GetOptionPos" to="åè">
        <Signature>(UInt32, BetaGUI.Window) : Mogre.Vector4</Signature>
      </Method>
      <Method from="HighlightButton" to="â">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
      <Method from="LayoutOptions" to="åâ">
        <Signature>(System.Collections.Generic.List`1, BetaGUI.Window, BetaGUI.Callback) : Void</Signature>
      </Method>
      <Method from="getTitle" to="åì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetAvailableOptions" to="åã">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="ProcessOptionSelection" to="åý">
        <Signature>(Wof.Controller.Screens.ButtonHolder) : Void</Signature>
      </Method>
      <Method from="IsOptionSelected" to="åò">
        <Signature>(String) : Boolean</Signature>
      </Method>
      <Method from="add_OnOptionCreated" to="ì">
        <Signature>(Wof.Controller.Screens.AbstractOptionsScreen.OptionCreated) : Void</Signature>
      </Method>
      <Method from="remove_OnOptionCreated" to="ã">
        <Signature>(Wof.Controller.Screens.AbstractOptionsScreen.OptionCreated) : Void</Signature>
      </Method>
      <Method from="GoToBack" to="åå">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
      <Method from="onButtonPress" to="òì">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.AbstractOptionsScreen.OptionCreated" to="âö.âù">
      <Method from=".ctor" to=".ctor">
        <Signature>(Object, IntPtr) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.JoystickOptionsScreen" to="âï">
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="getTitle" to="åì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetAvailableOptions" to="åã">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="ProcessOptionSelection" to="åý">
        <Signature>(Wof.Controller.Screens.ButtonHolder) : Void</Signature>
      </Method>
      <Method from="IsOptionSelected" to="åò">
        <Signature>(String) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.ScrollingScreen" to="âú">
      <Field from="startFromBottom" to="è" />
      <Field from="bottomMargin" to="â" />
      <Field from="speed" to="ì" />
      <Field from="enabled" to="ã" />
      <Field from="messages" to="ý" />
      <Field from="messageOverlays" to="ò" />
      <Field from="cc" to="å" />
      <Field from="guiWindow" to="æ" />
      <Field from="outOfBounds" to="é" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera, Boolean, Single) : Void</Signature>
      </Method>
      <Method from="get_BottomMargin" to="è">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Speed" to="â">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_Speed" to="ì">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="set_Enabled" to="ã">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_Enabled" to="ý">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_OutOfBounds" to="ò">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="CleanUp" to="òò">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="CreateGUI" to="òï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="buildButtons" to="åæ">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="getBackButtonIndex" to="åé">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="buildMessages" to="åë">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="Translate" to="åí">
        <Signature>(Single, Boolean) : Void</Signature>
      </Method>
      <Method from="FrameStarted" to="òç">
        <Signature>(Mogre.FrameEvent) : Void</Signature>
      </Method>
      <Method from="onButtonPress" to="òì">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.LanguageDebugScreen" to="âü">
      <Field from="names" to="è" />
      <Field from="translatedStrings" to="â" />
      <Field from="totalStrings" to="ì" />
      <Field from="charsLimitPerLine" to="ã" />
      <Field from="scrollAmountOnClick" to="ý" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera, Boolean, Single) : Void</Signature>
      </Method>
      <Method from="get_ScrollAmountOnClick" to="è">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_ScrollAmountOnClick" to="â">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="getBackButtonIndex" to="åé">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="CreateGUI" to="òï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="buildButtons" to="åæ">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="buildMessages" to="åë">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="KeyReceived" to="òú">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="onButtonPress" to="òì">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
    </Type>
    <Type from="FSLOgreCS.FSLSoundObject" to="âç">
      <Field from="_sound" to="è" />
      <Field from="_name" to="â" />
      <Field from="_withSound" to="ì" />
      <Field from="_streaming" to="ã" />
      <Field from="_loop" to="ý" />
      <Field from="_shouldBePlaying" to="ò" />
      <Field from="_playing" to="å" />
      <Field from="_soundFile" to="æ" />
      <Field from="_baseGain" to="é" />
      <Method from=".ctor" to=".ctor">
        <Signature>(String, String, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(String, String, String, Boolean) : Void</Signature>
      </Method>
      <Method from="get_Streaming" to="è">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="Destroy" to="â">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="RemoveSound" to="ì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetSound" to="ã">
        <Signature>(String, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from="SetSound" to="ý">
        <Signature>(String, String, Boolean) : Void</Signature>
      </Method>
      <Method from="HasSound" to="ò">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_Name" to="å">
        <Signature>() : String</Signature>
      </Method>
      <Method from="set_Name" to="æ">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="get_SoundFile" to="é">
        <Signature>() : String</Signature>
      </Method>
      <Method from="Play" to="åê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Stop" to="ë">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="IsPlaying" to="í">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="Pause" to="ê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="IsPaused" to="î">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="LoopSound" to="ä">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="GetBaseGain" to="ó">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="SetBaseGain" to="õ">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="SetGain" to="ñ">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="ApplyGain" to="åî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Update" to="åä">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="FSLOgreCS.FSLAmbientSound" to="âû">
      <Method from=".ctor" to=".ctor">
        <Signature>(String, String, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(String, String, String, Boolean) : Void</Signature>
      </Method>
      <Method from="Update" to="åä">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="FSLOgreCS.FSLAmbientSoundMusic" to="âÿ">
      <Field from="_isOnPlaylist" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(String, String, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from="get_IsOnPlaylist" to="è">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_IsOnPlaylist" to="â">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="ApplyGain" to="åî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Update" to="åä">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Taskbar" to="âô">
      <Field from="SW_HIDE" to="è" />
      <Field from="SW_SHOW" to="â" />
      <Field from="VistaStartMenuCaption" to="ì" />
      <Field from="vistaStartMenuWnd" to="ã" />
      <Method from="GetWindowText" to="GetWindowText">
        <Signature>(IntPtr, System.Text.StringBuilder, Int32) : Int32</Signature>
      </Method>
      <Method from="EnumThreadWindows" to="EnumThreadWindows">
        <Signature>(Int32, Wof.Controller.Taskbar.EnumThreadProc, IntPtr) : Boolean</Signature>
      </Method>
      <Method from="FindWindow" to="FindWindow">
        <Signature>(String, String) : IntPtr</Signature>
      </Method>
      <Method from="FindWindowEx" to="FindWindowEx">
        <Signature>(IntPtr, IntPtr, String, String) : IntPtr</Signature>
      </Method>
      <Method from="FindWindowEx" to="FindWindowEx">
        <Signature>(IntPtr, IntPtr, IntPtr, String) : IntPtr</Signature>
      </Method>
      <Method from="ShowWindow" to="ShowWindow">
        <Signature>(IntPtr, Int32) : Int32</Signature>
      </Method>
      <Method from="GetWindowThreadProcessId" to="GetWindowThreadProcessId">
        <Signature>(IntPtr, Int32&amp;) : UInt32</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Show" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Hide" to="â">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="set_Visible" to="ì">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="SetVisibility" to="ã">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="GetVistaStartMenuWnd" to="ý">
        <Signature>(IntPtr) : IntPtr</Signature>
      </Method>
      <Method from="MyEnumThreadWindowsProc" to="ò">
        <Signature>(IntPtr, IntPtr) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Taskbar.EnumThreadProc" to="âô.ìè">
      <Method from=".ctor" to=".ctor">
        <Signature>(Object, IntPtr) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Misc.SerializableDictionary`2" to="Wof.Misc.SerializableDictionary`2" />
    <Type from="Wof.Model.Level.Achievement" to="Wof.Model.Level.Achievement" />
    <Type from="Wof.Model.Level.Achievement.AchievementFulfilledDelegate" to="Wof.Model.Level.Achievement.AchievementFulfilledDelegate" />
    <Type from="Wof.Model.Level.Achievement.AchievementUpdatedDelegate" to="Wof.Model.Level.Achievement.AchievementUpdatedDelegate" />
    <Type from="Wof.Model.Level.AchievementType" to="Wof.Model.Level.AchievementType" />
    <Type from="Wof.Model.Level.CompletedLevelsInfo" to="Wof.Model.Level.CompletedLevelsInfo" />
    <Type from="Wof.Model.Level.LevelInfo" to="Wof.Model.Level.LevelInfo" />
    <Type from="Wof.Model.Level.Common.IRenderableQuadrangles" to="ìâ">
      <Method from="get_BoundingQuadrangles" to="åó">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="get_Name" to="åõ">
        <Signature>() : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.IAttractorSource" to="Wof.Model.Level.IAttractorSource" />
    <Type from="Wof.Model.Level.LevelTiles.LevelTile" to="ìì">
      <Field from="TileWidth" to="è" />
      <Field from="attractorForce" to="â" />
      <Field from="yBegin" to="ì" />
      <Field from="viewXShift" to="ã" />
      <Field from="yEnd" to="ý" />
      <Field from="hitBound" to="ò" />
      <Field from="collisionRectangles" to="å" />
      <Field from="tilesIndex" to="æ" />
      <Field from="type" to="é" />
      <Field from="maxY" to="ë" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="get_GetXMLName" to="åñ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_YBegin" to="è">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_YBegin" to="â">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_ViewXShift" to="ì">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_MaxY" to="ã">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_YEnd" to="ý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_YEnd" to="ò">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_HitBound" to="å">
        <Signature>() : Wof.Model.Level.Common.Quadrangle</Signature>
      </Method>
      <Method from="get_ColisionRectangles" to="æ">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="set_TileIndex" to="åö">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_TileIndex" to="åù">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_TileKind" to="é">
        <Signature>() : Wof.Model.Level.LevelTiles.TileKind</Signature>
      </Method>
      <Method from="get_IsAircraftCarrier" to="ë">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_isShipBunker" to="í">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_Variant" to="ê">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="Update" to="åï">
        <Signature>(Int32, Single) : Void</Signature>
      </Method>
      <Method from="ToString" to="åú">
        <Signature>() : String</Signature>
      </Method>
      <Method from="InCollision" to="åü">
        <Signature>(Wof.Model.Level.Common.Quadrangle) : Wof.Model.Level.LevelTiles.CollisionType</Signature>
      </Method>
      <Method from="InSimpleCollision" to="åç">
        <Signature>(Wof.Model.Level.Common.PointD) : Boolean</Signature>
      </Method>
      <Method from="get_BoundingQuadrangles" to="åó">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="get_Name" to="åõ">
        <Signature>() : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.IslandTiles.IslandTile" to="ìã">
      <Field from="traversable" to="è" />
      <Field from="refToLevel" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32, System.Collections.Generic.List`1, Boolean) : Void</Signature>
      </Method>
      <Method from="set_Traversable" to="è">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_Traversable" to="â">
        <Signature>() : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.IDestroyable" to="ìý">
      <Method from="get_IsDestroyed" to="åû">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="Destroy" to="åÿ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Common.IRefsToLevel" to="ìò">
      <Method from="set_LevelProperties" to="åô">
        <Signature>(Wof.Model.Level.Level) : Void</Signature>
      </Method>
      <Method from="get_LevelProperties" to="æè">
        <Signature>() : Wof.Model.Level.Level</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.EnemyInstallationTile" to="ìå">
      <Field from="installationsCount" to="è" />
      <Field from="lockObject" to="â" />
      <Field from="enemyState" to="ì" />
      <Field from="soldiersCount" to="ã" />
      <Field from="maxInfantryCount" to="ý" />
      <Field from="generalsCount" to="ò" />
      <Field from="RegistrySoldierEvent" to="å" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32, Int32, Int32, System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Initializing" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_IsDestroyed" to="åû">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_SoldierCount" to="â">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_GeneralCount" to="ì">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="Destroy" to="åÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="IncrementIntactInstallationCount" to="ã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="DecrementIntactInstallationCount" to="ý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="set_LevelProperties" to="åô">
        <Signature>(Wof.Model.Level.Level) : Void</Signature>
      </Method>
      <Method from="get_LevelProperties" to="æè">
        <Signature>() : Wof.Model.Level.Level</Signature>
      </Method>
      <Method from="get_Count" to="ò">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_MaxInfantryCount" to="å">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="add_RegistrySoldierEvent" to="æ">
        <Signature>(Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.RegistrySoldier) : Void</Signature>
      </Method>
      <Method from="remove_RegistrySoldierEvent" to="é">
        <Signature>(Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.RegistrySoldier) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Weapon.IObject2D" to="ìæ">
      <Method from="get_Center" to="æâ">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="get_Bounds" to="æì">
        <Signature>() : Wof.Model.Level.Common.Quadrangle</Signature>
      </Method>
      <Method from="get_Direction" to="æã">
        <Signature>() : Wof.Model.Level.Direction</Signature>
      </Method>
      <Method from="get_RelativeAngle" to="æý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_MovementVector" to="æò">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="get_IsEnemy" to="æå">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_AbsoluteAngle" to="ææ">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="GetConsts" to="æé">
        <Signature>() : Wof.Model.Configuration.GameConsts.GenericPlane</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.BunkerTile" to="ìé">
      <Field from="NinetyDegree" to="è" />
      <Field from="EpsilonAngle" to="â" />
      <Field from="RecoveryTime" to="ì" />
      <Field from="valleyFireDistance" to="ã" />
      <Field from="RocketSpeedMultiplier" to="ý" />
      <Field from="RocketDistanceMultiplier" to="ò" />
      <Field from="timeUnit" to="å" />
      <Field from="MinAngle" to="æ" />
      <Field from="MaxAngle" to="é" />
      <Field from="ReflectorMoveStep" to="ë" />
      <Field from="currentTime" to="í" />
      <Field from="horizon" to="ê" />
      <Field from="doubleHorizon" to="î" />
      <Field from="angle" to="ä" />
      <Field from="lightAngle" to="ó" />
      <Field from="lightDirection" to="õ" />
      <Field from="destroyTime" to="ñ" />
      <Field from="hasRockets" to="ö" />
      <Field from="preparingToVolleyTime" to="ù" />
      <Field from="volleyPrepareDelay" to="ï" />
      <Field from="volleyCount" to="ú" />
      <Field from="maxVolleyCount" to="ü" />
      <Field from="preparingToNextMissileTime" to="ç" />
      <Field from="bazookaRotationPerSecond" to="û" />
      <Field from="weaponManager" to="ÿ" />
      <Field from="tempHorizon" to="ô" />
      <Field from="reflectorLockedOnTarget" to="âè" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32, Int32, Int32, System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="get_IsFireConditionMet" to="æë">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="Fire" to="æí">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="ReconstructAndCollectSoldiers" to="æê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Reconstruct" to="æî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Destroy" to="åÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="AddSoldier" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="AddGeneral" to="â">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetGunXShift" to="æä">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="SetAngle" to="æó">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="LockReflectorOnTarget" to="æõ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ReleaseReflectorOnTarget" to="æñ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetReflectorAngle" to="ì">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_Angle" to="ã">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_ReflectorAngle" to="ý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_IsIlluminatedShot" to="ò">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_UserPlaneNotYetDestroyed" to="å">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_UsingReflector" to="æ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_CanReconstruct" to="é">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_CanAddSoldier" to="ë">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_Center" to="æâ">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="get_Bounds" to="æì">
        <Signature>() : Wof.Model.Level.Common.Quadrangle</Signature>
      </Method>
      <Method from="get_Direction" to="æã">
        <Signature>() : Wof.Model.Level.Direction</Signature>
      </Method>
      <Method from="get_RelativeAngle" to="æý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_MovementVector" to="æò">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="get_IsEnemy" to="æå">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_HasRockets" to="í">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_HasRockets" to="ê">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="set_LevelProperties" to="åô">
        <Signature>(Wof.Model.Level.Level) : Void</Signature>
      </Method>
      <Method from="get_LevelProperties" to="æè">
        <Signature>() : Wof.Model.Level.Level</Signature>
      </Method>
      <Method from="get_Weapon" to="î">
        <Signature>() : Wof.Model.Level.Weapon.WeaponManager</Signature>
      </Method>
      <Method from="get_ShouldFire" to="ä">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_CanFire" to="ó">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_AbsoluteAngle" to="ææ">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="Wof.Model.Level.Weapon.IObject2D.GetConsts" to="æé">
        <Signature>() : Wof.Model.Configuration.GameConsts.GenericPlane</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.FlakBunkerTile" to="ìë">
      <Field from="MinAngleRight" to="è" />
      <Field from="MaxAngleRight" to="â" />
      <Field from="MinAngleLeft" to="ì" />
      <Field from="MaxAngleLeft" to="ã" />
      <Field from="DirectionChangePerSecond" to="ý" />
      <Field from="Epislon" to="ò" />
      <Field from="BarrelAdjustmentSpeed" to="å" />
      <Field from="yAngle" to="æ" />
      <Field from="adjustingBarrelAfterDirectionChange" to="é" />
      <Field from="direction" to="ë" />
      <Field from="initialDirection" to="í" />
      <Field from="changeDirection" to="ê" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32, Int32, Int32, System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="OnDirectionChanged" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Reconstruct" to="æî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetAccuracyCoefficient" to="â">
        <Signature>(Single) : Single</Signature>
      </Method>
      <Method from="get_IsFireConditionMet" to="ì">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="YRotation" to="ã">
        <Signature>(Int32, Single) : Void</Signature>
      </Method>
      <Method from="Update" to="åï">
        <Signature>(Int32, Single) : Void</Signature>
      </Method>
      <Method from="Fire" to="æí">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="Destroy" to="åÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_GetXMLName" to="åñ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_TileIndex" to="åù">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_TileIndex" to="åö">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_YAngle" to="ý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Direction" to="æã">
        <Signature>() : Wof.Model.Level.Direction</Signature>
      </Method>
      <Method from="get_ChangeDirection" to="ò">
        <Signature>() : System.Nullable`1</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.Watercraft.ISinkComponent" to="ìí">
      <Method from="StartSinking" to="æö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StopSinking" to="æù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="DoSinking" to="æï">
        <Signature>(Single, Single) : Single</Signature>
      </Method>
      <Method from="DoSubmerge" to="æú">
        <Signature>(Single, Single) : Single</Signature>
      </Method>
      <Method from="DoEmerge" to="æü">
        <Signature>(Single, Single) : Single</Signature>
      </Method>
      <Method from="StartEmerging" to="æç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StopEmerging" to="æû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StartSubmerging" to="æÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StopSubmerging" to="æô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_Depth" to="éè">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_IsSinking" to="éâ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsSunkDown" to="éì">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsEmerged" to="éã">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsSubmerged" to="éý">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_SubmergeTimeElapsed" to="éò">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_SinkingTimeElapsed" to="éå">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_IsSubmerging" to="éæ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsEmerging" to="éé">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_Tile" to="éë">
        <Signature>() : Wof.Model.Level.LevelTiles.LevelTile</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.Watercraft.ShipManagers.ShipManager" to="ìê">
      <Field from="_shipTiles" to="è" />
      <Field from="_shipBunkerTiles" to="â" />
      <Field from="_sinkComponents" to="ì" />
      <Field from="_typeOfEnemyShip" to="ã" />
      <Field from="_shipState" to="ý" />
      <Field from="_refToLevel" to="ò" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.TypeOfEnemyShip) : Void</Signature>
      </Method>
      <Method from="get_TypeOfShip" to="è">
        <Signature>() : Wof.Model.Level.LevelTiles.Watercraft.TypeOfEnemyShip</Signature>
      </Method>
      <Method from="get_State" to="â">
        <Signature>() : Wof.Model.Level.LevelTiles.Watercraft.ShipState</Signature>
      </Method>
      <Method from="get_ShipTiles" to="ì">
        <Signature>() : System.Collections.ObjectModel.ReadOnlyCollection`1</Signature>
      </Method>
      <Method from="get_ShipBunkerTiles" to="ã">
        <Signature>() : System.Collections.ObjectModel.ReadOnlyCollection`1</Signature>
      </Method>
      <Method from="get_SinkComponents" to="ý">
        <Signature>() : System.Collections.ObjectModel.ReadOnlyCollection`1</Signature>
      </Method>
      <Method from="get_Count" to="ò">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_IsLastHit" to="éí">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_Item" to="å">
        <Signature>(Int32) : Wof.Model.Level.LevelTiles.Watercraft.ShipTile</Signature>
      </Method>
      <Method from="AddShipTile" to="æ">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.ShipTile) : Void</Signature>
      </Method>
      <Method from="AddShipBunkerTile" to="é">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.ShipBunkerTile) : Void</Signature>
      </Method>
      <Method from="TorpedoHit" to="éê">
        <Signature>(Wof.Model.Level.Weapon.Ammunition, Wof.Model.Level.LevelTiles.Watercraft.ShipTile) : Void</Signature>
      </Method>
      <Method from="Update" to="éî">
        <Signature>(Wof.Model.Level.Planes.Plane, Single, Single) : Void</Signature>
      </Method>
      <Method from="ManageSubmergence" to="éä">
        <Signature>(Wof.Model.Level.Planes.Plane, Single, Single) : Void</Signature>
      </Method>
      <Method from="SinkTiles" to="ë">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="set_LevelProperties" to="åô">
        <Signature>(Wof.Model.Level.Level) : Void</Signature>
      </Method>
      <Method from="get_LevelProperties" to="æè">
        <Signature>() : Wof.Model.Level.Level</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.Watercraft.ShipManagers.SubmarineManager" to="ìî">
      <Field from="SubmergingDistanceToPlane" to="è" />
      <Field from="EmergingDistanceToPlane" to="â" />
      <Field from="timeSinceLastSubmerge" to="ì" />
      <Field from="timeSinceLastSubmergeMin" to="ã" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.TypeOfEnemyShip) : Void</Signature>
      </Method>
      <Method from="TorpedoHit" to="éê">
        <Signature>(Wof.Model.Level.Weapon.Ammunition, Wof.Model.Level.LevelTiles.Watercraft.ShipTile) : Void</Signature>
      </Method>
      <Method from="ManageSubmergence" to="éä">
        <Signature>(Wof.Model.Level.Planes.Plane, Single, Single) : Void</Signature>
      </Method>
      <Method from="get_IsLastHit" to="éí">
        <Signature>() : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.Watercraft.SinkComponent" to="ìä">
      <Field from="maxSinkingTime" to="è" />
      <Field from="maxSubmergeTime" to="â" />
      <Field from="maxEmergeTime" to="ì" />
      <Field from="tile" to="ã" />
      <Field from="isSubmerging" to="ý" />
      <Field from="SinkingSpeed" to="ò" />
      <Field from="SubmergingSpeed" to="å" />
      <Field from="EmergingSpeed" to="æ" />
      <Field from="depth" to="é" />
      <Field from="isSinking" to="ë" />
      <Field from="isSunkDown" to="í" />
      <Field from="sinkingTimeElapsed" to="ê" />
      <Field from="submergeTimeElapsed" to="î" />
      <Field from="emergeTimeElapsed" to="ä" />
      <Field from="waterYBreakingPower" to="ó" />
      <Field from="isSubmerged" to="õ" />
      <Field from="sinkingTime" to="ñ" />
      <Field from="isEmerging" to="ö" />
      <Field from="isEmerged" to="ù" />
      <Field from="irefsToLevel" to="ï" />
      <Field from="YVal" to="ú" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Model.Level.Common.IRefsToLevel) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_Depth" to="éè">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="StartSinking" to="æö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StopSinking" to="æù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_IsSinking" to="éâ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsSunkDown" to="éì">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="DoSinking" to="æï">
        <Signature>(Single, Single) : Single</Signature>
      </Method>
      <Method from="DoSubmerge" to="æú">
        <Signature>(Single, Single) : Single</Signature>
      </Method>
      <Method from="DoEmerge" to="æü">
        <Signature>(Single, Single) : Single</Signature>
      </Method>
      <Method from="ChangeTileDepth" to="è">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Single) : Void</Signature>
      </Method>
      <Method from="StartEmerging" to="æç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StopEmerging" to="æû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StartSubmerging" to="æÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StopSubmerging" to="æô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_IsEmerged" to="éã">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsSubmerged" to="éý">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_SubmergeTimeElapsed" to="éò">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_SinkingTimeElapsed" to="éå">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_IsSubmerging" to="éæ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsEmerging" to="éé">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_Tile" to="éë">
        <Signature>() : Wof.Model.Level.LevelTiles.LevelTile</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.MissionType" to="Wof.Model.Level.MissionType" />
    <Type from="Wof.Model.Level.Planes.Plane" to="ìó">
      <Field from="engineUnstartableOilThreshold" to="è" />
      <Field from="potentiallyLandingMaxDistance" to="â" />
      <Field from="potentiallyBadLandingMaxDistance" to="ì" />
      <Field from="angleOnCarrier" to="ã" />
      <Field from="maxTurningAngle" to="ý" />
      <Field from="wheelDistanceFromCenter" to="ò" />
      <Field from="minAirscrewSpeed" to="å" />
      <Field from="maxAirscrewSpeed" to="æ" />
      <Field from="gravitationalAcceleration" to="é" />
      <Field from="justAfterTakeOffTimerMax" to="ë" />
      <Field from="maxOil" to="í" />
      <Field from="maxPetrol" to="ê" />
      <Field from="maxWheelOutAngle" to="î" />
      <Field from="landingAngle" to="ä" />
      <Field from="maxFireBombAngle" to="ó" />
      <Field from="MaxFireTorpedoAngle" to="õ" />
      <Field from="maxHeightTurningRange" to="ñ" />
      <Field from="wreckTime" to="ö" />
      <Field from="maxSlippingFromCarrierSpeed" to="ù" />
      <Field from="maxSlipingFromCarrierAngle" to="ï" />
      <Field from="SlippingFromCarrierAcceleration" to="ú" />
      <Field from="rightTakeOffOilLoss" to="ü" />
      <Field from="rotateStep" to="ç" />
      <Field from="slowWheelingSpeed" to="û" />
      <Field from="maxFastWheelingSpeed" to="ÿ" />
      <Field from="maxWheelOutSpeed" to="ô" />
      <Field from="changeWheelsSpeed" to="âè" />
      <Field from="minFlyingSpeed" to="ââ" />
      <Field from="width" to="âì" />
      <Field from="height" to="âã" />
      <Field from="oilLeak" to="âý" />
      <Field from="turningTileMargin" to="âò" />
      <Field from="maxRotateValue" to="âå" />
      <Field from="rotateBrakingFactor" to="âæ" />
      <Field from="waterXBreakingPower" to="âé" />
      <Field from="waterYBreakingPower" to="âë" />
      <Field from="RegisterWeaponEvent" to="âí" />
      <Field from="startPositionInfo" to="âê" />
      <Field from="planeType" to="âî" />
      <Field from="airscrewSpeed" to="âä" />
      <Field from="isEnemy" to="âó" />
      <Field from="isChangingDirection" to="âõ" />
      <Field from="lastIsChangingDirection" to="âñ" />
      <Field from="bounds" to="âö" />
      <Field from="movementVector" to="âù" />
      <Field from="motorState" to="âï" />
      <Field from="planeState" to="âú" />
      <Field from="petrol" to="âü" />
      <Field from="oil" to="âç" />
      <Field from="outOfOilFaultyEngineTimer" to="âû" />
      <Field from="outOfOilFaultyEngineTimerMax" to="âÿ" />
      <Field from="isEngineFaulty" to="âô" />
      <Field from="attractorTarget" to="ìè" />
      <Field from="counterStartedEngine" to="ìâ" />
      <Field from="locationState" to="ìì" />
      <Field from="wheelsState" to="ìã" />
      <Field from="direction" to="ìý" />
      <Field from="isLeftPressed" to="ìò" />
      <Field from="isBlockLeft" to="ìå" />
      <Field from="isRightPressed" to="ìæ" />
      <Field from="isBlockRight" to="ìé" />
      <Field from="isDownPressed" to="ìë" />
      <Field from="isSpinPressed" to="ìí" />
      <Field from="isBlockDown" to="ìê" />
      <Field from="isUpPressed" to="ìî" />
      <Field from="inputVector" to="ìä" />
      <Field from="isBlockUp" to="ìó" />
      <Field from="isBlockFireGun" to="ìõ" />
      <Field from="isBlockFireRocket" to="ìñ" />
      <Field from="isBlockSpin" to="ìö" />
      <Field from="isEngineKeyPressed" to="ìù" />
      <Field from="isBlockEngine" to="ìï" />
      <Field from="isEngineJustStarted" to="ìú" />
      <Field from="isEngineJustStopped" to="ìü" />
      <Field from="isJustAfterTakeOff" to="ìç" />
      <Field from="justAfterTakeOffTimer" to="ìû" />
      <Field from="isLandingHintDelivered" to="ìÿ" />
      <Field from="turningTime" to="ìô" />
      <Field from="turningTimeLeft" to="ãè" />
      <Field from="level" to="ãâ" />
      <Field from="turningVector" to="ãì" />
      <Field from="weaponManager" to="ãã" />
      <Field from="landingState" to="ãý" />
      <Field from="breakingEndCarrierTile" to="ãò" />
      <Field from="isLanding" to="ãå" />
      <Field from="isAfterFlyingDown" to="ãæ" />
      <Field from="wreckTimeElapsed" to="ãé" />
      <Field from="isSinking" to="ãë" />
      <Field from="isMaxHeightRotate" to="ãí" />
      <Field from="rotateValue" to="ãê" />
      <Field from="isFallingFromCarrier" to="ãî" />
      <Field from="isSlippingFromCarrier" to="ãä" />
      <Field from="isFallingAfterCrash" to="ãó" />
      <Field from="lineCatchSpeed" to="ãõ" />
      <Field from="catchLinePositionX" to="ãñ" />
      <Field from="breakingEndPositionX" to="ãö" />
      <Field from="isRaisingTail" to="ãù" />
      <Field from="isLoweringTail" to="ãï" />
      <Field from="spinned" to="ãú" />
      <Field from="constantsObj" to="ãü" />
      <Field from="debugInfo" to="ãç" />
      <Field from="LastFireTick" to="ãû" />
      <Field from="_planePaused" to="ãÿ" />
      <Field from="isOnRestoreAmmunitionTileBefore" to="ãô" />
      <Field from="planePaused" to="ýè" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Level, Boolean, Wof.Model.Level.Planes.PlaneType) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Level, Boolean, Wof.Model.Level.Planes.StartPositionInfo, Wof.Model.Level.Planes.PlaneType) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Level, Single, Single, Boolean, Wof.Model.Level.Planes.StartPositionInfo, Wof.Model.Level.Planes.PlaneType) : Void</Signature>
      </Method>
      <Method from="get_MinFlyingSpeed" to="è">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_MaxOil" to="â">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_MaxPetrol" to="ì">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="add_RegisterWeaponEvent" to="ã">
        <Signature>(Wof.Model.Level.Planes.RegisterWeapon) : Void</Signature>
      </Method>
      <Method from="remove_RegisterWeaponEvent" to="ý">
        <Signature>(Wof.Model.Level.Planes.RegisterWeapon) : Void</Signature>
      </Method>
      <Method from="get_StartPositionInfo" to="ò">
        <Signature>() : Wof.Model.Level.Planes.StartPositionInfo</Signature>
      </Method>
      <Method from="get_HasBiDirectionalGun" to="å">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_GunType" to="æ">
        <Signature>() : Wof.Model.Level.Weapon.MissileBase.CollisionDirectionLocation</Signature>
      </Method>
      <Method from="get_AirscrewSpeed" to="é">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_IsEnemy" to="æå">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_Petrol" to="ë">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Oil" to="í">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_IsEngineFaulty" to="ê">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_AttractorTarget" to="î">
        <Signature>() : Wof.Model.Level.AttractorTarget</Signature>
      </Method>
      <Method from="get_IsBlockLeft" to="ä">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_IsBlockLeft" to="ó">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_IsBlockRight" to="õ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_IsBlockRight" to="ñ">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_IsBlockDown" to="ö">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_IsBlockDown" to="ù">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="GetInputVectorValueNormalised" to="ï">
        <Signature>(Wof.Model.Level.DirectionAxis) : Single</Signature>
      </Method>
      <Method from="get_IsBlockUp" to="ú">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_IsBlockUp" to="ü">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_IsBlockFireGun" to="ç">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_IsBlockFireGun" to="û">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_IsBlockFireRocket" to="ÿ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_IsBlockFireRocket" to="ô">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_IsBlockSpin" to="âè">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_IsBlockSpin" to="ââ">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_IsBlockEngine" to="âì">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_IsBlockEngine" to="âã">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_MiddleLine" to="âý">
        <Signature>() : Wof.Model.Level.Common.Line</Signature>
      </Method>
      <Method from="get_Level" to="âò">
        <Signature>() : Wof.Model.Level.Level</Signature>
      </Method>
      <Method from="get_RotateValue" to="âå">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Spinned" to="âæ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="GetConsts" to="æé">
        <Signature>() : Wof.Model.Configuration.GameConsts.GenericPlane</Signature>
      </Method>
      <Method from="SetupConstants" to="éó">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="UpdateDebugInfo" to="âé">
        <Signature>(String, Object) : Void</Signature>
      </Method>
      <Method from="EndDebugIteration" to="âë">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_Position" to="âí">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="get_IsEngineWorking" to="âê">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_CanTryToStartEngine" to="âî">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_CanEngineBeStartedNow" to="âä">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_StartEngineCounter" to="âó">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_StartEngineCounter" to="âõ">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_Carrier" to="âñ">
        <Signature>() : Wof.Model.Level.Carriers.Carrier</Signature>
      </Method>
      <Method from="get_PlaneState" to="âö">
        <Signature>() : Wof.Model.Level.Planes.PlaneState</Signature>
      </Method>
      <Method from="get_Center" to="æâ">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="get_Bounds" to="æì">
        <Signature>() : Wof.Model.Level.Common.Quadrangle</Signature>
      </Method>
      <Method from="get_MovementVector" to="æò">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="get_LocationState" to="âù">
        <Signature>() : Wof.Model.Level.Planes.LocationState</Signature>
      </Method>
      <Method from="set_LocationState" to="âï">
        <Signature>(Wof.Model.Level.Planes.LocationState) : Void</Signature>
      </Method>
      <Method from="get_WheelsState" to="âú">
        <Signature>() : Wof.Model.Level.Planes.WheelsState</Signature>
      </Method>
      <Method from="set_WheelsState" to="âü">
        <Signature>(Wof.Model.Level.Planes.WheelsState) : Void</Signature>
      </Method>
      <Method from="get_WheelsPosition" to="âç">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="get_Weapon" to="âû">
        <Signature>() : Wof.Model.Level.Weapon.WeaponManager</Signature>
      </Method>
      <Method from="get_CanSlowWheeling" to="âÿ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_CanFastWheeling" to="âô">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_CanChangeDirectionOnAircraft" to="ìè">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_CanTurnAround" to="ìâ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_CanSpin" to="ìì">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_Angle" to="ìã">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_RelativeAngle" to="æý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_ClimbingAngle" to="ìý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Direction" to="æã">
        <Signature>() : Wof.Model.Level.Direction</Signature>
      </Method>
      <Method from="get_IsChangingDirection" to="ìò">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_HasSpeedToStart" to="ìå">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsPlaneNotAboveCarrier" to="ìæ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsPlaneAboveCarrier" to="ìé">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsCenterAboveCarrier" to="ìë">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsGearAboveCarrier" to="ìí">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_CanChangeAmmunition" to="ìê">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsOnRestoreAmmunitionTile" to="ìî">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_CanFireRocket" to="ìä">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsNextTorpedoAvailable" to="ìó">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_CanFireTorpedo" to="ìõ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_CanFireBomb" to="ìñ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_Speed" to="ìö">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_Speed" to="ìù">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_IsOnAircraftCarrier" to="ìï">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_Width" to="ìú">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Height" to="ìü">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="XDistanceToClosestPlane" to="ìç">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="YDistanceToClosestPlane" to="ìû">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="DistanceToClosestEnemyPlane" to="ìÿ">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="DistanceToPlane" to="ìô">
        <Signature>(Wof.Model.Level.Planes.Plane) : Single</Signature>
      </Method>
      <Method from="XDistanceToPlane" to="ãè">
        <Signature>(Wof.Model.Level.Planes.Plane) : Single</Signature>
      </Method>
      <Method from="YDistanceToPlane" to="ãâ">
        <Signature>(Wof.Model.Level.Planes.Plane) : Single</Signature>
      </Method>
      <Method from="XDistanceToTile" to="ãì">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Single</Signature>
      </Method>
      <Method from="YDistanceToTile" to="ãã">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Single</Signature>
      </Method>
      <Method from="DistanceToTile" to="ãý">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Single</Signature>
      </Method>
      <Method from="InitNextLife" to="ãò">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ReInit" to="ãå">
        <Signature>(Wof.Model.Level.Planes.StartPositionInfo) : Void</Signature>
      </Method>
      <Method from="Init" to="ãæ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StopPlane" to="ãé">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StartEngine" to="ãë">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StopEngine" to="ãí">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="Rotate" to="ãê">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="RotateUp" to="ãî">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="RotateDown" to="ãä">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="Move" to="éõ">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="SteerHorizontal" to="ãó">
        <Signature>(Wof.Model.Level.Direction, Single) : Void</Signature>
      </Method>
      <Method from="Spin" to="ãõ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="TurnRound" to="ãñ">
        <Signature>(Wof.Model.Level.Direction, Wof.Model.Level.Planes.TurnType) : Void</Signature>
      </Method>
      <Method from="OilRefuel" to="ãö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PetrolRefuel" to="ãù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="RepairPlane" to="ãï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PointsAbove" to="ãú">
        <Signature>(Single) : Int32</Signature>
      </Method>
      <Method from="ToString" to="éñ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="SetInputFlag" to="ãü">
        <Signature>(Wof.Model.Level.Planes.InputFlag) : Void</Signature>
      </Method>
      <Method from="OnPrepareChangeDirectionEnd" to="ãç">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="OnChangeDirectionEnd" to="ãû">
        <Signature>(Wof.Model.Level.Planes.TurnType) : Void</Signature>
      </Method>
      <Method from="HorizontalReflection" to="ãÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnSpinEnd" to="ãô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ToggleGear" to="ýè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CanPlaneToggleGear" to="ýâ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="GearToggled" to="ýì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Crash" to="ýã">
        <Signature>(Single, Wof.Model.Level.LevelTiles.TileKind) : Void</Signature>
      </Method>
      <Method from="Crash" to="ýý">
        <Signature>(Single, Wof.Model.Level.LevelTiles.TileKind, Wof.Model.Level.IAttractorSource) : Void</Signature>
      </Method>
      <Method from="Destroy" to="ýò">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Hit" to="ýå">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="Hit" to="ýæ">
        <Signature>(Wof.Model.Level.Weapon.IObject2D) : Void</Signature>
      </Method>
      <Method from="DestroyBunkersAndKillSoldiers" to="ýé">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="weaponManager_RegisterWeaponToModelEvent" to="ýë">
        <Signature>(Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="ResetInputFlags" to="ýí">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="UnblockAllInput" to="ýê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="BlockMovementInput" to="ýî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="UnblockMovementInput" to="ýä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ProcessInput" to="ýó">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="changeAngleWhileWheeling" to="ýõ">
        <Signature>(Single, Single, Single) : Void</Signature>
      </Method>
      <Method from="lowerTailStep" to="ýñ">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="raiseTailStep" to="ýö">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="addSpeedToMax" to="ýù">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="subSpeedToMin" to="ýï">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="FallDown" to="ýú">
        <Signature>(Single, Single, Wof.Model.Level.Planes.Plane.GlideType) : Void</Signature>
      </Method>
      <Method from="isUnderWater" to="ýü">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="TryToStartEngine" to="ýç">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="TryToStopEngine" to="ýû">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="ResetEngineParameters" to="ýÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetStartingPosition" to="ýô">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="GetTurningProgress" to="òè">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="UpdateAirscrewSpeed" to="òâ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OutOfPetrolOrOil" to="òì">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_IsPotentiallyLanding" to="òã">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsPotentiallyBadLanding" to="òý">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="LandingProcess" to="òò">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="InitLandingWheeling" to="òå">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="LandingWheeling" to="òæ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="LandingBreaking" to="òé">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="ReleaseLine" to="òë">
        <Signature>(Wof.Model.Level.LevelTiles.AircraftCarrierTiles.AircraftCarrierTile) : Void</Signature>
      </Method>
      <Method from="AirstripContact" to="òí">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="HeightLimit" to="òê">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="VerticalBoundsLimit" to="òî">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="LeaveCarrier" to="òä">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="FallFromCarrier" to="òó">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="MoveAfterCrash" to="òõ">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="Sink" to="òñ">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="UpdatePlaneAngle" to="òö">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="IncreaseRotateValue" to="òù">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="UpdateInputVector" to="òï">
        <Signature>(System.Nullable`1) : Void</Signature>
      </Method>
      <Method from="DecreaseRotateValue" to="òú">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_BoundingQuadrangles" to="åó">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="get_Name" to="åõ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_PlaneType" to="òü">
        <Signature>() : Wof.Model.Level.Planes.PlaneType</Signature>
      </Method>
      <Method from="get_OilLeak" to="òç">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_AbsoluteAngle" to="ææ">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_PlanePaused" to="òû">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_PlanePaused" to="òÿ">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_ConstantsObj" to="òô">
        <Signature>() : Wof.Model.Configuration.GameConsts.GenericPlane</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Planes.Plane.GlideType" to="ìó.ìõ">
      <Field from="destroyed" to="è" />
      <Field from="heightLimit" to="â" />
      <Field from="glider" to="ì" />
    </Type>
    <Type from="Wof.Model.Level.Planes.EnemyPlaneBase" to="ìñ">
      <Field from="warCryTimerMin" to="è" />
      <Field from="distanceFromUserPlane" to="â" />
      <Field from="safeUserPlaneHeightDiff" to="ì" />
      <Field from="distanceFromStoragePlanes" to="ã" />
      <Field from="maxAngle" to="ý" />
      <Field from="userPlaneHeightDiff" to="ò" />
      <Field from="warCryTimer" to="å" />
      <Field from="temp" to="æ" />
      <Field from="interpolateSet" to="é" />
      <Field from="useInterpolation" to="ë" />
      <Field from="interpolationPoints" to="í" />
      <Field from="lastInterpolationNull" to="ê" />
      <Field from="timeToNextRocket" to="î" />
      <Field from="isAlarmDelivered" to="ä" />
      <Field from="carrierDistance" to="ó" />
      <Field from="attackObject" to="õ" />
      <Field from="evadeLoopTime" to="ñ" />
      <Field from="evadeLoopTimeMax" to="ö" />
      <Field from="evadeLoop" to="ù" />
      <Field from="evadeLoopMax" to="ï" />
      <Field from="evadeDirection" to="ú" />
      <Field from="lastAbsDistance" to="ü" />
      <Field from="isEvading" to="ç" />
      <Field from="randomDistance" to="û" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Level, Single, Single, Wof.Model.Level.Planes.PlaneType) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Level, Wof.Model.Level.Planes.PlaneType) : Void</Signature>
      </Method>
      <Method from="get_UseInterpolation" to="è">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_UseInterpolation" to="â">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_IsEvading" to="ì">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="InitIterpolateSet" to="ã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_AttackObject" to="ý">
        <Signature>() : Wof.Model.Level.Planes.AttackObject</Signature>
      </Method>
      <Method from="set_AttackObject" to="ò">
        <Signature>(Wof.Model.Level.Planes.AttackObject) : Void</Signature>
      </Method>
      <Method from="get_ShouldTurnRound" to="å">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsPassingUserPlane" to="æ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsAfterUserPlane" to="é">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_ArePlanesOnCarrierBehind" to="ë">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_ShouldSteerUp" to="í">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_ShouldBeChasingUserPlane" to="ê">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_PlanesOnAircraftPos" to="î">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="get_CanHitStoragePlanes" to="ä">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_UserPlaneCrashThreat" to="ó">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="EvadePlaneWhenChased" to="õ">
        <Signature>(Wof.Model.Level.Planes.Plane, Single, Single) : Void</Signature>
      </Method>
      <Method from="Move" to="éõ">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="ChangePitch" to="ñ">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="SteerToHorizon" to="ö">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="FireRocket" to="ù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="AttackUserPlane" to="ï">
        <Signature>(Wof.Model.Level.Planes.Plane, Single) : Void</Signature>
      </Method>
      <Method from="AttackStoragePlanes" to="ú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="AvoidUserPlaneCrash" to="ü">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="AvoidCrash" to="ç">
        <Signature>(Single, Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="AvoidEnemyPlaneCrash" to="û">
        <Signature>(Single, Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="isTurnedTowardsFaceOf" to="ÿ">
        <Signature>(Wof.Model.Level.Weapon.IObject2D) : Boolean</Signature>
      </Method>
      <Method from="isChasedBy" to="ô">
        <Signature>(Wof.Model.Level.Weapon.IObject2D) : Boolean</Signature>
      </Method>
      <Method from="IsTurnedTowardsUserPlane" to="âè">
        <Signature>(Wof.Model.Level.Planes.Plane) : Boolean</Signature>
      </Method>
      <Method from="GetNearestShipCrashThreat" to="ââ">
        <Signature>() : Wof.Model.Level.LevelTiles.Watercraft.ShipTile</Signature>
      </Method>
      <Method from="GetConsts" to="âì">
        <Signature>() : Wof.Model.Configuration.GameConsts.EnemyPlaneBase</Signature>
      </Method>
      <Method from="GetNearestEnemyPlaneCrashThreat" to="âã">
        <Signature>() : Wof.Model.Level.Planes.EnemyPlaneBase</Signature>
      </Method>
      <Method from="UpdateDamage" to="âý">
        <Signature>(Single) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Planes.EnemyBomber" to="ìö">
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Level, Single, Single) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Level) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Planes.AttackObject" to="ìù">
      <Field from="Carrier" to="è" />
      <Field from="UserPlane" to="â" />
      <Field from="None" to="ì" />
    </Type>
    <Type from="Wof.Model.Level.Weapon.Ammunition" to="ìï">
      <Field from="WidthCoefficient" to="è" />
      <Field from="HeightCoefficient" to="â" />
      <Field from="boundRectangle" to="ì" />
      <Field from="moveVector" to="ã" />
      <Field from="refToLevel" to="ý" />
      <Field from="state" to="ò" />
      <Field from="relativeAngle" to="å" />
      <Field from="ammunitionOwner" to="æ" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Level, Single, Wof.Model.Level.Weapon.IObject2D) : Void</Signature>
      </Method>
      <Method from="get_Position" to="è">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="get_State" to="â">
        <Signature>() : Wof.Model.Level.Weapon.MissileState</Signature>
      </Method>
      <Method from="get_Center" to="æâ">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="get_Bounds" to="æì">
        <Signature>() : Wof.Model.Level.Common.Quadrangle</Signature>
      </Method>
      <Method from="get_Angle" to="ì">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Direction" to="æã">
        <Signature>() : Wof.Model.Level.Direction</Signature>
      </Method>
      <Method from="get_RelativeAngle" to="æý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_MovementVector" to="æò">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="get_IsEnemy" to="æå">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_Owner" to="ã">
        <Signature>() : Wof.Model.Level.Weapon.IObject2D</Signature>
      </Method>
      <Method from="Move" to="éö">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithCarrier" to="ý">
        <Signature>(Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="get_BoundingQuadrangles" to="åó">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="get_Name" to="åõ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="Destroy" to="éù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_AbsoluteAngle" to="ææ">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="Wof.Model.Level.Weapon.IObject2D.GetConsts" to="æé">
        <Signature>() : Wof.Model.Configuration.GameConsts.GenericPlane</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Weapon.MissileBase" to="ìú">
      <Field from="ViewRange" to="è" />
      <Field from="HitShift" to="â" />
      <Field from="MoveInterval" to="ì" />
      <Field from="RocketWidth" to="ã" />
      <Field from="RocketHeight" to="ý" />
      <Field from="dropTime" to="ò" />
      <Field from="DropSpeed" to="å" />
      <Field from="HeightShift" to="æ" />
      <Field from="WidthShift" to="é" />
      <Field from="MinYPositionForAircraft" to="ë" />
      <Field from="timeCounter" to="í" />
      <Field from="flyVector" to="ê" />
      <Field from="zRotationPerSecond" to="î" />
      <Field from="travelledDistance" to="ä" />
      <Field from="maxDistanceToOwner" to="ó" />
      <Field from="maxHeightDistanceToOwner" to="õ" />
      <Field from="canDestroyStoragePlanes" to="ñ" />
      <Field from="initialVelocity" to="ö" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Wof.Model.Level.Common.PointD, Wof.Model.Level.Level, Single, Wof.Model.Level.Weapon.IObject2D) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD, Wof.Model.Level.Level, Single, Wof.Model.Level.Weapon.IObject2D) : Void</Signature>
      </Method>
      <Method from="get_TimeCounter" to="è">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_TravelledDistance" to="â">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_CanDestroyStoragePlanes" to="ì">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_InitialVelocity" to="ã">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="get_MaxDistanceToOwner" to="ý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_MaxDistanceToOwner" to="ò">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_MaxHeightDistanceToOwner" to="å">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_MaxHeightDistanceToOwner" to="æ">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="Move" to="éö">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithStoragePlane" to="éï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetZRotationPerSecond" to="é">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="ChangePosition" to="éú">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithEnemyPlanes" to="éü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithUserPlane" to="éç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithGround" to="éû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OutOfFuel" to="éÿ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="CanHitEnemyPlane" to="ë">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Model.Level.Planes.Plane, Boolean) : Wof.Model.Level.Weapon.MissileBase.CollisionDirectionLocation</Signature>
      </Method>
      <Method from="CanHitEnemyPlane" to="í">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Model.Level.Planes.Plane, Single, Boolean) : Wof.Model.Level.Weapon.MissileBase.CollisionDirectionLocation</Signature>
      </Method>
      <Method from="InEnemyRange" to="ê">
        <Signature>(Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Weapon.MissileBase.CollisionDirectionLocation" to="ìú.ìü">
      <Field from="FORWARD" to="è" />
      <Field from="BACKWARD" to="â" />
      <Field from="BOTH" to="ì" />
      <Field from="NONE" to="ã" />
    </Type>
    <Type from="Wof.Model.Level.Weapon.BunkerShellBullet" to="ìç">
      <Field from="target" to="è" />
      <Field from="mRand" to="â" />
      <Field from="maxFlyingDistance" to="ì" />
      <Field from="travelledDistance" to="ã" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Wof.Model.Level.Level, Wof.Model.Level.Weapon.IObject2D, Wof.Model.Level.Weapon.IObject2D, Single, Single) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OutOfFuel" to="éÿ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="GetInitialVector" to="è">
        <Signature>(Wof.Model.Level.Weapon.IObject2D, Wof.Model.Level.Weapon.IObject2D, Single) : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="ChangePosition" to="éú">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithEnemyPlanes" to="éü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithUserPlane" to="éç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithGround" to="éû">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Weapon.FlakBullet" to="ìû">
      <Field from="target" to="è" />
      <Field from="mRand" to="â" />
      <Field from="maxFlyingDistance" to="ì" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Wof.Model.Level.Level, Wof.Model.Level.Weapon.IObject2D, Wof.Model.Level.Weapon.IObject2D, Single, Single) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OutOfFuel" to="éÿ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="GetInitialVector" to="è">
        <Signature>(Wof.Model.Level.Weapon.IObject2D, Wof.Model.Level.Weapon.IObject2D, Single) : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="GetDamage" to="â">
        <Signature>(Wof.Model.Level.Weapon.IObject2D) : Single</Signature>
      </Method>
      <Method from="ChangePosition" to="éú">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithUserPlane" to="éç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithEnemyPlanes" to="éü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithGround" to="éû">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Weapon.GunBullet" to="ìÿ">
      <Field from="baseMaxDistance" to="è" />
      <Field from="mRand" to="â" />
      <Field from="maxFlyingDistance" to="ì" />
      <Field from="isReversed" to="ã" />
      <Field from="isDoubleView" to="ý" />
      <Field from="planeTurningProgress" to="ò" />
      <Field from="launchOrientation" to="å" />
      <Field from="position3" to="æ" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Mogre.Quaternion, Wof.Model.Level.Level, Wof.Model.Level.Weapon.IObject2D, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_PlaneTurningProgress" to="è">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_IsReversed" to="â">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsDoubleView" to="ì">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_Position3" to="ã">
        <Signature>() : Mogre.Vector3</Signature>
      </Method>
      <Method from="get_LaunchOrientation" to="ý">
        <Signature>() : Mogre.Quaternion</Signature>
      </Method>
      <Method from="OutOfFuel" to="éÿ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="GetDamage" to="ò">
        <Signature>(Wof.Model.Level.Weapon.IObject2D) : Single</Signature>
      </Method>
      <Method from="ChangePosition" to="éú">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithUserPlane" to="éç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithEnemyPlanes" to="éü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithGround" to="éû">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tests.GunTestForm" to="ìô">
      <Field from="Step" to="è" />
      <Field from="activeQ" to="â" />
      <Field from="p1" to="ì" />
      <Field from="plane1" to="ã" />
      <Field from="plane2" to="ý" />
      <Field from="components" to="ò" />
      <Field from="pictureBox1" to="å" />
      <Field from="menuStrip1" to="æ" />
      <Field from="testToolStripMenuItem" to="é" />
      <Field from="checkIntersectionToolStripMenuItem" to="ë" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="IntersectionTestForm_Load" to="è">
        <Signature>(Object, System.EventArgs) : Void</Signature>
      </Method>
      <Method from="pictureBox1_Paint" to="â">
        <Signature>(Object, System.Windows.Forms.PaintEventArgs) : Void</Signature>
      </Method>
      <Method from="checkIntersectionToolStripMenuItem_Click" to="ì">
        <Signature>(Object, System.EventArgs) : Void</Signature>
      </Method>
      <Method from="IntersectionTestForm_KeyPress" to="ã">
        <Signature>(Object, System.Windows.Forms.KeyPressEventArgs) : Void</Signature>
      </Method>
      <Method from="IntersectionTestForm_KeyDown" to="ý">
        <Signature>(Object, System.Windows.Forms.KeyEventArgs) : Void</Signature>
      </Method>
      <Method from="Dispose" to="éô">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="InitializeComponent" to="ò">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tests.GutTest" to="ãè">
      <Method from="Main" to="Main">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tests.ModelTest.LevelTest.LevelUtilsTest" to="ãâ">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Test" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Main" to="â">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tools.GenerateFontRanges" to="ãì">
      <Field from="outputFile" to="è" />
      <Field from="addStandardRange" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Main" to="è">
        <Signature>(String[]) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tools.Licensing" to="ãã">
      <Field from="C_LICENSE_FILE" to="è" />
      <Field from="C_ENHANCED_VERSION_LICENSE" to="â" />
      <Field from="hash" to="ì" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Main" to="è">
        <Signature>(String[]) : Void</Signature>
      </Method>
      <Method from="DecryptLicense" to="â">
        <Signature>(String) : String</Signature>
      </Method>
      <Method from="DecryptLicensePHP" to="ì">
        <Signature>(String, String) : String</Signature>
      </Method>
      <Method from="BuildLicenseFile" to="ã">
        <Signature>(String) : Boolean</Signature>
      </Method>
      <Method from="get_Hash" to="ý">
        <Signature>() : String</Signature>
      </Method>
      <Method from="BuildLicenseFile" to="ò">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="IsReadable" to="å">
        <Signature>(String) : Boolean</Signature>
      </Method>
      <Method from="IsWriteable" to="æ">
        <Signature>(String) : Boolean</Signature>
      </Method>
      <Method from="IsUser" to="é">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="IsUserAdministrator" to="ë">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="CanBuildEnhancedVersionHash" to="í">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="IsEhnancedVersion" to="ê">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="BuildHash" to="î">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetId" to="ä">
        <Signature>() : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.PerformanceTestFramework" to="ãý">
      <Field from="testRunningTime" to="è" />
      <Field from="time" to="â" />
      <Field from="soldiersState" to="ì" />
      <Field from="hasResults" to="ã" />
      <Field from="fullScreen" to="ý" />
      <Field from="videoMode" to="ò" />
      <Field from="antialiasing" to="å" />
      <Field from="vsync" to="æ" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_FullScreen" to="è">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_VideoMode" to="â">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_Antialiasing" to="ì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_VSync" to="ã">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_HasResults" to="ý">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="GetAverageFPS" to="ò">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="EstimateQualitySettingsAndWriteEngineConfig" to="å">
        <Signature>() : Wof.Controller.PerformanceTestFramework.GraphicsQuality</Signature>
      </Method>
      <Method from="Configure" to="ýí">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="ChooseSceneManager" to="ýý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateCamera" to="ýî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateViewports" to="ýû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnUpdateModel" to="ýï">
        <Signature>(Mogre.FrameEvent) : Void</Signature>
      </Method>
      <Method from="CreateScene" to="ýç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ModelFrameStarted" to="ýñ">
        <Signature>(Mogre.FrameEvent) : Void</Signature>
      </Method>
      <Method from="FrameStarted" to="ýù">
        <Signature>(Mogre.FrameEvent) : Boolean</Signature>
      </Method>
      <Method from="Setup" to="ýë">
        <Signature>() : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.PerformanceTestFramework.GraphicsQuality" to="ãý.ãò">
      <Field from="VeryLow" to="è" />
      <Field from="Low" to="â" />
      <Field from="Medium" to="ì" />
      <Field from="UpperMedium" to="ã" />
      <Field from="High" to="ý" />
      <Field from="VeryHigh" to="ò" />
      <Field from="Superb" to="å" />
    </Type>
    <Type from="Wof.Controller.RootInitializationException" to="ãå">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(String, System.Exception) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.BloodOptionsScreen" to="ãæ">
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="getTitle" to="åì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetAvailableOptions" to="åã">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="ProcessOptionSelection" to="åý">
        <Signature>(Wof.Controller.Screens.ButtonHolder) : Void</Signature>
      </Method>
      <Method from="IsOptionSelected" to="åò">
        <Signature>(String) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.PlanesScreen" to="ãé">
      <Field from="C_P47_OFF" to="è" />
      <Field from="C_P47_2_OFF" to="â" />
      <Field from="C_F4U_OFF" to="ì" />
      <Field from="C_F4U_2_OFF" to="ã" />
      <Field from="C_P47_ON" to="ý" />
      <Field from="C_P47_2_ON" to="ò" />
      <Field from="C_F4U_ON" to="å" />
      <Field from="C_F4U_2_ON" to="æ" />
      <Field from="C_B25_ON" to="é" />
      <Field from="C_B25_2_ON" to="ë" />
      <Field from="C_B25_OFF" to="í" />
      <Field from="C_B25_2_OFF" to="ê" />
      <Field from="smallFontSize" to="î" />
      <Field from="guiWindow" to="ä" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="CreateGUI" to="òï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="onButtonPress" to="òì">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.EnhancedLevelsScreen" to="ãë">
      <Field from="enhancedMissionsMap" to="è" />
      <Field from="levelInfoMap" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="EnhancedLevelsScreen_OnOptionCreated" to="è">
        <Signature>(Mogre.Vector4, Boolean, String, UInt32, Int32, Wof.Controller.Screens.ButtonHolder) : Void</Signature>
      </Method>
      <Method from="GetOptionPos" to="åè">
        <Signature>(UInt32, BetaGUI.Window) : Mogre.Vector4</Signature>
      </Method>
      <Method from="GoToBack" to="åå">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
      <Method from="getTitle" to="åì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetAvailableOptions" to="åã">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="GetOptionDisplayText" to="òô">
        <Signature>(String) : String</Signature>
      </Method>
      <Method from="ProcessOptionSelection" to="åý">
        <Signature>(Wof.Controller.Screens.ButtonHolder) : Void</Signature>
      </Method>
      <Method from="IsOptionSelected" to="åò">
        <Signature>(String) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.EnhancedVersionScreen" to="ãí">
      <Field from="smallFontSize" to="è" />
      <Field from="guiWindow" to="â" />
      <Field from="message" to="ì" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="CreateGUI" to="òï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="onButtonPress" to="òì">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.HydraxOptionsScreen" to="ãê">
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="getTitle" to="åì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="CreateGUI" to="òï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetAvailableOptions" to="åã">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="ProcessOptionSelection" to="åý">
        <Signature>(Wof.Controller.Screens.ButtonHolder) : Void</Signature>
      </Method>
      <Method from="IsOptionSelected" to="åò">
        <Signature>(String) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.QuitScreen" to="ãî">
      <Field from="C_AD_ZONE" to="è" />
      <Field from="C_AD_MATERIAL" to="â" />
      <Field from="C_TEXTURE_NAME" to="ì" />
      <Field from="overlay" to="ã" />
      <Field from="currentScreen" to="ý" />
      <Field from="maxScreens" to="ò" />
      <Field from="lastChange" to="å" />
      <Field from="animation" to="æ" />
      <Field from="screenTimes" to="é" />
      <Field from="screenMinTimes" to="ë" />
      <Field from="currentMaterialName" to="í" />
      <Field from="textureDimensions" to="ê" />
      <Field from="isScreenAnAd" to="î" />
      <Field from="currentAd" to="ä" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="getFirstNonAdIndex" to="è">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="CreateScene" to="òö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateOcean" to="òñ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="FrameStarted" to="òç">
        <Signature>(Mogre.FrameEvent) : Void</Signature>
      </Method>
      <Method from="CreateSkybox" to="òõ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateGUI" to="òï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initScreen" to="â">
        <Signature>(Int32) : Boolean</Signature>
      </Method>
      <Method from="NextScreen" to="ì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ExitGame" to="ã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="MouseReceived" to="òü">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="CanChangeScreen" to="ý">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="KeyReceived" to="òú">
        <Signature>(String) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.ShadowsOptionsScreen" to="ãä">
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="getTitle" to="åì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetAvailableOptions" to="åã">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="ProcessOptionSelection" to="åý">
        <Signature>(Wof.Controller.Screens.ButtonHolder) : Void</Signature>
      </Method>
      <Method from="IsOptionSelected" to="åò">
        <Signature>(String) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="FSLOgreCS.FSLSoundManager" to="ãó">
      <Field from="_soundObjectVector" to="è" />
      <Field from="_initSound" to="â" />
      <Field from="_listener" to="ì" />
      <Field from="lockSync" to="ã" />
      <Field from="updaterThread" to="ý" />
      <Field from="updaterRunning" to="ò" />
      <Field from="killUpdater" to="å" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_UpdaterRunning" to="è">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_UpdaterRunning" to="â">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="AddSound" to="ì">
        <Signature>(FSLOgreCS.FSLSoundObject) : FSLOgreCS.FSLSoundObject</Signature>
      </Method>
      <Method from="ErrorCallback" to="ã">
        <Signature>(String, Boolean) : Void</Signature>
      </Method>
      <Method from="InitializeSound" to="ý">
        <Signature>(Wof.Controller.CameraListenerBase, FSLOgreCS.FreeSL.FSL_SOUND_SYSTEM) : Boolean</Signature>
      </Method>
      <Method from="SetUserPlane" to="ò">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="ShutDown" to="å">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="set_Volume" to="æ">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_Initialized" to="é">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_SoundObjectVector" to="ë">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="get_LockSync" to="í">
        <Signature>() : Object</Signature>
      </Method>
      <Method from="RemoveSound" to="ê">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="GetSound" to="î">
        <Signature>(String) : FSLOgreCS.FSLSoundObject</Signature>
      </Method>
      <Method from="UpdateSoundObjects" to="ä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetListener" to="ó">
        <Signature>(Wof.Controller.CameraListenerBase) : Void</Signature>
      </Method>
      <Method from="SetListener" to="õ">
        <Signature>(Wof.Controller.CameraListenerBase, Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="GetListener" to="ñ">
        <Signature>() : FSLOgreCS.FSLListener</Signature>
      </Method>
      <Method from="CreateAmbientSoundMusic" to="ö">
        <Signature>(String, String, Boolean, Boolean) : FSLOgreCS.FSLAmbientSoundMusic</Signature>
      </Method>
      <Method from="CreateAmbientSound" to="ù">
        <Signature>(String, String, Boolean, Boolean) : FSLOgreCS.FSLSoundObject</Signature>
      </Method>
      <Method from="CreateSoundEntity" to="ï">
        <Signature>(String, Mogre.SceneNode, String, Boolean, Boolean) : FSLOgreCS.FSLSoundObject</Signature>
      </Method>
      <Method from="CreateSoundEntity" to="ú">
        <Signature>(String, String, Mogre.SceneNode, String, Boolean) : FSLOgreCS.FSLSoundObject</Signature>
      </Method>
      <Method from="FrameStarted" to="ü">
        <Signature>(Mogre.FrameEvent) : Boolean</Signature>
      </Method>
      <Method from="Destroy" to="ëè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetListenerEnvironment" to="ç">
        <Signature>(FSLOgreCS.FreeSL.FSL_EAX_LISTENER_PROPERTIES) : Void</Signature>
      </Method>
      <Method from="SetListenerEnvironmentPreset" to="û">
        <Signature>(FSLOgreCS.FreeSL.FSL_LISTENER_ENVIRONMENT) : Void</Signature>
      </Method>
      <Method from="SetListenerDefaultEnvironment" to="ÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetCurrentListenerEnvironment" to="ô">
        <Signature>() : FSLOgreCS.FreeSL.FSL_EAX_LISTENER_PROPERTIES</Signature>
      </Method>
      <Method from="LoadListenerEnvironment" to="âè">
        <Signature>(String) : FSLOgreCS.FreeSL.FSL_EAX_LISTENER_PROPERTIES</Signature>
      </Method>
      <Method from="LoadListenerEnvironmentFromZip" to="ââ">
        <Signature>(String, String) : FSLOgreCS.FreeSL.FSL_EAX_LISTENER_PROPERTIES</Signature>
      </Method>
      <Method from="CreateListenerEnvironment" to="âì">
        <Signature>(String, UInt32) : FSLOgreCS.FreeSL.FSL_EAX_LISTENER_PROPERTIES</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.SoundManager3D" to="ãõ">
      <Field from="C_ENEMY_ENGINE_IDLE" to="è" />
      <Field from="C_SOLDIER_DIE_1" to="â" />
      <Field from="C_SOLDIER_DIE_2" to="ì" />
      <Field from="C_SOLDIER_DIE_3" to="ã" />
      <Field from="C_SOLDIER_DIE_4" to="ý" />
      <Field from="C_SOLDIER_DIE_5" to="ò" />
      <Field from="C_MENU_CLICK" to="å" />
      <Field from="C_MENU_CHEAT" to="æ" />
      <Field from="C_STORAGE_PLANE_DESTROYED" to="é" />
      <Field from="C_ENEMY_WARCRY" to="ë" />
      <Field from="C_ENEMY_WARCRY2" to="í" />
      <Field from="C_PLANE_PASS" to="ê" />
      <Field from="C_SHIP_SINKING" to="î" />
      <Field from="C_SHIP_SINKING_2" to="ä" />
      <Field from="C_SHIP_SUBMERGING" to="ó" />
      <Field from="C_SHIP_EMERGING" to="õ" />
      <Field from="C_GUN" to="ñ" />
      <Field from="C_MISSILE_LOCK" to="ö" />
      <Field from="C_RAVEN" to="ù" />
      <Field from="soundSystem" to="ï" />
      <Field from="currentMusic" to="ú" />
      <Field from="ambientSound" to="ü" />
      <Field from="ambientSounds" to="ç" />
      <Field from="soundPreloaderWorker" to="û" />
      <Field from="_shouldLoadNextMusic" to="ÿ" />
      <Field from="readyToPlayPreloadedMusic" to="ô" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_CurrentMusic" to="è">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_Instance" to="â">
        <Signature>() : Wof.Controller.SoundManager3D</Signature>
      </Method>
      <Method from="SetMusicVolume" to="ì">
        <Signature>(UInt32) : Void</Signature>
      </Method>
      <Method from="SetSoundVolume" to="ã">
        <Signature>(UInt32) : Void</Signature>
      </Method>
      <Method from="InitializeSound" to="ý">
        <Signature>(Wof.Controller.CameraListenerBase, FSLOgreCS.FreeSL.FSL_SOUND_SYSTEM) : Boolean</Signature>
      </Method>
      <Method from="CreateSoundEntity" to="ò">
        <Signature>(String, Mogre.SceneNode, Boolean, Boolean) : FSLOgreCS.FSLSoundEntity</Signature>
      </Method>
      <Method from="PrepareMusic" to="å">
        <Signature>(String, Boolean) : Void</Signature>
      </Method>
      <Method from="get_IsSoundPreloadWorkerReady" to="æ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_ShouldLoadNextMusic" to="é">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_ShouldLoadNextMusic" to="ë">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="SetReadyToPlayPreloadedMusic" to="í">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnSoundPreloaded" to="ê">
        <Signature>(String, FSLOgreCS.FSLSoundObject, Boolean) : Void</Signature>
      </Method>
      <Method from="PlayAmbientMusic" to="î">
        <Signature>(String, Int32, Boolean, Boolean, Boolean) : FSLOgreCS.FSLSoundObject</Signature>
      </Method>
      <Method from="PlayAmbientMusic" to="ä">
        <Signature>(String, Int32, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from="PlayAmbientMusic" to="ó">
        <Signature>(String, Boolean) : Void</Signature>
      </Method>
      <Method from="StopAmbientMusic" to="õ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateFrameListener" to="ñ">
        <Signature>(Mogre.Root) : Void</Signature>
      </Method>
      <Method from="KillPreoloadWorker" to="ö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Destroy" to="ëè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Dispose" to="ëâ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.SoundManager3D.SingletonCreator" to="ãõ.ãñ">
      <Field from="instance" to="è" />
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.SoundManager3D.SoundPreloader" to="ãõ.ãö">
      <Field from="sound" to="è" />
      <Field from="loop" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>(String, Boolean) : Void</Signature>
      </Method>
      <Method from="Work" to="è">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="BetaGUI.wt" to="ãù">
      <Field from="NONE" to="è" />
      <Field from="MOVE" to="â" />
      <Field from="RESIZE" to="ì" />
      <Field from="RESIZE_AND_MOVE" to="ã" />
    </Type>
    <Type from="BetaGUI.GUI" to="ãï">
      <Field from="wc" to="è" />
      <Field from="bc" to="â" />
      <Field from="tc" to="ì" />
      <Field from="oc" to="ã" />
      <Field from="mO" to="ý" />
      <Field from="mMPo" to="ò" />
      <Field from="mOTop" to="å" />
      <Field from="WN" to="æ" />
      <Field from="mXW" to="é" />
      <Field from="mMP" to="ë" />
      <Field from="mFont" to="í" />
      <Field from="mFontSize" to="ê" />
      <Field from="keyDelay" to="î" />
      <Field from="name" to="ä" />
      <Field from="oldMouseX" to="ó" />
      <Field from="oldMouseY" to="õ" />
      <Method from=".ctor" to=".ctor">
        <Signature>(String, UInt32) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(String, UInt32, String) : Void</Signature>
      </Method>
      <Method from="SetZOrder" to="è">
        <Signature>(UInt16) : Void</Signature>
      </Method>
      <Method from="hide" to="â">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="show" to="ì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="killGUI" to="ã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="injectMouse" to="ý">
        <Signature>(System.Drawing.Point, Boolean) : Int32</Signature>
      </Method>
      <Method from="showMousePointer" to="ò">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="hideMousePointer" to="å">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="injectMouse" to="æ">
        <Signature>(UInt32, UInt32, Boolean) : Int32</Signature>
      </Method>
      <Method from="injectKey" to="é">
        <Signature>(String, System.Drawing.Point) : Boolean</Signature>
      </Method>
      <Method from="injectKey" to="ë">
        <Signature>(String, UInt32, UInt32) : Boolean</Signature>
      </Method>
      <Method from="injectBackspace" to="í">
        <Signature>(UInt32, UInt32) : Void</Signature>
      </Method>
      <Method from="createWindow" to="ê">
        <Signature>(Mogre.Vector4, String, Int32, String) : BetaGUI.Window</Signature>
      </Method>
      <Method from="destroyWindow" to="î">
        <Signature>(BetaGUI.Window) : Void</Signature>
      </Method>
      <Method from="killWindow" to="ä">
        <Signature>(BetaGUI.Window) : Void</Signature>
      </Method>
      <Method from="createOverlay" to="ó">
        <Signature>(String, Mogre.Vector2, Mogre.Vector2, String, String, Boolean, Mogre.Overlay) : Mogre.OverlayContainer</Signature>
      </Method>
      <Method from="createOverlay" to="õ">
        <Signature>(String, Mogre.Vector2, Mogre.Vector2, String, String, Boolean) : Mogre.OverlayContainer</Signature>
      </Method>
      <Method from="createMousePointer" to="ñ">
        <Signature>(Mogre.Vector2, String) : Mogre.OverlayContainer</Signature>
      </Method>
    </Type>
    <Type from="BetaGUI.Button" to="ãú">
      <Field from="mO" to="è" />
      <Field from="mCP" to="â" />
      <Field from="mmn" to="ì" />
      <Field from="mma" to="ã" />
      <Field from="callback" to="ý" />
      <Field from="x" to="ò" />
      <Field from="y" to="å" />
      <Field from="w" to="æ" />
      <Field from="h" to="é" />
      <Field from="window" to="ë" />
      <Field from="C_RESPONSE_DELAY" to="í" />
      <Field from="keyDelay" to="ê" />
      <Field from="text" to="î" />
      <Field from="id" to="ä" />
      <Field from="activated" to="ó" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.Vector4, String, String, BetaGUI.Callback, BetaGUI.Window, UInt32, BetaGUI.Window) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.Vector4, String, String, BetaGUI.Callback, BetaGUI.Window, BetaGUI.Window) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_Window" to="è">
        <Signature>() : BetaGUI.Window</Signature>
      </Method>
      <Method from="get_X" to="ëì">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_X" to="ëã">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_Y" to="ëý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_Y" to="ëò">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="Translate" to="ëå">
        <Signature>(Mogre.Vector2) : Void</Signature>
      </Method>
      <Method from="ResetButtonTimer" to="â">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CanChangeSelectedButton" to="ì">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="CanChangeSelectedButton" to="ã">
        <Signature>(Single) : Boolean</Signature>
      </Method>
      <Method from="TryToPressButton" to="ý">
        <Signature>(BetaGUI.Button) : Boolean</Signature>
      </Method>
      <Method from="TryToPressButton" to="ò">
        <Signature>(BetaGUI.Button, Single) : Boolean</Signature>
      </Method>
      <Method from="killButton" to="å">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="activate" to="æ">
        <Signature>(Boolean) : Boolean</Signature>
      </Method>
      <Method from="isin" to="é">
        <Signature>(Single, Single, Single, Single) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="BetaGUI.TextInput" to="ãü">
      <Field from="mO" to="è" />
      <Field from="mCP" to="â" />
      <Field from="mmn" to="ì" />
      <Field from="mma" to="ã" />
      <Field from="value" to="ý" />
      <Field from="x" to="ò" />
      <Field from="y" to="å" />
      <Field from="w" to="æ" />
      <Field from="h" to="é" />
      <Field from="length" to="ë" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.Vector4, String, String, UInt32, BetaGUI.Window) : Void</Signature>
      </Method>
      <Method from="getValue" to="è">
        <Signature>() : String</Signature>
      </Method>
      <Method from="setValue" to="â">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="killTextInput" to="ì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="activate" to="ã">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="isin" to="ý">
        <Signature>(Single, Single, Single, Single) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="BetaGUI.Window" to="ãç">
      <Field from="mATI" to="è" />
      <Field from="mRZ" to="â" />
      <Field from="mAB" to="ì" />
      <Field from="mTB" to="ã" />
      <Field from="x" to="ý" />
      <Field from="y" to="ò" />
      <Field from="w" to="å" />
      <Field from="h" to="æ" />
      <Field from="mGUI" to="é" />
      <Field from="mO" to="ë" />
      <Field from="mC" to="í" />
      <Field from="mB" to="ê" />
      <Field from="mT" to="î" />
      <Field from="mI" to="ä" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.Vector4, String, Int32, String, BetaGUI.GUI) : Void</Signature>
      </Method>
      <Method from="createButton" to="è">
        <Signature>(Mogre.Vector4, String, String, BetaGUI.Callback, UInt32) : BetaGUI.Button</Signature>
      </Method>
      <Method from="createButton" to="â">
        <Signature>(Mogre.Vector4, String, String, BetaGUI.Callback) : BetaGUI.Button</Signature>
      </Method>
      <Method from="createInmovableButton" to="ì">
        <Signature>(Mogre.Vector4, String, String, BetaGUI.Callback, UInt32) : BetaGUI.Button</Signature>
      </Method>
      <Method from="createInmovableButton" to="ã">
        <Signature>(Mogre.Vector4, String, String, BetaGUI.Callback) : BetaGUI.Button</Signature>
      </Method>
      <Method from="createTextInput" to="ý">
        <Signature>(Mogre.Vector4, String, String, UInt32) : BetaGUI.TextInput</Signature>
      </Method>
      <Method from="createStaticText" to="ò">
        <Signature>(Mogre.Vector4, String) : Mogre.OverlayContainer</Signature>
      </Method>
      <Method from="createStaticTextAutoSplit" to="å">
        <Signature>(Mogre.Vector4, String) : Mogre.OverlayContainer</Signature>
      </Method>
      <Method from="ChangeContainerColour" to="æ">
        <Signature>(Mogre.OverlayContainer, Mogre.ColourValue) : Void</Signature>
      </Method>
      <Method from="ChangeContainerColour" to="é">
        <Signature>(Mogre.OverlayContainer, Mogre.ColourValue, Mogre.ColourValue) : Void</Signature>
      </Method>
      <Method from="ChangeElementColour" to="ë">
        <Signature>(Mogre.OverlayElement, Mogre.ColourValue) : Void</Signature>
      </Method>
      <Method from="ChangeElementColour" to="í">
        <Signature>(Mogre.OverlayElement, Mogre.ColourValue, Mogre.ColourValue) : Void</Signature>
      </Method>
      <Method from="createStaticText" to="ê">
        <Signature>(Mogre.Vector4, String, Mogre.ColourValue) : Mogre.OverlayContainer</Signature>
      </Method>
      <Method from="createStaticText" to="î">
        <Signature>(Mogre.Vector4, String, Mogre.ColourValue, Mogre.ColourValue) : Mogre.OverlayContainer</Signature>
      </Method>
      <Method from="createStaticImage" to="ä">
        <Signature>(Mogre.Vector2, String) : Mogre.OverlayContainer</Signature>
      </Method>
      <Method from="createStaticImage" to="ó">
        <Signature>(Mogre.Vector4, String) : Mogre.OverlayContainer</Signature>
      </Method>
      <Method from="createStaticImage" to="õ">
        <Signature>(Mogre.Vector4, String, UInt16) : Mogre.OverlayContainer</Signature>
      </Method>
      <Method from="createStaticImage" to="ñ">
        <Signature>(Mogre.Vector4, String, Boolean) : Mogre.OverlayContainer</Signature>
      </Method>
      <Method from="hide" to="ö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="show" to="ù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="isVisible" to="ï">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="killWindow" to="ú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="check" to="ü">
        <Signature>(UInt32, UInt32, Boolean) : Int32</Signature>
      </Method>
      <Method from="checkKey" to="ç">
        <Signature>(String, UInt32, UInt32) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="BetaGUI.InmovableButton" to="ãû">
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.Vector4, String, String, BetaGUI.Callback, BetaGUI.Window, UInt32, BetaGUI.Window) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.Vector4, String, String, BetaGUI.Callback, BetaGUI.Window, BetaGUI.Window) : Void</Signature>
      </Method>
      <Method from="Translate" to="ëå">
        <Signature>(Mogre.Vector2) : Void</Signature>
      </Method>
      <Method from="get_X" to="ëì">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_X" to="ëã">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_Y" to="ëý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_Y" to="ëò">
        <Signature>(Single) : Void</Signature>
      </Method>
    </Type>
    <Type from="BetaGUI.Callback" to="ãÿ">
      <Field from="t" to="è" />
      <Field from="LS" to="â" />
      <Field from="LSInternal" to="ì" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(BetaGUI.BetaGUIListener) : Void</Signature>
      </Method>
    </Type>
    <Type from="BetaGUI.InternalCallback" to="ãô">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="onButtonPress" to="òì">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.CameraMotionManager" to="ýè">
      <Method from="ManageMini" to="è">
        <Signature>(Mogre.Camera, Wof.Model.Level.Planes.Plane, Mogre.FrameEvent) : Void</Signature>
      </Method>
      <Method from="Manage" to="â">
        <Signature>(Mogre.Camera, Wof.Model.Level.Planes.Plane, Mogre.FrameEvent, Single) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.RijndaelSimple" to="ýâ">
      <Field from="passPhrase" to="è" />
      <Field from="saltValue" to="â" />
      <Field from="hashAlgorithm" to="ì" />
      <Field from="passwordIterations" to="ã" />
      <Field from="initVector" to="ý" />
      <Field from="keySize" to="ò" />
      <Field from="AES_Key" to="å" />
      <Field from="AES_IV" to="æ" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Encrypt" to="è">
        <Signature>(String, String, String, String, Int32, String, Int32) : String</Signature>
      </Method>
      <Method from="Decrypt" to="â">
        <Signature>(String, String, String, String, Int32, String, Int32) : String</Signature>
      </Method>
      <Method from="Decrypt" to="ì">
        <Signature>(String) : String</Signature>
      </Method>
      <Method from="Encrypt" to="ã">
        <Signature>(String) : String</Signature>
      </Method>
      <Method from="AES_encrypt" to="ý">
        <Signature>(String, String, String) : String</Signature>
      </Method>
      <Method from="AES_decrypt" to="ò">
        <Signature>(String, String, String) : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.EngineConfig" to="Wof.Controller.EngineConfig" />
    <Type from="Wof.Controller.EngineConfig.DifficultyLevel" to="Wof.Controller.EngineConfig.DifficultyLevel" />
    <Type from="Wof.Controller.EngineConfig.ShadowsQualityTypes" to="Wof.Controller.EngineConfig.ShadowsQualityTypes" />
    <Type from="Wof.Controller.GameEventListener" to="ýì">
      <Method from="StartGame" to="ëæ">
        <Signature>(Wof.Model.Level.Planes.PlaneType) : Void</Signature>
      </Method>
      <Method from="StartGame" to="ëé">
        <Signature>(UInt32, Wof.Model.Level.Planes.PlaneType) : Void</Signature>
      </Method>
      <Method from="StartGame" to="ëë">
        <Signature>(Wof.Model.Level.LevelInfo, Wof.Model.Level.Planes.PlaneType) : Void</Signature>
      </Method>
      <Method from="ExitGame" to="ëí">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoStartScreen" to="ëê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoNextLevel" to="ëî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoHighscoresScreen" to="ëä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoEnterScoreScreen" to="ëó">
        <Signature>(Int32, Single) : Void</Signature>
      </Method>
      <Method from="GotoCreditsScreen" to="ëõ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoEndingScreen" to="ëñ">
        <Signature>(Int32, Single) : Void</Signature>
      </Method>
      <Method from="GotoVideoModeScreen" to="ëö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoOptionsScreen" to="ëù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoAntialiasingOptionsScreen" to="ëï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoVSyncOptionsScreen" to="ëú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoBloomOptionsScreen" to="ëü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoHydraxOptionsScreen" to="ëç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoBloodOptionsScreen" to="ëû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoLodOptionsScreen" to="ëÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoShadowsOptionsScreen" to="ëô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoControlsOptionsScreen" to="íè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoSoundOptionsScreen" to="íâ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoLanguagesOptionsScreen" to="íì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoTutorialScreen" to="íã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoLoadGameScreen" to="íý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoEnhancedLevelsScreen" to="íò">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoDifficultyOptionsScreen" to="íå">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoDonateScreen" to="íæ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoQuitScreen" to="íé">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoEnhancedVersionScreen" to="íë">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoPlanesScreen" to="íí">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoEnhancedVersionWebPage" to="íê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoDonateWebPage" to="íî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoUpdateWebPage" to="íä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetCurrentScreen" to="íó">
        <Signature>() : Wof.Controller.Screens.MenuScreen</Signature>
      </Method>
      <Method from="GotoLanguageDebugScreen" to="íõ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Game" to="ýã">
      <Field from="time" to="è" />
      <Field from="game" to="â" />
      <Field from="performanceTest" to="ì" />
      <Field from="currentScreen" to="ã" />
      <Field from="browser" to="ý" />
      <Field from="browserLock" to="ò" />
      <Field from="shouldReload" to="å" />
      <Field from="afterExit" to="æ" />
      <Field from="browserThread" to="é" />
      <Field from="browserNotNull" to="ë" />
      <Field from="isActivated" to="í" />
      <Field from="consolePosition" to="ê" />
      <Method from="ShellExecute" to="ShellExecute">
        <Signature>(Int32, String, String, String, String, Int64) : Int64</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_ShouldReload" to="è">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_ShouldReload" to="â">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="CreateScene" to="ýç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="WireEventListeners" to="ýó">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Game_Move" to="íñ">
        <Signature>(Object, System.EventArgs) : Void</Signature>
      </Method>
      <Method from="Game_Closing" to="ì">
        <Signature>(Object, System.ComponentModel.CancelEventArgs) : Void</Signature>
      </Method>
      <Method from="Game_Activated" to="ã">
        <Signature>(Object, System.EventArgs) : Void</Signature>
      </Method>
      <Method from="Game_Deactivate" to="ý">
        <Signature>(Object, System.EventArgs) : Void</Signature>
      </Method>
      <Method from="OnFrameStarted" to="ò">
        <Signature>(Mogre.FrameEvent, MOIS.Mouse, MOIS.Keyboard, MOIS.JoyStick) : Void</Signature>
      </Method>
      <Method from="FrameEnded" to="ýö">
        <Signature>(Mogre.FrameEvent) : Boolean</Signature>
      </Method>
      <Method from="FrameStarted" to="ýù">
        <Signature>(Mogre.FrameEvent) : Boolean</Signature>
      </Method>
      <Method from="ModelFrameStarted" to="ýñ">
        <Signature>(Mogre.FrameEvent) : Void</Signature>
      </Method>
      <Method from="OnUpdateModel" to="ýï">
        <Signature>(Mogre.FrameEvent) : Void</Signature>
      </Method>
      <Method from="Main" to="å">
        <Signature>(String[]) : Void</Signature>
      </Method>
      <Method from="StartWOFApplication" to="æ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="getGame" to="é">
        <Signature>() : Wof.Controller.Game</Signature>
      </Method>
      <Method from="StartPerformanceTest" to="ë">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StartFirstInstance" to="í">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetModelSettingsFromFile" to="ê">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="SetFocusToPreviousInstance" to="î">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StartGame" to="ëæ">
        <Signature>(Wof.Model.Level.Planes.PlaneType) : Void</Signature>
      </Method>
      <Method from="StartGame" to="ëé">
        <Signature>(UInt32, Wof.Model.Level.Planes.PlaneType) : Void</Signature>
      </Method>
      <Method from="StartGame" to="ëë">
        <Signature>(Wof.Model.Level.LevelInfo, Wof.Model.Level.Planes.PlaneType) : Void</Signature>
      </Method>
      <Method from="CreateInput" to="ýü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoNextLevel" to="ëî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ExitGame" to="ëí">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ExitGame" to="ä">
        <Signature>(Wof.Controller.Game.DelegateVoidVoid) : Void</Signature>
      </Method>
      <Method from="initScreenAfter" to="ó">
        <Signature>(Wof.Controller.Screens.MenuScreen) : Void</Signature>
      </Method>
      <Method from="StartBrowser" to="õ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StartBrowserDo" to="ñ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ShowBrowser" to="ö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="HideBrowser" to="ù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="KillBrowserThread" to="ï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="DisposeBrowser" to="ú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoIntroScreen" to="ü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoStartScreen" to="ëê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoLoadGameScreen" to="íý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoEnhancedLevelsScreen" to="íò">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoHighscoresScreen" to="ëä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoEnterScoreScreen" to="ëó">
        <Signature>(Int32, Single) : Void</Signature>
      </Method>
      <Method from="GotoDonateScreen" to="íæ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoEnhancedVersionScreen" to="íë">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoPlanesScreen" to="íí">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoQuitScreen" to="íé">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoEndingScreen" to="ëñ">
        <Signature>(Int32, Single) : Void</Signature>
      </Method>
      <Method from="GotoCreditsScreen" to="ëõ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoLanguageDebugScreen" to="íõ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoOptionsScreen" to="ëù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoTutorialScreen" to="íã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoVideoModeScreen" to="ëö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoAntialiasingOptionsScreen" to="ëï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoVSyncOptionsScreen" to="ëú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoDifficultyOptionsScreen" to="íå">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoBloomOptionsScreen" to="ëü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoHydraxOptionsScreen" to="ëç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoBloodOptionsScreen" to="ëû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoLodOptionsScreen" to="ëÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoShadowsOptionsScreen" to="ëô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoControlsOptionsScreen" to="íè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoLanguagesOptionsScreen" to="íì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoSoundOptionsScreen" to="íâ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="MinimizeWindow" to="ç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetDefaultBrowserPath" to="û">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GotoEnhancedVersionWebPage" to="íê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoDonateWebPage" to="íî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetEnhancedVersionWebPageUrl" to="ÿ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetEnhancedVersionWebPageNakedUrl" to="ô">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GotoEnhancedVersionWebPageDo" to="âè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetDonateWebPageNakedUrl" to="ââ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetEnhancedVersionHelperWebPageNakedUrl" to="âì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GotoDonateWebPageDo" to="âã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoUpdateWebPage" to="íä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetCurrentScreen" to="íó">
        <Signature>() : Wof.Controller.Screens.MenuScreen</Signature>
      </Method>
      <Method from="GotoUpdateWebPageDo" to="âý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SceneNeedsRebuilding" to="âò">
        <Signature>(Wof.Controller.Screens.MenuScreen) : Boolean</Signature>
      </Method>
      <Method from="IsMenuScreen" to="âå">
        <Signature>(Wof.Controller.Screens.MenuScreen) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Game.DelegateVoidVoid" to="ýã.ýý">
      <Method from=".ctor" to=".ctor">
        <Signature>(Object, IntPtr) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.User32" to="ýò">
      <Field from="SWP_NOSIZE" to="è" />
      <Field from="SM_CXSCREEN" to="â" />
      <Field from="SM_CYSCREEN" to="ì" />
      <Field from="SWP_SHOWWINDOW" to="ã" />
      <Field from="SW_RESTORE" to="ý" />
      <Field from="PtrToConsole" to="ò" />
      <Field from="HWND_TOP" to="å" />
      <Method from="SetForegroundWindow" to="SetForegroundWindow">
        <Signature>(IntPtr) : Boolean</Signature>
      </Method>
      <Method from="IsIconic" to="IsIconic">
        <Signature>(IntPtr) : Boolean</Signature>
      </Method>
      <Method from="ShowWindow" to="ShowWindow">
        <Signature>(IntPtr, Int32) : Boolean</Signature>
      </Method>
      <Method from="IsWindowEnabled" to="IsWindowEnabled">
        <Signature>(IntPtr) : Boolean</Signature>
      </Method>
      <Method from="GetLastActivePopup" to="GetLastActivePopup">
        <Signature>(IntPtr) : IntPtr</Signature>
      </Method>
      <Method from="SetWindowLong" to="SetWindowLong">
        <Signature>(IntPtr, Int32, Int32) : Int32</Signature>
      </Method>
      <Method from="GetWindowLong" to="GetWindowLong">
        <Signature>(IntPtr, Int32) : Int32</Signature>
      </Method>
      <Method from="GetConsoleWindow" to="GetConsoleWindow">
        <Signature>() : IntPtr</Signature>
      </Method>
      <Method from="GetSystemMetrics" to="GetSystemMetrics">
        <Signature>(Int32) : Int32</Signature>
      </Method>
      <Method from="SetWindowPos" to="SetWindowPos">
        <Signature>(IntPtr, IntPtr, Int32, Int32, Int32, Int32, UInt32) : Void</Signature>
      </Method>
      <Method from="GetCursorPos" to="GetCursorPos">
        <Signature>(System.Drawing.Point&amp;) : Boolean</Signature>
      </Method>
      <Method from="SetCursorPos" to="SetCursorPos">
        <Signature>(Int32, Int32) : Boolean</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_Restore" to="è">
        <Signature>() : Int16</Signature>
      </Method>
      <Method from="get_ScreenX" to="â">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_ScreenY" to="ì">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="SetWinFullScreen" to="ã">
        <Signature>(IntPtr) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.WindowStyles" to="ýå">
      <Field from="WS_OVERLAPPED" to="è" />
      <Field from="WS_POPUP" to="â" />
      <Field from="WS_CHILD" to="ì" />
      <Field from="WS_MINIMIZE" to="ã" />
      <Field from="WS_VISIBLE" to="ý" />
      <Field from="WS_DISABLED" to="ò" />
      <Field from="WS_CLIPSIBLINGS" to="å" />
      <Field from="WS_CLIPCHILDREN" to="æ" />
      <Field from="WS_MAXIMIZE" to="é" />
      <Field from="WS_CAPTION" to="ë" />
      <Field from="WS_BORDER" to="í" />
      <Field from="WS_DLGFRAME" to="ê" />
      <Field from="WS_VSCROLL" to="î" />
      <Field from="WS_HSCROLL" to="ä" />
      <Field from="WS_SYSMENU" to="ó" />
      <Field from="WS_THICKFRAME" to="õ" />
      <Field from="WS_GROUP" to="ñ" />
      <Field from="WS_TABSTOP" to="ö" />
      <Field from="WS_MINIMIZEBOX" to="ù" />
      <Field from="WS_MAXIMIZEBOX" to="ï" />
      <Field from="WS_TILED" to="ú" />
      <Field from="WS_ICONIC" to="ü" />
      <Field from="WS_SIZEBOX" to="ç" />
      <Field from="WS_TILEDWINDOW" to="û" />
      <Field from="WS_OVERLAPPEDWINDOW" to="ÿ" />
      <Field from="WS_POPUPWINDOW" to="ô" />
      <Field from="WS_CHILDWINDOW" to="âè" />
      <Field from="WS_EX_DLGMODALFRAME" to="ââ" />
      <Field from="WS_EX_NOPARENTNOTIFY" to="âì" />
      <Field from="WS_EX_TOPMOST" to="âã" />
      <Field from="WS_EX_ACCEPTFILES" to="âý" />
      <Field from="WS_EX_TRANSPARENT" to="âò" />
      <Field from="WS_EX_MDICHILD" to="âå" />
      <Field from="WS_EX_TOOLWINDOW" to="âæ" />
      <Field from="WS_EX_WINDOWEDGE" to="âé" />
      <Field from="WS_EX_CLIENTEDGE" to="âë" />
      <Field from="WS_EX_CONTEXTHELP" to="âí" />
      <Field from="WS_EX_RIGHT" to="âê" />
      <Field from="WS_EX_LEFT" to="âî" />
      <Field from="WS_EX_RTLREADING" to="âä" />
      <Field from="WS_EX_LTRREADING" to="âó" />
      <Field from="WS_EX_LEFTSCROLLBAR" to="âõ" />
      <Field from="WS_EX_RIGHTSCROLLBAR" to="âñ" />
      <Field from="WS_EX_CONTROLPARENT" to="âö" />
      <Field from="WS_EX_STATICEDGE" to="âù" />
      <Field from="WS_EX_APPWINDOW" to="âï" />
      <Field from="WS_EX_OVERLAPPEDWINDOW" to="âú" />
      <Field from="WS_EX_PALETTEWINDOW" to="âü" />
      <Field from="WS_EX_LAYERED" to="âç" />
      <Field from="WS_EX_NOINHERITLAYOUT" to="âû" />
      <Field from="WS_EX_LAYOUTRTL" to="âÿ" />
      <Field from="WS_EX_COMPOSITED" to="âô" />
      <Field from="WS_EX_NOACTIVATE" to="ìè" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.ButtonHolder" to="ýæ">
      <Field from="option" to="è" />
      <Field from="value" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>(BetaGUI.Button, String) : Void</Signature>
      </Method>
      <Method from="get_Option" to="è">
        <Signature>() : BetaGUI.Button</Signature>
      </Method>
      <Method from="get_Value" to="â">
        <Signature>() : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.ScreenState" to="ýé">
      <Field from="planeViews" to="è" />
      <Field from="cloudNodes" to="â" />
      <Field from="mousePos" to="ì" />
      <Method from=".ctor" to=".ctor">
        <Signature>(System.Collections.Generic.List`1, System.Collections.Generic.List`1, System.Drawing.Point) : Void</Signature>
      </Method>
      <Method from="get_PlaneViews" to="è">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="set_PlaneViews" to="â">
        <Signature>(System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="get_CloudNodes" to="ì">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="set_CloudNodes" to="ã">
        <Signature>(System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="get_MousePos" to="ý">
        <Signature>() : System.Drawing.Point</Signature>
      </Method>
      <Method from="set_MousePos" to="ò">
        <Signature>(System.Drawing.Point) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.AntialiasingOptionsScreen" to="ýë">
      <Field from="C_ANTIALIASING" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="GetAvailableOptions" to="åã">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="getTitle" to="åì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="ProcessOptionSelection" to="åý">
        <Signature>(Wof.Controller.Screens.ButtonHolder) : Void</Signature>
      </Method>
      <Method from="IsOptionSelected" to="åò">
        <Signature>(String) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.BloomOptionsScreen" to="ýí">
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="getTitle" to="åì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetAvailableOptions" to="åã">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="ProcessOptionSelection" to="åý">
        <Signature>(Wof.Controller.Screens.ButtonHolder) : Void</Signature>
      </Method>
      <Method from="IsOptionSelected" to="åò">
        <Signature>(String) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.ControlsOptionsScreen" to="ýê">
      <Field from="controlsChangerHelper" to="è" />
      <Field from="controlsCaptureStarted" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera, MOIS.Keyboard) : Void</Signature>
      </Method>
      <Method from="controlsChangerHelper_onControlsChanged" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="controlsChangerHelper_onControlsCaptureStarted" to="â">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="controlsChangerHelper_onControlsCaptureEnded" to="ì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="getTitle" to="åì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetAvailableOptions" to="åã">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="ProcessOptionSelection" to="åý">
        <Signature>(Wof.Controller.Screens.ButtonHolder) : Void</Signature>
      </Method>
      <Method from="IsOptionSelected" to="åò">
        <Signature>(String) : Boolean</Signature>
      </Method>
      <Method from="onButtonPress" to="òì">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
      <Method from="LayoutOptions" to="åâ">
        <Signature>(System.Collections.Generic.List`1, BetaGUI.Window, BetaGUI.Callback) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.DonateScreen" to="ýî">
      <Field from="smallFontSize" to="è" />
      <Field from="guiWindow" to="â" />
      <Field from="donateMessage" to="ì" />
      <Field from="donateMessageHebrew" to="ã" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="CreateGUI" to="òï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="onButtonPress" to="òì">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.EndingScreen" to="ýä">
      <Field from="NamesFormat" to="è" />
      <Field from="highscore" to="â" />
      <Field from="names" to="ì" />
      <Field from="survivalTime" to="ã" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera, Boolean, Single, Int32, Single) : Void</Signature>
      </Method>
      <Method from="CleanUp" to="òò">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="CreateScene" to="òö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="getBackButtonIndex" to="åé">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="buildButtons" to="åæ">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="buildMessages" to="åë">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="onButtonPress" to="òì">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.IntroScreen" to="ýó">
      <Field from="C_INTRO_AD_PROBABILITY" to="è" />
      <Field from="C_TEXTURE_NAME" to="â" />
      <Field from="C_TEXTURE_NAME_ENHANCED" to="ì" />
      <Field from="C_AD_ZONE" to="ã" />
      <Field from="C_AD_MATERIAL" to="ý" />
      <Field from="overlay" to="ò" />
      <Field from="currentScreen" to="å" />
      <Field from="maxScreens" to="æ" />
      <Field from="lastChange" to="é" />
      <Field from="animation" to="ë" />
      <Field from="wasInitialized" to="í" />
      <Field from="screenTimes" to="ê" />
      <Field from="screenMinTimes" to="î" />
      <Field from="currentMaterialName" to="ä" />
      <Field from="textureDimensions" to="ó" />
      <Field from="isScreenAnAd" to="õ" />
      <Field from="currentAd" to="ñ" />
      <Field from="adIds" to="ö" />
      <Field from="ravenSound" to="ù" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="getFirstNonAdIndex" to="è">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="CreateScene" to="òö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateOcean" to="òñ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="FrameStarted" to="òç">
        <Signature>(Mogre.FrameEvent) : Void</Signature>
      </Method>
      <Method from="CreateSkybox" to="òõ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateGUI" to="òï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initAdScreens" to="â">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initScreen" to="ì">
        <Signature>(Int32) : Boolean</Signature>
      </Method>
      <Method from="NextScreen" to="ã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoStartScreen" to="ý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="MouseReceived" to="òü">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="CanChangeScreen" to="ò">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="KeyReceived" to="òú">
        <Signature>(String) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.LanguagesOptionsScreen" to="ýõ">
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="getTitle" to="åì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetAvailableOptions" to="åã">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="ProcessOptionSelection" to="åý">
        <Signature>(Wof.Controller.Screens.ButtonHolder) : Void</Signature>
      </Method>
      <Method from="IsOptionSelected" to="åò">
        <Signature>(String) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.CreditsScreen" to="ýñ">
      <Field from="NamesFormat" to="è" />
      <Field from="names" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera, Boolean, Single) : Void</Signature>
      </Method>
      <Method from="getBackButtonIndex" to="åé">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="buildButtons" to="åæ">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="buildMessages" to="åë">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="onButtonPress" to="òì">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.DifficultyScreen" to="ýö">
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="getTitle" to="åì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetAvailableOptions" to="åã">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="ProcessOptionSelection" to="åý">
        <Signature>(Wof.Controller.Screens.ButtonHolder) : Void</Signature>
      </Method>
      <Method from="IsOptionSelected" to="åò">
        <Signature>(String) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Indicators.GameMessages" to="ýù">
      <Field from="bgAnimationMaxOpacity" to="è" />
      <Field from="currentMessage" to="â" />
      <Field from="startTime" to="ì" />
      <Field from="messageQueue" to="ã" />
      <Field from="messageContainer" to="ý" />
      <Field from="messageElement" to="ò" />
      <Field from="messageOverlay" to="å" />
      <Field from="mainViewport" to="æ" />
      <Field from="xMargin" to="é" />
      <Field from="yMargin" to="ë" />
      <Field from="bgAnimationLength" to="í" />
      <Field from="iconOverlay" to="ê" />
      <Field from="iconElement" to="î" />
      <Field from="messageBgOverlay" to="ä" />
      <Field from="iconDefaultDimesions" to="ó" />
      <Field from="currentBgOpacity" to="õ" />
      <Field from="isIncreasingBgOpacity" to="ñ" />
      <Field from="isDecreasingBgOpacity" to="ö" />
      <Field from="backgroundElement" to="ù" />
      <Field from="instantBackground" to="ï" />
      <Field from="lastIconTexture" to="ú" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.Viewport) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_radioIconWidth" to="è">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_XMargin" to="â">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_YMargin" to="ì">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="CreateMessageContainer" to="ã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="IsMessageQueueEmpty" to="ý">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="AppendMessage" to="ò">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="AppendMessage" to="å">
        <Signature>(Single, Single, String) : Void</Signature>
      </Method>
      <Method from="AppendMessage" to="æ">
        <Signature>(Wof.Controller.Indicators.MessageEntry) : Void</Signature>
      </Method>
      <Method from="ShowCurrentMessage" to="é">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="set_InstantBackground" to="ë">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="UpdateControl" to="í">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="SetBgOpacity" to="ê">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="PrepareMessage" to="î">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="UpdateMessage" to="ä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PeekMessage" to="ó">
        <Signature>() : String</Signature>
      </Method>
      <Method from="ClearMessages" to="õ">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="ClearMessages" to="ñ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ClearMessage" to="ö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="DestroyMessageContainer" to="ù">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.GameScreen" to="ýï">
      <Field from="C_LOADING_AD_PROBABILITY" to="è" />
      <Field from="C_CHANGING_AMMO_AD_PROBABILITY" to="â" />
      <Field from="C_CHANGING_AMMO_AD_MIN_TIME" to="ì" />
      <Field from="C_SOLDIER_SCORE" to="ã" />
      <Field from="C_BARRACK_SCORE" to="ý" />
      <Field from="C_WOODEN_BUNKER_SCORE" to="ò" />
      <Field from="C_CONCRETE_BUNKER_SCORE" to="å" />
      <Field from="C_FORTRESS_BUNKER_SCORE" to="æ" />
      <Field from="C_FLAK_BUNKER_SCORE" to="é" />
      <Field from="C_SHIP_WOODEN_BUNKER_SCORE" to="ë" />
      <Field from="C_SHIP_CONCRETE_BUNKER_SCORE" to="í" />
      <Field from="C_ENEMY_FIGHTER_SCORE" to="ê" />
      <Field from="C_ENEMY_BOMBER_SCORE" to="î" />
      <Field from="C_LIFE_LEFT_SCORE" to="ä" />
      <Field from="C_RESPONSE_DELAY" to="ó" />
      <Field from="C_AD_LOADING_ZONE" to="õ" />
      <Field from="C_AD_GAME_ZONE" to="ñ" />
      <Field from="C_ENGINE_HINT_ICON" to="ö" />
      <Field from="C_BAD_LANDING_HINT_ICON" to="ù" />
      <Field from="C_LANDING_HINT_ICON" to="ï" />
      <Field from="changingAmmoTime" to="ú" />
      <Field from="showingChangingAmmoAds" to="ü" />
      <Field from="changeAmmoToWhenCanClearRestoreAmmunitionScreen" to="ç" />
      <Field from="DEFAULT_AD_IMAGE_NAMES" to="û" />
      <Field from="changingAmmoAdId" to="ÿ" />
      <Field from="lastFireTick" to="ô" />
      <Field from="showingLoadingAds" to="âè" />
      <Field from="loadingAd" to="ââ" />
      <Field from="changingAmmoAd" to="âì" />
      <Field from="changingAmmoAdTried" to="âã" />
      <Field from="backgroundAdsToShow" to="âý" />
      <Field from="ammoSelectedIndex" to="âò" />
      <Field from="ammoSelectedIndexCount" to="âå" />
      <Field from="nextLevelMenuSelectedIndex" to="âæ" />
      <Field from="nextLevelMenuSelectedIndexCount" to="âé" />
      <Field from="_bulletTimeBar" to="âë" />
      <Field from="_altitudeBar" to="âí" />
      <Field from="gameEventListener" to="âê" />
      <Field from="sceneMgr" to="âî" />
      <Field from="soundButtonIds" to="âä" />
      <Field from="musicButtonIds" to="âó" />
      <Field from="viewport" to="âõ" />
      <Field from="camera" to="âñ" />
      <Field from="lives" to="âö" />
      <Field from="fontSize" to="âù" />
      <Field from="controlsChangerHelper" to="âï" />
      <Field from="displayed" to="âú" />
      <Field from="mGui" to="âü" />
      <Field from="guiWindow" to="âç" />
      <Field from="missionTypeGui" to="âû" />
      <Field from="missionTypeWindow" to="âÿ" />
      <Field from="achievementsGui" to="âô" />
      <Field from="achievementsWindow" to="ìè" />
      <Field from="mGuiHint" to="ìâ" />
      <Field from="hintWindow" to="ìì" />
      <Field from="resumeButton" to="ìã" />
      <Field from="exitButton" to="ìý" />
      <Field from="gameOverButton" to="ìò" />
      <Field from="nextLevelButton" to="ìå" />
      <Field from="resumeFinishedLevelButton" to="ìæ" />
      <Field from="rearmButton" to="ìé" />
      <Field from="bombsButton" to="ìë" />
      <Field from="rocketsButton" to="ìí" />
      <Field from="torpedoesButton" to="ìê" />
      <Field from="mousePosX" to="ìî" />
      <Field from="mousePosY" to="ìä" />
      <Field from="currentLevel" to="ìó" />
      <Field from="levelNo" to="ìõ" />
      <Field from="levelFile" to="ìñ" />
      <Field from="levelInfo" to="ìö" />
      <Field from="levelView" to="ìù" />
      <Field from="score" to="ìï" />
      <Field from="isGamePaused" to="ìú" />
      <Field from="isInGameOverMenu" to="ìü" />
      <Field from="isInNextLevelMenu" to="ìç" />
      <Field from="isInPauseMenu" to="ìû" />
      <Field from="hiscoreCache" to="ìÿ" />
      <Field from="changingAmmo" to="ìô" />
      <Field from="prevFuelTooLow" to="ãè" />
      <Field from="prevOilTooLow" to="ãâ" />
      <Field from="readyForLevelEnd" to="ãì" />
      <Field from="nextFrameGotoNextLevel" to="ãã" />
      <Field from="framework" to="ãý" />
      <Field from="loading" to="ãò" />
      <Field from="loadingStart" to="ãå" />
      <Field from="isFirstLoadingFrame" to="ãæ" />
      <Field from="isStillFireGun" to="ãé" />
      <Field from="mayPlaySound" to="ãë" />
      <Field from="loadingLock" to="ãí" />
      <Field from="loadingOverlay" to="ãê" />
      <Field from="preloadingOverlay" to="ãî" />
      <Field from="firstTakeOff" to="ãä" />
      <Field from="indicatorControl" to="ãó" />
      <Field from="gameMessages" to="ãõ" />
      <Field from="wasLeftMousePressed" to="ãñ" />
      <Field from="isFirstFrame" to="ãö" />
      <Field from="controller" to="ãù" />
      <Field from="userPlaneType" to="ãï" />
      <Field from="survivalTime" to="ãú" />
      <Field from="isCapturingControlKey" to="ãü" />
      <Field from="achievementsIcons" to="ãç" />
      <Field from="timeSinceLastBuzzerSound" to="ãû" />
      <Field from="minBuzzerSoundRepeatTime" to="ãÿ" />
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegate5" to="ãô" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Microsoft.DirectX.DirectSound.Device, Int32, Wof.Model.Level.LevelInfo, Wof.Model.Level.Planes.PlaneType) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="getRandomDefaultIngameAdImageName" to="è">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_Lives" to="â">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="SetFontSize" to="òä">
        <Signature>(UInt32) : Void</Signature>
      </Method>
      <Method from="GetFontSize" to="òî">
        <Signature>() : UInt32</Signature>
      </Method>
      <Method from="GetTextVSpacing" to="òó">
        <Signature>() : UInt32</Signature>
      </Method>
      <Method from="GetMargin" to="òí">
        <Signature>() : Mogre.Vector2</Signature>
      </Method>
      <Method from="GetContainer" to="òë">
        <Signature>() : System.Windows.Forms.Control</Signature>
      </Method>
      <Method from="get_XScale" to="ì">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_YScale" to="ã">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="ViewportToScreen" to="òê">
        <Signature>(Mogre.Vector2) : Mogre.Vector2</Signature>
      </Method>
      <Method from="Displayed" to="òý">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_CompletedAchievements" to="ý">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="get_CurrentLevel" to="ò">
        <Signature>() : Wof.Model.Level.Level</Signature>
      </Method>
      <Method from="get_LevelNo" to="å">
        <Signature>() : System.Nullable`1</Signature>
      </Method>
      <Method from="OnRegisterDebugInfo" to="æ">
        <Signature>(Wof.Controller.DebugInfo) : Void</Signature>
      </Method>
      <Method from="OnRegisterPlane" to="é">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="FindPlaneView" to="ë">
        <Signature>(Wof.Model.Level.Planes.Plane) : Wof.View.PlaneView</Signature>
      </Method>
      <Method from="OnBunkerFire" to="í">
        <Signature>(Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.BunkerTile, Wof.Model.Level.Planes.Plane, Boolean) : Void</Signature>
      </Method>
      <Method from="OnRegisterSoldier" to="ê">
        <Signature>(Wof.Model.Level.Infantry.Soldier, Wof.Model.Level.MissionType) : Void</Signature>
      </Method>
      <Method from="UnregisterSoldier" to="î">
        <Signature>(Wof.Model.Level.Infantry.Soldier) : Void</Signature>
      </Method>
      <Method from="OnSoldierBeginDeath" to="ä">
        <Signature>(Wof.Model.Level.Infantry.Soldier, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from="OnSoldierPrepareToFire" to="ó">
        <Signature>(Wof.Model.Level.Infantry.Soldier, Single) : Void</Signature>
      </Method>
      <Method from="OnSoldierEndPrepareToFire" to="õ">
        <Signature>(Wof.Model.Level.Infantry.Soldier) : Void</Signature>
      </Method>
      <Method from="OnTurnOffEngine" to="ñ">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnTurnOnEngine" to="ö">
        <Signature>(Boolean, Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnEngineFaulty" to="ù">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnEngineRepaired" to="ï">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnStartEngineFailed" to="ú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnEnemyPlaneBombed" to="ü">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="OnTileBombed" to="ç">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="OnTorpedoSunk" to="û">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Model.Level.Weapon.Torpedo, System.Nullable`1) : Void</Signature>
      </Method>
      <Method from="OnTileDestroyed" to="ÿ">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="OnTorpedoHitGroundOrWater" to="ô">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Model.Level.Weapon.Torpedo, Single, Single) : Void</Signature>
      </Method>
      <Method from="OnPrepareChangeDirection" to="âè">
        <Signature>(Wof.Model.Level.Direction, Wof.Model.Level.Planes.Plane, Wof.Model.Level.Planes.TurnType) : Void</Signature>
      </Method>
      <Method from="OnPrepareChangeDirectionEnd" to="ââ">
        <Signature>(Object) : Void</Signature>
      </Method>
      <Method from="OnChangeDirectionEnd" to="âì">
        <Signature>(Object) : Void</Signature>
      </Method>
      <Method from="OnSpinBegin" to="âã">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnSpinEnd" to="âý">
        <Signature>(Object) : Void</Signature>
      </Method>
      <Method from="OnRegisterBomb" to="âò">
        <Signature>(Wof.Model.Level.Weapon.Bomb) : Void</Signature>
      </Method>
      <Method from="OnToggleGear" to="âå">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnRegisterRocket" to="âæ">
        <Signature>(Wof.Model.Level.Weapon.Rocket) : Void</Signature>
      </Method>
      <Method from="OnRegisterFlakBullet" to="âé">
        <Signature>(Wof.Model.Level.Weapon.FlakBullet) : Void</Signature>
      </Method>
      <Method from="OnRegisterGunBullet" to="âë">
        <Signature>(Wof.Model.Level.Weapon.GunBullet) : Void</Signature>
      </Method>
      <Method from="DisplayGUI" to="òã">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="CleanUp" to="òò">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="OnRegisterBunkerShellBullet" to="âí">
        <Signature>(Wof.Model.Level.Weapon.BunkerShellBullet) : Void</Signature>
      </Method>
      <Method from="OnUpdateModel" to="òå">
        <Signature>(Mogre.FrameEvent, MOIS.Mouse, MOIS.Keyboard, System.Collections.Generic.IList`1) : Void</Signature>
      </Method>
      <Method from="OnRegisterTorpedo" to="âê">
        <Signature>(Wof.Model.Level.Weapon.Torpedo) : Void</Signature>
      </Method>
      <Method from="OnGearToggleEnd" to="âî">
        <Signature>(Object) : Void</Signature>
      </Method>
      <Method from="OnHandleViewUpdateEnded" to="òé">
        <Signature>(Mogre.FrameEvent, MOIS.Mouse, MOIS.Keyboard, System.Collections.Generic.IList`1) : Void</Signature>
      </Method>
      <Method from="OnFireGun" to="âä">
        <Signature>(Wof.Model.Level.Weapon.IObject2D) : Void</Signature>
      </Method>
      <Method from="OnGunHit" to="âó">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Single, Single) : Void</Signature>
      </Method>
      <Method from="OnKillSoldier" to="âõ">
        <Signature>(Wof.Model.Level.Infantry.Soldier) : Void</Signature>
      </Method>
      <Method from="OnReadyLevelEnd" to="âñ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnChangeAmmunition" to="âö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnHandleViewUpdate" to="òæ">
        <Signature>(Mogre.FrameEvent, MOIS.Mouse, MOIS.Keyboard, System.Collections.Generic.IList`1) : Void</Signature>
      </Method>
      <Method from="OnPlaneCrashed" to="âù">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Model.Level.LevelTiles.TileKind) : Void</Signature>
      </Method>
      <Method from="OnPlaneDestroyed" to="âï">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnFortressHit" to="âú">
        <Signature>(Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.FortressBunkerTile, Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="OnWarCry" to="âü">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnCatchPlane" to="âç">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Model.Level.LevelTiles.AircraftCarrierTiles.EndAircraftCarrierTile) : Void</Signature>
      </Method>
      <Method from="OnReleasePlane" to="âû">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Model.Level.LevelTiles.AircraftCarrierTiles.EndAircraftCarrierTile) : Void</Signature>
      </Method>
      <Method from="onButtonPress" to="òì">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
      <Method from="OnUnregisterRocket" to="âÿ">
        <Signature>(Wof.Model.Level.Weapon.Rocket) : Void</Signature>
      </Method>
      <Method from="OnUnregisterTorpedo" to="âô">
        <Signature>(Wof.Model.Level.Weapon.Torpedo) : Void</Signature>
      </Method>
      <Method from="OnUnregisterBunkerShellBullet" to="ìè">
        <Signature>(Wof.Model.Level.Weapon.BunkerShellBullet) : Void</Signature>
      </Method>
      <Method from="OnUnregisterAmmunition" to="ìâ">
        <Signature>(Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="OnTileRestored" to="ìì">
        <Signature>(Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.BunkerTile) : Void</Signature>
      </Method>
      <Method from="OnTakeOff" to="ìã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnTouchDown" to="ìý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnPlaneWrecked" to="ìò">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnPlanePass" to="ìå">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnUnregisterPlane" to="ìæ">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnGunHitPlane" to="ìé">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnEnemyPlaneFromTheSide" to="ìë">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="OnPlaneForceChangeDirection" to="ìí">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnPlaneForceGoDown" to="ìê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnEnemyAttacksCarrier" to="ìî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnPlaneWrongDirectionStart" to="ìä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnStartWaterBubblesSound" to="ìó">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnAchievementFulFilled" to="ãæ">
        <Signature>(Wof.Model.Level.Achievement, Boolean) : Void</Signature>
      </Method>
      <Method from="OnAchievementUpdated" to="ãé">
        <Signature>(Wof.Model.Level.Achievement) : Void</Signature>
      </Method>
      <Method from="OnPlaneEnterRestoreAmmunitionTile" to="ãë">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnPlaneLeaveRestoreAmmunitionTile" to="ãí">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnStopWaterBubblesSound" to="ìõ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnShipDamaged" to="ìñ">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.ShipTile, Wof.Model.Level.LevelTiles.Watercraft.ShipState) : Void</Signature>
      </Method>
      <Method from="OnShipBeginSinking" to="ìö">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.ShipTile) : Void</Signature>
      </Method>
      <Method from="OnShipSinking" to="ìù">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.ShipTile) : Void</Signature>
      </Method>
      <Method from="OnShipSunk" to="ìï">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.BeginShipTile) : Void</Signature>
      </Method>
      <Method from="OnPotentialLanding" to="ìú">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnSecondaryFireOnCarrier" to="ìü">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnRocketHitPlane" to="ìç">
        <Signature>(Wof.Model.Level.Weapon.Rocket, Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnLevelFinished" to="ìû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnPlayFanfare" to="ìÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnPotentialBadLanding" to="ìô">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnShipBeginSubmerging" to="ãè">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipBeginEmerging" to="ãâ">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipSubmerging" to="ãì">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipEmerging" to="ãã">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipEmerged" to="ãý">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipSubmerged" to="ãò">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="GetFramework" to="ãå">
        <Signature>() : Wof.Controller.IFrameWork</Signature>
      </Method>
      <Method from="set_IsInGameOverMenu" to="ãê">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="controlsChangerHelper_onControlsChanged" to="ãî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="controlsChangerHelper_onControlsCaptureEnded" to="ãä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ControlGunFireSound" to="ãó">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="controlsChangerHelper_onControlsCaptureStarted" to="ãõ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateControlsChangerHelper" to="ãñ">
        <Signature>(MOIS.Keyboard) : Void</Signature>
      </Method>
      <Method from="OnWaterBubblesSound" to="ãö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_LevelFile" to="ãù">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_LevelInfo" to="ãï">
        <Signature>() : Wof.Model.Level.LevelInfo</Signature>
      </Method>
      <Method from="DisplayChangeAmmoScreen" to="ãú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_IsInNextLevelMenu" to="ãü">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="controlsChangerHelper_onChangeButtonAdded" to="ãç">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
      <Method from="StartLoading" to="ãû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetHintMessage" to="ãÿ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="UpdateHints" to="ãô">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="createAchivementsGui" to="ýè">
        <Signature>(UInt32) : Void</Signature>
      </Method>
      <Method from="createMissionTypeGui" to="ýâ">
        <Signature>(UInt32) : Void</Signature>
      </Method>
      <Method from="GetHintMessage2" to="ýì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetBadLandingHintMessage" to="ýã">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetLandingHintMessage" to="ýý">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetHighscore" to="ýò">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="UpdateSurvivalTime" to="ýå">
        <Signature>(Mogre.FrameEvent) : Void</Signature>
      </Method>
      <Method from="GetChangeAmmoMessage" to="ýæ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="FreeSplashScreens" to="ýé">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="UpdateMenusGui" to="ýë">
        <Signature>(MOIS.Mouse, MOIS.Keyboard, System.Collections.Generic.IList`1) : Void</Signature>
      </Method>
      <Method from="get_Score" to="ýí">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="ShuffleArray" to="ýê">
        <Signature>&lt;T&gt;(T[]) : Void</Signature>
      </Method>
      <Method from="BeginDynamicAdsDownload" to="ýî">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_CanClearRestoreAmmunitionScreen" to="ýä">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="backgroundAdDownloadedAsyncCallback" to="ýó">
        <Signature>(Wof.Controller.AdAction.AdManager.Ad) : Void</Signature>
      </Method>
      <Method from="startEngineSound_Ending" to="ýõ">
        <Signature>(Object, System.EventArgs) : Void</Signature>
      </Method>
      <Method from="RegisterDynamicAds" to="ýñ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_Framework" to="ýö">
        <Signature>() : Wof.Controller.IFrameWork</Signature>
      </Method>
      <Method from="get_IsInPauseMenu" to="ýù">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_IsInPauseMenu" to="ýï">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="TakeScreenshot" to="ýú">
        <Signature>() : String</Signature>
      </Method>
      <Method from="ControlFuelState" to="ýü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="DelayedChangeAmmoAndCloseScreen" to="ýç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SwitchCamera" to="ýû">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="SwitchCamera" to="ýÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="DisplayGameoverScreen" to="ýô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ControlOilState" to="òè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ControlPlaneEngineSounds" to="òâ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ClearPauseScreen" to="òõ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="DelayedPressButton" to="òñ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ResetPauseScreen" to="òö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnUnregisterFlakBullet" to="òù">
        <Signature>(Wof.Model.Level.Weapon.FlakBullet) : Void</Signature>
      </Method>
      <Method from="DisplayPauseScreen" to="òï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnUnregisterGunBullet" to="òú">
        <Signature>(Wof.Model.Level.Weapon.GunBullet) : Void</Signature>
      </Method>
      <Method from="BuildStatsScreen" to="òü">
        <Signature>(BetaGUI.Window) : Void</Signature>
      </Method>
      <Method from="get_ShowHintMessages" to="òç">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_SurvivalTime" to="òû">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_CountSurvivalTime" to="òÿ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_IsInNextLevelMenu" to="òô">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="ClearNextLevelScreen" to="åè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="DisplayNextLevelScreen" to="åâ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ClearRestoreAmmunitionScreen" to="åì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="increaseScore" to="åã">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="set_Score" to="åý">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_IsGamePaused" to="åò">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_IsGamePaused" to="åå">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_IsInGameOverMenu" to="åæ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="&lt;OnHandleViewUpdate&gt;b__4" to="åé">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.GameScreen.&lt;&gt;c__DisplayClass2" to="ýï.&lt;&gt;c__DisplayClass2" />
    <Type from="Wof.Controller.Screens.GameScreen.&lt;&gt;c__DisplayClass7" to="ýï.&lt;&gt;c__DisplayClass7" />
    <Type from="Wof.Controller.Screens.HighscoreEntry" to="ýú">
      <Field from="name" to="è" />
      <Field from="score" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>(String, Int32) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="get_Name" to="è">
        <Signature>() : String</Signature>
      </Method>
      <Method from="set_Name" to="â">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="get_Score" to="ì">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_Score" to="ã">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="ToString" to="íö">
        <Signature>() : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.HighscoresScreen" to="ýü">
      <Field from="guiWindow" to="è" />
      <Field from="highscores" to="â" />
      <Field from="survivalTime" to="ì" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="CreateGUI" to="òï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="LoadHighscoresList" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="onButtonPress" to="òì">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.HighscoreUtil" to="ýç">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="LoadList" to="è">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="CreateDefaultHighscores" to="â">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="RegisterHighscore" to="ì">
        <Signature>(Wof.Controller.Screens.HighscoreEntry) : Void</Signature>
      </Method>
      <Method from="FindLeastHighscore" to="ã">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="FindHighHighscore" to="ý">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="GetSurvivalTime" to="ò">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="SaveSurvivalTime" to="å">
        <Signature>(Single) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.IndicatorControl" to="ýû">
      <Field from="viewport" to="è" />
      <Field from="minimapViewport" to="â" />
      <Field from="hudOverlay" to="ì" />
      <Field from="gameScreen" to="ã" />
      <Field from="wasDisplayed" to="ý" />
      <Field from="ammoContainer" to="ò" />
      <Field from="ammoElement" to="å" />
      <Field from="ammoTypeContainer" to="æ" />
      <Field from="ammoTypeElement" to="é" />
      <Field from="livesContainer" to="ë" />
      <Field from="livesElement" to="í" />
      <Field from="scoreContainer" to="ê" />
      <Field from="scoreElement" to="î" />
      <Field from="hiscoreContainer" to="ä" />
      <Field from="hiscoreElement" to="ó" />
      <Field from="infoContainer" to="õ" />
      <Field from="infoElement" to="ñ" />
      <Field from="closing" to="ö" />
      <Field from="sceneMgr" to="ù" />
      <Field from="hud" to="ï" />
      <Field from="fuelArrow" to="ú" />
      <Field from="oilArrow" to="ü" />
      <Field from="hudNode" to="ç" />
      <Field from="fuelArrowNode" to="û" />
      <Field from="oilArrowNode" to="ÿ" />
      <Field from="random" to="ô" />
      <Field from="lastFuelIndicatorDither" to="âè" />
      <Field from="lastOilIndicatorDither" to="ââ" />
      <Field from="lastOilLedOn" to="âì" />
      <Field from="lastFuelLedOn" to="âã" />
      <Field from="lastWheelState" to="âý" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneManager, Mogre.Viewport, Mogre.Viewport, Wof.Controller.Screens.GameScreen) : Void</Signature>
      </Method>
      <Method from="get_WasDisplayed" to="è">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="RefreshFuel" to="â">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="RefreshOil" to="ì">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="UpdateWheelState" to="ã">
        <Signature>(Wof.Model.Level.Planes.WheelsState) : Void</Signature>
      </Method>
      <Method from="ChangeAmmoType" to="ý">
        <Signature>(Wof.Model.Level.Weapon.WeaponType) : Void</Signature>
      </Method>
      <Method from="DisplayIndicator" to="ò">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="UpdateGUI" to="å">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="UpdateFuelAndOilState" to="æ">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="CreateAmmoTypeContainer" to="é">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateAmmoContainer" to="ë">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateLivesContainer" to="í">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateScoreContainer" to="ê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateInfoContainer" to="î">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateHighscoreContainer" to="ä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ConfigureElement" to="ó">
        <Signature>(Mogre.OverlayElement, Int32, Int32, String) : Void</Signature>
      </Method>
      <Method from="ConfigureElement" to="õ">
        <Signature>(Mogre.OverlayElement, Int32, Int32, String, String) : Void</Signature>
      </Method>
      <Method from="ConfigureContainer" to="ñ">
        <Signature>(Mogre.OverlayContainer, Mogre.OverlayElement, Int32, Int32, Int32, Int32) : Void</Signature>
      </Method>
      <Method from="CountProportion" to="ö">
        <Signature>(Int32, Int32, Int32) : Int32</Signature>
      </Method>
      <Method from="ClearGUI" to="ù">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.LoadGameScreen" to="ýÿ">
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="GoToBack" to="åå">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
      <Method from="getTitle" to="åì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetAvailableOptions" to="åã">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="EnhancedLevelsScreen_OnOptionCreated" to="è">
        <Signature>(Mogre.Vector4, Boolean, String, UInt32, Int32, Wof.Controller.Screens.ButtonHolder) : Void</Signature>
      </Method>
      <Method from="GetOptionPos" to="åè">
        <Signature>(UInt32, BetaGUI.Window) : Mogre.Vector4</Signature>
      </Method>
      <Method from="GetOptionDisplayText" to="òô">
        <Signature>(String) : String</Signature>
      </Method>
      <Method from="ProcessOptionSelection" to="åý">
        <Signature>(Wof.Controller.Screens.ButtonHolder) : Void</Signature>
      </Method>
      <Method from="IsOptionSelected" to="åò">
        <Signature>(String) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.LoadGameUtil" to="ýô">
      <Field from="completedLevelsInfo" to="è" />
      <Field from="singleton" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_CompletedLevelsInfo" to="è">
        <Signature>() : Wof.Model.Level.CompletedLevelsInfo</Signature>
      </Method>
      <Method from="HasCompletedLevel" to="â">
        <Signature>(Wof.Model.Level.LevelInfo) : Boolean</Signature>
      </Method>
      <Method from="MergeAchievements" to="ì">
        <Signature>(System.Collections.Generic.List`1, System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="GetCompletedAchievementsForLevel" to="ã">
        <Signature>(Wof.Model.Level.LevelInfo) : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="UpdateCompletedLevelsInfo" to="ý">
        <Signature>(Wof.Model.Level.CompletedLevelsInfo) : Void</Signature>
      </Method>
      <Method from="get_Singleton" to="ò">
        <Signature>() : Wof.Controller.Screens.LoadGameUtil</Signature>
      </Method>
      <Method from="GetAllPossibleLevelsFull" to="å">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="GetAllPossibleLevels" to="æ">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="GetEnhancedLevels" to="é">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="GetCompletedLevelsFull" to="ë">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="GenerateStreamFromString" to="í">
        <Signature>(String) : System.IO.Stream</Signature>
      </Method>
      <Method from="GetCompletedLevels" to="ê">
        <Signature>() : Wof.Model.Level.CompletedLevelsInfo</Signature>
      </Method>
      <Method from="NewLevelCompleted" to="î">
        <Signature>(Wof.Model.Level.LevelInfo, System.Collections.Generic.List`1) : Wof.Model.Level.CompletedLevelsInfo</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.LoadGameUtil.&lt;&gt;c__DisplayClass2" to="ýô.&lt;&gt;c__DisplayClass2" />
    <Type from="Wof.Controller.Screens.LODOptionsScreen" to="òè">
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="getTitle" to="åì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetAvailableOptions" to="åã">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="ProcessOptionSelection" to="åý">
        <Signature>(Wof.Controller.Screens.ButtonHolder) : Void</Signature>
      </Method>
      <Method from="IsOptionSelected" to="åò">
        <Signature>(String) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.OptionsScreen" to="òâ">
      <Field from="guiWindow" to="è" />
      <Field from="restartRequired" to="â" />
      <Field from="shutdownRequired" to="ì" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateGUI" to="òï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="onButtonPress" to="òì">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.PositionedMessage" to="òì">
      <Field from="colourTop" to="è" />
      <Field from="colourBottom" to="â" />
      <Field from="x" to="ì" />
      <Field from="ySpace" to="ã" />
      <Field from="width" to="ý" />
      <Field from="height" to="ò" />
      <Field from="message" to="å" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Single, String) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Single, String, Mogre.ColourValue, Mogre.ColourValue) : Void</Signature>
      </Method>
      <Method from="get_ColourTop" to="è">
        <Signature>() : Mogre.ColourValue</Signature>
      </Method>
      <Method from="get_ColourBottom" to="â">
        <Signature>() : Mogre.ColourValue</Signature>
      </Method>
      <Method from="get_X" to="ì">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_YSpace" to="ã">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Width" to="ý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Height" to="ò">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Message" to="å">
        <Signature>() : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.ScoreEnterScreen" to="òã">
      <Field from="score" to="è" />
      <Field from="survivalTime" to="â" />
      <Field from="guiWindow" to="ì" />
      <Field from="nameInput" to="ã" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera, Int32, Single) : Void</Signature>
      </Method>
      <Method from="CreateGUI" to="òï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="onButtonPress" to="òì">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
      <Method from="saveHighscore" to="è">
        <Signature>(String, Int32, Single) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.SoundOptionsScreen" to="òý">
      <Field from="soundSystems" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_SoundSystems" to="è">
        <Signature>() : System.Collections.Hashtable</Signature>
      </Method>
      <Method from="getTitle" to="åì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetAvailableOptions" to="åã">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="IsOptionSelected" to="åò">
        <Signature>(String) : Boolean</Signature>
      </Method>
      <Method from="ProcessOptionSelection" to="åý">
        <Signature>(Wof.Controller.Screens.ButtonHolder) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.StartScreen" to="òò">
      <Field from="C_QUIT_AD_PROBABILITY" to="è" />
      <Field from="guiWindow" to="â" />
      <Field from="lockSync" to="ì" />
      <Field from="newUpdatesThread" to="ã" />
      <Field from="updatesChecked" to="ý" />
      <Field from="areUpdatesAvailable" to="ò" />
      <Field from="updateButtonIndex" to="å" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CleanUp" to="òò">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="CreateGUI" to="òï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="FrameStarted" to="òç">
        <Signature>(Mogre.FrameEvent) : Void</Signature>
      </Method>
      <Method from="OnHandleViewUpdateEnded" to="òé">
        <Signature>(Mogre.FrameEvent, MOIS.Mouse, MOIS.Keyboard, System.Collections.Generic.IList`1) : Void</Signature>
      </Method>
      <Method from="onNewUpdates" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CheckAvailableUpdatesDo" to="â">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="checkAvailableUpdates" to="ì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="onButtonPress" to="òì">
        <Signature>(BetaGUI.Button) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.TutorialScreen" to="òå">
      <Field from="C_SCREEN_NAME" to="è" />
      <Field from="tutorialOverlay" to="â" />
      <Field from="screen" to="ì" />
      <Field from="maxScreens" to="ã" />
      <Field from="lastChange" to="ý" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="KeyReceived" to="òú">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="NextScreen" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GotoStartScreen" to="â">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="MouseReceived" to="òü">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="CreateGUI" to="òï">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.VideoModeScreen" to="òæ">
      <Field from="C_VIDEO_MODE" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="getTitle" to="åì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetAvailableOptions" to="åã">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="ProcessOptionSelection" to="åý">
        <Signature>(Wof.Controller.Screens.ButtonHolder) : Void</Signature>
      </Method>
      <Method from="IsOptionSelected" to="åò">
        <Signature>(String) : Boolean</Signature>
      </Method>
      <Method from="FilterPossibleOptions" to="è">
        <Signature>(System.Collections.Generic.List`1) : System.Collections.Generic.List`1</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Screens.VSyncOptionsScreen" to="òé">
      <Field from="C_VSYNC" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.GameEventListener, Wof.Controller.IFrameWork, Mogre.Viewport, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="getTitle" to="åì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GetAvailableOptions" to="åã">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="IsOptionSelected" to="åò">
        <Signature>(String) : Boolean</Signature>
      </Method>
      <Method from="ProcessOptionSelection" to="åý">
        <Signature>(Wof.Controller.Screens.ButtonHolder) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.SHA1_Hash" to="òë">
      <Field from="hashOfLevel" to="è" />
      <Field from="hashOfImage" to="â" />
      <Field from="sha" to="ì" />
      <Field from="ae" to="ã" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="InitHashOfImage" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ComputeMD5" to="â">
        <Signature>(String) : Byte[]</Signature>
      </Method>
      <Method from="ValidateImage" to="ì">
        <Signature>(String) : Boolean</Signature>
      </Method>
      <Method from="ValidateLevel" to="ã">
        <Signature>(Int32, String) : Boolean</Signature>
      </Method>
      <Method from="DigestMessage" to="ý">
        <Signature>(String) : Byte[]</Signature>
      </Method>
      <Method from="DigestEncodedFile" to="ò">
        <Signature>(String) : Byte[]</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.SoundManager" to="òí">
      <Field from="dsDevice" to="è" />
      <Field from="instance" to="â" />
      <Field from="problemWithSound" to="ì" />
      <Field from="soundDisabled" to="ã" />
      <Field from="maxMusicTrackNo" to="ý" />
      <Field from="lastRandomMusicTrackNo" to="ò" />
      <Field from="gearUpSound" to="å" />
      <Field from="gearDownSound" to="æ" />
      <Field from="startEngineSound" to="é" />
      <Field from="stopEngineSound" to="ë" />
      <Field from="startEngineSound2" to="í" />
      <Field from="stopEngineSound2" to="ê" />
      <Field from="failedEngineSound" to="î" />
      <Field from="bunkerFireSound" to="ä" />
      <Field from="bunkerFireSound2" to="ó" />
      <Field from="flakBunkerFireSound" to="õ" />
      <Field from="flakBunkerFireSound2" to="ñ" />
      <Field from="fortressFireSound" to="ö" />
      <Field from="ricochetSound" to="ù" />
      <Field from="shipFireSound" to="ï" />
      <Field from="explosionSound" to="ú" />
      <Field from="explosionSound3" to="ü" />
      <Field from="explosionSound2" to="ç" />
      <Field from="waterExplosionSound" to="û" />
      <Field from="missileSound" to="ÿ" />
      <Field from="smallMissileSound" to="ô" />
      <Field from="torpedoSound" to="âè" />
      <Field from="torpedoRunSound" to="ââ" />
      <Field from="catchPlaneSound" to="âì" />
      <Field from="collisionSound" to="âã" />
      <Field from="bunkerRebuild" to="âý" />
      <Field from="startSubmergingSound" to="âò" />
      <Field from="achievementFulFilled" to="âå" />
      <Field from="reloadSound" to="âæ" />
      <Field from="buzzerSound" to="âé" />
      <Field from="bombSound" to="âë" />
      <Field from="incorrectStart" to="âí" />
      <Field from="fanfare" to="âê" />
      <Field from="engineIdleSound" to="âî" />
      <Field from="engineIdleSound2" to="âä" />
      <Field from="engineIdleSound3" to="âó" />
      <Field from="engineIdleFaultySound" to="âõ" />
      <Field from="gunFireBuffer" to="âñ" />
      <Field from="gunFireBuffer2" to="âö" />
      <Field from="waterBubblesBuffer" to="âù" />
      <Field from="oceanSound" to="âï" />
      <Field from="currentEngineIdleSound" to="âú" />
      <Field from="random" to="âü" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_DsDevice" to="è">
        <Signature>() : Microsoft.DirectX.DirectSound.Device</Signature>
      </Method>
      <Method from="set_DsDevice" to="â">
        <Signature>(Microsoft.DirectX.DirectSound.Device) : Void</Signature>
      </Method>
      <Method from="get_Instance" to="ì">
        <Signature>() : Wof.Controller.SoundManager</Signature>
      </Method>
      <Method from="get_ProblemWithSound" to="ã">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_ProblemWithSound" to="ý">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_SoundDisabled" to="ò">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_SoundDisabled" to="å">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_MaxMusicTrackNo" to="æ">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_LastRandomMusicTrackNo" to="é">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="PreloadRandomIngameMusic" to="ë">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="RandomizeTrackNo" to="í">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PreloadAndPlayNextRandomIngameMusicWhenFlagged" to="ê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayRandomIngameMusic" to="î">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="PlayIngameMusic" to="ä">
        <Signature>(Int32, Int32, Boolean) : Void</Signature>
      </Method>
      <Method from="PlayEndingTheme" to="ó">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayMainTheme" to="õ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StopMusic" to="ñ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayGearUpSound" to="ö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayGearDownSound" to="ù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayStartEngineSound" to="ï">
        <Signature>(Wof.Model.Level.Planes.Plane, System.EventHandler) : Void</Signature>
      </Method>
      <Method from="PlayStopEngineSound" to="ú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayFailedEngineSound" to="ü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayFailedSoundIfCan" to="ç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayBunkerFireSound" to="û">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayBunkerFireSound2" to="ÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayFlakBunkerFireSound" to="ô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayFortressFireSound" to="âè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayShipFireSound" to="ââ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayRicochetSound" to="âì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="IsRicochetBeingPlayed" to="âã">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="PlayHeavyExposionSound" to="âý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayExposionSound" to="âò">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayWaterExplosionSound" to="âå">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayMissleSound" to="âæ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlaySmallMissleSound" to="âé">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayTorpedoSound" to="âë">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="LoopTorpedoRunSound" to="âí">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="HaltTorpedoRunSound" to="âê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayCatchPlaneSound" to="âî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayCollisionPlaneSound" to="âä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayStartSubmergingSound" to="âó">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayBunkerRebuild" to="âõ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayAchievementFulFilled" to="âñ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayReloadSound" to="âö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayBuzzerSound" to="âù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayBombSound" to="âï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayIncorrectStart" to="âú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayFanfare" to="âü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Play" to="âç">
        <Signature>(Microsoft.DirectX.AudioVideoPlayback.Audio, Int32) : Void</Signature>
      </Method>
      <Method from="Play" to="âû">
        <Signature>(Microsoft.DirectX.AudioVideoPlayback.Audio) : Void</Signature>
      </Method>
      <Method from="getBaseVolume" to="âÿ">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="Stop" to="âô">
        <Signature>(Microsoft.DirectX.AudioVideoPlayback.Audio) : Void</Signature>
      </Method>
      <Method from="OnEngineFaulty" to="ìè">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnEngineRepaired" to="ìâ">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="LoopEngineSound" to="ìì">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="HaltEngineSound" to="ìã">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="LoopOceanSound" to="ìý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="HaltOceanSound" to="ìò">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SelectEngineIdleSound" to="ìå">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="SetEngineFrequency" to="ìæ">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="SetEnemyEngineVolume" to="ìé">
        <Signature>(Int32, Int32) : Void</Signature>
      </Method>
      <Method from="LoopGunFireSound" to="ìë">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="LoopGunFireSoundIfCan" to="ìí">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="HaltGunFireSound" to="ìê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SingleWaterBubblesSound" to="ìî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="LoopWaterBubblesSound" to="ìä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="HaltWaterBubblesSound" to="ìó">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayDXSound" to="ìõ">
        <Signature>(Microsoft.DirectX.DirectSound.Buffer, Int32, Microsoft.DirectX.DirectSound.BufferPlayFlags) : Void</Signature>
      </Method>
      <Method from="LoopDXSound" to="ìñ">
        <Signature>(Microsoft.DirectX.DirectSound.Buffer, Int32) : Void</Signature>
      </Method>
      <Method from="LoopDXSound" to="ìö">
        <Signature>(Microsoft.DirectX.DirectSound.Buffer) : Void</Signature>
      </Method>
      <Method from="HaltDXSound" to="ìù">
        <Signature>(Microsoft.DirectX.DirectSound.Buffer) : Void</Signature>
      </Method>
    </Type>
    <Type from="FSLOgreCS.FreeSL" to="òê">
      <Method from="fslInit" to="fslInit">
        <Signature>(FSLOgreCS.FreeSL.FSL_SOUND_SYSTEM) : Boolean</Signature>
      </Method>
      <Method from="fslShutDown" to="fslShutDown">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="fslSetVolume" to="fslSetVolume">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="fslFreeSound" to="fslFreeSound">
        <Signature>(UInt32, Boolean) : Void</Signature>
      </Method>
      <Method from="fslLoadSound" to="fslLoadSound">
        <Signature>(String) : UInt32</Signature>
      </Method>
      <Method from="fslStreamSound" to="fslStreamSound">
        <Signature>(String) : UInt32</Signature>
      </Method>
      <Method from="fslLoadSoundFromZip" to="fslLoadSoundFromZip">
        <Signature>(String, String) : UInt32</Signature>
      </Method>
      <Method from="fslSoundPlay" to="fslSoundPlay">
        <Signature>(UInt32) : Void</Signature>
      </Method>
      <Method from="fslSoundRewind" to="fslSoundRewind">
        <Signature>(UInt32) : Void</Signature>
      </Method>
      <Method from="fslSoundStop" to="fslSoundStop">
        <Signature>(UInt32) : Void</Signature>
      </Method>
      <Method from="fslSoundPause" to="fslSoundPause">
        <Signature>(UInt32) : Void</Signature>
      </Method>
      <Method from="fslSoundIsPlaying" to="fslSoundIsPlaying">
        <Signature>(UInt32) : Boolean</Signature>
      </Method>
      <Method from="fslSoundIsPaused" to="fslSoundIsPaused">
        <Signature>(UInt32) : Boolean</Signature>
      </Method>
      <Method from="fslSoundSetLooping" to="fslSoundSetLooping">
        <Signature>(UInt32, Boolean) : Void</Signature>
      </Method>
      <Method from="fslSoundIsLooping" to="fslSoundIsLooping">
        <Signature>(UInt32) : Boolean</Signature>
      </Method>
      <Method from="fslSoundSetGain" to="fslSoundSetGain">
        <Signature>(UInt32, Single) : Void</Signature>
      </Method>
      <Method from="fslSoundSetSourceRelative" to="fslSoundSetSourceRelative">
        <Signature>(UInt32, Boolean) : Void</Signature>
      </Method>
      <Method from="fslSetListenerPosition" to="fslSetListenerPosition">
        <Signature>(Single, Single, Single) : Void</Signature>
      </Method>
      <Method from="fslSetListenerOrientation" to="fslSetListenerOrientation">
        <Signature>(Single, Single, Single, Single, Single, Single) : Void</Signature>
      </Method>
      <Method from="fslSoundSetPosition" to="fslSoundSetPosition">
        <Signature>(UInt32, Single, Single, Single) : Void</Signature>
      </Method>
      <Method from="fslSoundSetMaxDistance" to="fslSoundSetMaxDistance">
        <Signature>(UInt32, Single) : Void</Signature>
      </Method>
      <Method from="fslSoundSetReferenceDistance" to="fslSoundSetReferenceDistance">
        <Signature>(UInt32, Single) : Void</Signature>
      </Method>
      <Method from="fslSetListenerEnvironment" to="fslSetListenerEnvironment">
        <Signature>(FSLOgreCS.FreeSL.FSL_EAX_LISTENER_PROPERTIES) : Void</Signature>
      </Method>
      <Method from="fslSetListenerEnvironmentPreset" to="fslSetListenerEnvironmentPreset">
        <Signature>(FSLOgreCS.FreeSL.FSL_LISTENER_ENVIRONMENT) : Void</Signature>
      </Method>
      <Method from="fslSetListenerDefaultEnvironment" to="fslSetListenerDefaultEnvironment">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="fslGetCurrentListenerEnvironment" to="fslGetCurrentListenerEnvironment">
        <Signature>() : FSLOgreCS.FreeSL.FSL_EAX_LISTENER_PROPERTIES</Signature>
      </Method>
      <Method from="fslLoadListenerEnvironment" to="fslLoadListenerEnvironment">
        <Signature>(String) : FSLOgreCS.FreeSL.FSL_EAX_LISTENER_PROPERTIES</Signature>
      </Method>
      <Method from="fslLoadListenerEnvironmentFromZip" to="fslLoadListenerEnvironmentFromZip">
        <Signature>(String, String) : FSLOgreCS.FreeSL.FSL_EAX_LISTENER_PROPERTIES</Signature>
      </Method>
      <Method from="fslCreateListenerEnvironment" to="fslCreateListenerEnvironment">
        <Signature>(String, UInt32) : FSLOgreCS.FreeSL.FSL_EAX_LISTENER_PROPERTIES</Signature>
      </Method>
      <Method from="fslUpdate" to="fslUpdate">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="fslSleep" to="fslSleep">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="fslSetErrorCallback" to="fslSetErrorCallback">
        <Signature>(FSLOgreCS.FreeSL.ErrorCallbackDelegate) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="FSLOgreCS.FreeSL.FSL_SOUND_SYSTEM" to="òê.òî" />
    <Type from="FSLOgreCS.FreeSL.FSL_LISTENER_ENVIRONMENT" to="òê.òä">
      <Field from="FSL_ENVIRONMENT_GENERIC" to="è" />
      <Field from="FSL_ENVIRONMENT_PADDEDCELL" to="â" />
      <Field from="FSL_ENVIRONMENT_ROOM" to="ì" />
      <Field from="FSL_ENVIRONMENT_BATHROOM" to="ã" />
      <Field from="FSL_ENVIRONMENT_LIVINGROOM" to="ý" />
      <Field from="FSL_ENVIRONMENT_STONEROOM" to="ò" />
      <Field from="FSL_ENVIRONMENT_AUDITORIUM" to="å" />
      <Field from="FSL_ENVIRONMENT_CONCERTHALL" to="æ" />
      <Field from="FSL_ENVIRONMENT_CAVE" to="é" />
      <Field from="FSL_ENVIRONMENT_ARENA" to="ë" />
      <Field from="FSL_ENVIRONMENT_HANGAR" to="í" />
      <Field from="FSL_ENVIRONMENT_CARPETEDHALLWAY" to="ê" />
      <Field from="FSL_ENVIRONMENT_HALLWAY" to="î" />
      <Field from="FSL_ENVIRONMENT_STONECORRIDOR" to="ä" />
      <Field from="FSL_ENVIRONMENT_ALLEY" to="ó" />
      <Field from="FSL_ENVIRONMENT_FOREST" to="õ" />
      <Field from="FSL_ENVIRONMENT_CITY" to="ñ" />
      <Field from="FSL_ENVIRONMENT_MOUNTAINS" to="ö" />
      <Field from="FSL_ENVIRONMENT_QUARRY" to="ù" />
      <Field from="FSL_ENVIRONMENT_PLAIN" to="ï" />
      <Field from="FSL_ENVIRONMENT_PARKINGLOT" to="ú" />
      <Field from="FSL_ENVIRONMENT_SEWERPIPE" to="ü" />
      <Field from="FSL_ENVIRONMENT_UNDERWATER" to="ç" />
      <Field from="FSL_ENVIRONMENT_DRUGGED" to="û" />
      <Field from="FSL_ENVIRONMENT_DIZZY" to="ÿ" />
      <Field from="FSL_ENVIRONMENT_PSYCHOTIC" to="ô" />
      <Field from="FSL_ENVIRONMENT_COUNT" to="âè" />
    </Type>
    <Type from="FSLOgreCS.FreeSL.FSL_EAX_LISTENER_PROPERTIES" to="òê.òó">
      <Field from="lRoom" to="è" />
      <Field from="lRoomHF" to="â" />
      <Field from="flRoomRolloffFactor" to="ì" />
      <Field from="flDecayTime" to="ã" />
      <Field from="flDecayHFRatio" to="ý" />
      <Field from="lReflections" to="ò" />
      <Field from="flReflectionsDelay" to="å" />
      <Field from="lReverb" to="æ" />
      <Field from="flReverbDelay" to="é" />
      <Field from="dwEnvironment" to="ë" />
      <Field from="flEnvironmentSize" to="í" />
      <Field from="flEnvironmentDiffusion" to="ê" />
      <Field from="flAirAbsorptionHF" to="î" />
      <Field from="dwFlags" to="ä" />
    </Type>
    <Type from="FSLOgreCS.FreeSL.ErrorCallbackDelegate" to="òê.òõ">
      <Method from=".ctor" to=".ctor">
        <Signature>(Object, IntPtr) : Void</Signature>
      </Method>
    </Type>
    <Type from="FSLOgreCS.FSLListener" to="òñ">
      <Field from="_listener" to="è" />
      <Field from="ZFlipped" to="â" />
      <Field from="_plane" to="ì" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.CameraListenerBase) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.CameraListenerBase, Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="get_Listener" to="è">
        <Signature>() : Wof.Controller.CameraListenerBase</Signature>
      </Method>
      <Method from="SetListener" to="â">
        <Signature>(Wof.Controller.CameraListenerBase, Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="Update" to="ì">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="FSLOgreCS.FSLSoundEntity" to="òö">
      <Field from="_renderable" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(String, Mogre.SceneNode, String, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(String, String, Mogre.SceneNode, String, Boolean) : Void</Signature>
      </Method>
      <Method from="SetRenderable" to="è">
        <Signature>(Mogre.SceneNode) : Void</Signature>
      </Method>
      <Method from="Update" to="åä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Play" to="åê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetMaxDistance" to="â">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="SetReferenceDistance" to="ì">
        <Signature>(Single) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Controller.Splash" to="òù">
      <Field from="components" to="è" />
      <Field from="LoadingText" to="â" />
      <Field from="Progress" to="ì" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Increment" to="è">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="SetStepsCount" to="â">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="Increment" to="ì">
        <Signature>(String, Int32) : Void</Signature>
      </Method>
      <Method from="Increment" to="ã">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="Show" to="ý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Dispose" to="íù">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="InitializeComponent" to="ò">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Languages.FontManager" to="Wof.Languages.FontManager" />
    <Type from="Wof.Languages.FontManager.AvailableFonts" to="Wof.Languages.FontManager.AvailableFonts" />
    <Type from="Wof.Languages.LanguageKey" to="Wof.Languages.LanguageKey" />
    <Type from="Wof.Languages.LanguageManager" to="Wof.Languages.LanguageManager" />
    <Type from="Wof.Languages.LanguageManager.CultureType" to="Wof.Languages.LanguageManager.CultureType" />
    <Type from="Wof.Languages.LanguageResources" to="Wof.Languages.LanguageResources" />
    <Type from="Wof.Languages.WofResourceManager" to="Wof.Languages.WofResourceManager" />
    <Type from="Wof.Languages.XmlLanguage" to="Wof.Languages.XmlLanguage" />
    <Type from="Wof.Languages.XmlLanguageManager" to="Wof.Languages.XmlLanguageManager" />
    <Type from="Wof.Misc.IniFile" to="Wof.Misc.IniFile" />
    <Type from="Wof.Misc.UnitConverter" to="Wof.Misc.UnitConverter" />
    <Type from="Wof.Misc.ViewHelper" to="Wof.Misc.ViewHelper" />
    <Type from="Wof.Model.Configuration.ConfigurationAttributes" to="Wof.Model.Configuration.ConfigurationAttributes" />
    <Type from="Wof.Model.Configuration.ConfigurationAttributes.UserPlane" to="Wof.Model.Configuration.ConfigurationAttributes.UserPlane" />
    <Type from="Wof.Model.Configuration.ConfigurationAttributes.EnemyPlane" to="Wof.Model.Configuration.ConfigurationAttributes.EnemyPlane" />
    <Type from="Wof.Model.Configuration.ConfigurationAttributes.Soldier" to="Wof.Model.Configuration.ConfigurationAttributes.Soldier" />
    <Type from="Wof.Model.Configuration.ConfigurationAttributes.Bunker" to="Wof.Model.Configuration.ConfigurationAttributes.Bunker" />
    <Type from="Wof.Model.Configuration.ConfigurationAttributes.FlakBunker" to="Wof.Model.Configuration.ConfigurationAttributes.FlakBunker" />
    <Type from="Wof.Model.Configuration.ConfigurationAttributes.Gun" to="Wof.Model.Configuration.ConfigurationAttributes.Gun" />
    <Type from="Wof.Model.Configuration.ConfigurationAttributes.Bomb" to="Wof.Model.Configuration.ConfigurationAttributes.Bomb" />
    <Type from="Wof.Model.Configuration.ConfigurationAttributes.Rocket" to="Wof.Model.Configuration.ConfigurationAttributes.Rocket" />
    <Type from="Wof.Model.Configuration.ConfigurationAttributes.Torpedo" to="Wof.Model.Configuration.ConfigurationAttributes.Torpedo" />
    <Type from="Wof.Model.Configuration.ConfigurationAttributes.Effects" to="Wof.Model.Configuration.ConfigurationAttributes.Effects" />
    <Type from="Wof.Model.Configuration.ConfigurationManager" to="Wof.Model.Configuration.ConfigurationManager" />
    <Type from="Wof.Model.Configuration.ConfigurationNames" to="Wof.Model.Configuration.ConfigurationNames" />
    <Type from="Wof.Model.Configuration.GameConsts" to="Wof.Model.Configuration.GameConsts" />
    <Type from="Wof.Model.Configuration.GameConsts.GenericPlane" to="Wof.Model.Configuration.GameConsts.GenericPlane" />
    <Type from="Wof.Model.Configuration.GameConsts.P47Plane" to="Wof.Model.Configuration.GameConsts.P47Plane" />
    <Type from="Wof.Model.Configuration.GameConsts.F4UPlane" to="Wof.Model.Configuration.GameConsts.F4UPlane" />
    <Type from="Wof.Model.Configuration.GameConsts.B25Plane" to="Wof.Model.Configuration.GameConsts.B25Plane" />
    <Type from="Wof.Model.Configuration.GameConsts.EnemyPlaneBase" to="Wof.Model.Configuration.GameConsts.EnemyPlaneBase" />
    <Type from="Wof.Model.Configuration.GameConsts.EnemyFighter" to="Wof.Model.Configuration.GameConsts.EnemyFighter" />
    <Type from="Wof.Model.Configuration.GameConsts.EnemyBomber" to="Wof.Model.Configuration.GameConsts.EnemyBomber" />
    <Type from="Wof.Model.Configuration.GameConsts.Soldier" to="Wof.Model.Configuration.GameConsts.Soldier" />
    <Type from="Wof.Model.Configuration.GameConsts.WoodenBunker" to="Wof.Model.Configuration.GameConsts.WoodenBunker" />
    <Type from="Wof.Model.Configuration.GameConsts.FlakBunker" to="Wof.Model.Configuration.GameConsts.FlakBunker" />
    <Type from="Wof.Model.Configuration.GameConsts.ShipWoodenBunker" to="Wof.Model.Configuration.GameConsts.ShipWoodenBunker" />
    <Type from="Wof.Model.Configuration.GameConsts.ConcreteBunker" to="Wof.Model.Configuration.GameConsts.ConcreteBunker" />
    <Type from="Wof.Model.Configuration.GameConsts.FortressBunker" to="Wof.Model.Configuration.GameConsts.FortressBunker" />
    <Type from="Wof.Model.Configuration.GameConsts.ShipConcreteBunker" to="Wof.Model.Configuration.GameConsts.ShipConcreteBunker" />
    <Type from="Wof.Model.Configuration.GameConsts.Bomb" to="Wof.Model.Configuration.GameConsts.Bomb" />
    <Type from="Wof.Model.Configuration.GameConsts.Rocket" to="Wof.Model.Configuration.GameConsts.Rocket" />
    <Type from="Wof.Model.Configuration.GameConsts.Torpedo" to="Wof.Model.Configuration.GameConsts.Torpedo" />
    <Type from="Wof.Model.Configuration.GameConsts.Gun" to="Wof.Model.Configuration.GameConsts.Gun" />
    <Type from="Wof.Model.Configuration.GameConsts.Effects" to="Wof.Model.Configuration.GameConsts.Effects" />
    <Type from="Wof.Model.Configuration.GameConsts.Game" to="Wof.Model.Configuration.GameConsts.Game" />
    <Type from="Wof.Model.Configuration.ReadConfiguration" to="Wof.Model.Configuration.ReadConfiguration" />
    <Type from="Wof.Model.Exceptions.ConfigurationFileNotFoundException" to="òï">
      <Method from=".ctor" to=".ctor">
        <Signature>(String) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Exceptions.ExceptionService" to="òú">
      <Method from="Show" to="è">
        <Signature>(String) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Exceptions.LevelCorruptedException" to="òü">
      <Method from=".ctor" to=".ctor">
        <Signature>(String, String) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Exceptions.LevelFileNotFoundException" to="òç">
      <Method from=".ctor" to=".ctor">
        <Signature>(String) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Exceptions.LevelUnavailableException" to="òû">
      <Method from=".ctor" to=".ctor">
        <Signature>(String) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Exceptions.TilesFileNotFoundException" to="òÿ">
      <Method from=".ctor" to=".ctor">
        <Signature>(String) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.IAttractorTarget" to="Wof.Model.Level.IAttractorTarget" />
    <Type from="Wof.Model.Level.AttractorTarget" to="Wof.Model.Level.AttractorTarget" />
    <Type from="Wof.Model.Level.Carriers.Carrier" to="òô">
      <Field from="height" to="è" />
      <Field from="carrierTiles" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>(System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="get_Height" to="è">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_CarrierTiles" to="â">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="set_CarrierTiles" to="ì">
        <Signature>(System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="GetBeginPosition" to="ã">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="GetEndPosition" to="ý">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="GetRestoreAmunitionPosition" to="ò">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="IsOnEndCarrier" to="å">
        <Signature>(Wof.Model.Level.Common.PointD) : Wof.Model.Level.LevelTiles.AircraftCarrierTiles.EndAircraftCarrierTile</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Common.AircraftElement" to="åè">
      <Field from="Begin" to="è" />
      <Field from="Middle" to="â" />
      <Field from="End" to="ì" />
      <Field from="RestoreAmmunition" to="ã" />
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Common.ShipElement" to="åâ">
      <Field from="Begin" to="è" />
      <Field from="Middle" to="â" />
      <Field from="End" to="ì" />
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Common.IMove" to="åì">
      <Method from="Move" to="íï">
        <Signature>(Int32) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Common.Line" to="åã">
      <Field from="a" to="è" />
      <Field from="b" to="â" />
      <Field from="c" to="ì" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Wof.Model.Level.Common.PointD) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD) : Void</Signature>
      </Method>
      <Method from="get_B" to="è">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_A" to="â">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_C" to="ì">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="ComputeC" to="ã">
        <Signature>(Wof.Model.Level.Common.PointD) : Single</Signature>
      </Method>
      <Method from="Intersect" to="ý">
        <Signature>(Wof.Model.Level.Common.Line) : Wof.Model.Level.Common.PointD</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Common.Mathematics" to="åý">
      <Field from="MoveInterval" to="è" />
      <Field from="Epsilon" to="â" />
      <Field from="random" to="ì" />
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="RangeRandom" to="è">
        <Signature>(Single, Single) : Single</Signature>
      </Method>
      <Method from="MinCordinate" to="â">
        <Signature>(Boolean, Wof.Model.Level.Common.PointD[]) : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="MaxCoordinate" to="ì">
        <Signature>(Boolean, Wof.Model.Level.Common.PointD[]) : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="PositionToIndex" to="ã">
        <Signature>(Single) : Int32</Signature>
      </Method>
      <Method from="IndexToPosition" to="ý">
        <Signature>(Int32) : Single</Signature>
      </Method>
      <Method from="GetMoveFactor" to="ò">
        <Signature>(Int32, Int32) : Single</Signature>
      </Method>
      <Method from="GetMoveFactor" to="å">
        <Signature>(Int32) : Single</Signature>
      </Method>
      <Method from="SegmentsIntersect" to="æ">
        <Signature>(Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD) : Boolean</Signature>
      </Method>
      <Method from="PointInsideSegment" to="é">
        <Signature>(Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD) : Boolean</Signature>
      </Method>
      <Method from="detMatrix" to="ë">
        <Signature>(Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD) : Single</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Common.PeakManager" to="åò">
      <Field from="peaks" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD) : Void</Signature>
      </Method>
      <Method from="get_Peaks" to="è">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="AddFirstPeak" to="â">
        <Signature>(Wof.Model.Level.Common.PointD, System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="AddSecondPoint" to="ì">
        <Signature>(Wof.Model.Level.Common.PointD, System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="AddThirdPeak" to="ã">
        <Signature>(Wof.Model.Level.Common.PointD, System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="AddFourthPoint" to="ý">
        <Signature>(Wof.Model.Level.Common.PointD, System.Collections.Generic.List`1) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Common.PointD" to="åå">
      <Field from="mX" to="è" />
      <Field from="mY" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Common.PointD) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="get_ZERO" to="è">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="get_X" to="â">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_X" to="ì">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_Y" to="ã">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_Y" to="ý">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_IsEmpty" to="ò">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_Angle" to="å">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="GetRelativeAngle" to="æ">
        <Signature>(Wof.Model.Level.Direction) : Single</Signature>
      </Method>
      <Method from="get_EuclidesLength" to="é">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_EuclidesLength" to="ë">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_SignX" to="í">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_SignY" to="ê">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="op_Addition" to="î">
        <Signature>(Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD) : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="op_Subtraction" to="ä">
        <Signature>(Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD) : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="op_Multiply" to="ó">
        <Signature>(Single, Wof.Model.Level.Common.PointD) : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="op_Division" to="õ">
        <Signature>(Wof.Model.Level.Common.PointD, Single) : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="Offset" to="ñ">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="ToVector2" to="ö">
        <Signature>() : Mogre.Vector2</Signature>
      </Method>
      <Method from="ToPoint" to="ù">
        <Signature>() : System.Drawing.Point</Signature>
      </Method>
      <Method from="GetHashCode" to="íú">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="Equals" to="íü">
        <Signature>(Object) : Boolean</Signature>
      </Method>
      <Method from="ToString" to="íç">
        <Signature>() : String</Signature>
      </Method>
      <Method from="Move" to="ï">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="Move" to="ú">
        <Signature>(Wof.Model.Level.Common.PointD) : Void</Signature>
      </Method>
      <Method from="Rotate" to="ü">
        <Signature>(Wof.Model.Level.Common.PointD, Single) : Void</Signature>
      </Method>
      <Method from="Extend" to="ç">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="Normalise" to="û">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Draw" to="ÿ">
        <Signature>(System.Drawing.Graphics, System.Drawing.Color) : Void</Signature>
      </Method>
      <Method from="Clone" to="íû">
        <Signature>() : Object</Signature>
      </Method>
      <Method from="CompareTo" to="íÿ">
        <Signature>(Wof.Model.Level.Common.PointD) : Int32</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Common.Predicates" to="åæ">
      <Field from="JarringField" to="è" />
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegate4" to="â" />
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegatef" to="ì" />
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegate11" to="ã" />
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegate13" to="ý" />
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegate15" to="ò" />
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegate17" to="å" />
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegate19" to="æ" />
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegate1b" to="é" />
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegate1d" to="ë" />
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegate37" to="í" />
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegate39" to="ê" />
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegate3b" to="î" />
      <Method from="GetAllForXYCoordinate" to="è">
        <Signature>(Boolean, Single) : System.Predicate`1</Signature>
      </Method>
      <Method from="GetAllBunkerTiles" to="â">
        <Signature>() : System.Predicate`1</Signature>
      </Method>
      <Method from="GetAchievementByType" to="ì">
        <Signature>(Wof.Model.Level.AchievementType) : System.Predicate`1</Signature>
      </Method>
      <Method from="GetAchievementByShipType" to="ã">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.TypeOfEnemyShip) : System.Predicate`1</Signature>
      </Method>
      <Method from="GetAchievementByEnemyPlaneType" to="ý">
        <Signature>(Wof.Model.Level.Planes.PlaneType) : System.Predicate`1</Signature>
      </Method>
      <Method from="GetCompletedAchievements" to="ò">
        <Signature>() : System.Predicate`1</Signature>
      </Method>
      <Method from="GetAllShipTiles" to="å">
        <Signature>() : System.Predicate`1</Signature>
      </Method>
      <Method from="GetAllEnemyFighters" to="æ">
        <Signature>() : System.Predicate`1</Signature>
      </Method>
      <Method from="GetAllEnemyBombers" to="é">
        <Signature>() : System.Predicate`1</Signature>
      </Method>
      <Method from="GetAllAircraftCarrierTiles" to="ë">
        <Signature>() : System.Predicate`1</Signature>
      </Method>
      <Method from="RemoveAllDestroyedMissiles" to="í">
        <Signature>() : System.Predicate`1</Signature>
      </Method>
      <Method from="RemoveAllDeadSoldiers" to="ê">
        <Signature>() : System.Predicate`1</Signature>
      </Method>
      <Method from="RemoveAllDeadGenerals" to="î">
        <Signature>() : System.Predicate`1</Signature>
      </Method>
      <Method from="FindSoldierByPosition" to="ä">
        <Signature>(Int32) : System.Predicate`1</Signature>
      </Method>
      <Method from="FindAliveSoldierFromInterval" to="ó">
        <Signature>(Int32, Int32) : System.Predicate`1</Signature>
      </Method>
      <Method from="FindSoldierFromInterval" to="õ">
        <Signature>(Int32, Int32) : System.Predicate`1</Signature>
      </Method>
      <Method from="FindAliveGeneralFromInterval" to="ñ">
        <Signature>(Int32, Int32) : System.Predicate`1</Signature>
      </Method>
      <Method from="FindSoldierFromStartingIndex" to="ö">
        <Signature>(Int32) : System.Predicate`1</Signature>
      </Method>
      <Method from="FindGeneralFromStartingIndex" to="ù">
        <Signature>(Int32) : System.Predicate`1</Signature>
      </Method>
      <Method from="FindGeneralFromInterval" to="ï">
        <Signature>(Int32, Int32) : System.Predicate`1</Signature>
      </Method>
      <Method from="FindAliveSoldierFromInterval" to="ú">
        <Signature>(Single) : System.Predicate`1</Signature>
      </Method>
      <Method from="FindStartIsland" to="ü">
        <Signature>() : System.Predicate`1</Signature>
      </Method>
      <Method from="FindEndIsland" to="ç">
        <Signature>() : System.Predicate`1</Signature>
      </Method>
      <Method from="FindAllEnemyInstallationTiles" to="û">
        <Signature>() : System.Predicate`1</Signature>
      </Method>
      <Method from="&lt;GetAllBunkerTiles&gt;b__3" to="ÿ">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Boolean</Signature>
      </Method>
      <Method from="&lt;GetCompletedAchievements&gt;b__e" to="ô">
        <Signature>(Wof.Model.Level.Achievement) : Boolean</Signature>
      </Method>
      <Method from="&lt;GetAllShipTiles&gt;b__10" to="âè">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Boolean</Signature>
      </Method>
      <Method from="&lt;GetAllEnemyFighters&gt;b__12" to="ââ">
        <Signature>(Wof.Model.Level.Planes.Plane) : Boolean</Signature>
      </Method>
      <Method from="&lt;GetAllEnemyBombers&gt;b__14" to="âì">
        <Signature>(Wof.Model.Level.Planes.Plane) : Boolean</Signature>
      </Method>
      <Method from="&lt;GetAllAircraftCarrierTiles&gt;b__16" to="âã">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Boolean</Signature>
      </Method>
      <Method from="&lt;RemoveAllDestroyedMissiles&gt;b__18" to="âý">
        <Signature>(Wof.Model.Level.Weapon.Ammunition) : Boolean</Signature>
      </Method>
      <Method from="&lt;RemoveAllDeadSoldiers&gt;b__1a" to="âò">
        <Signature>(Wof.Model.Level.Infantry.Soldier) : Boolean</Signature>
      </Method>
      <Method from="&lt;RemoveAllDeadGenerals&gt;b__1c" to="âå">
        <Signature>(Wof.Model.Level.Infantry.General) : Boolean</Signature>
      </Method>
      <Method from="&lt;FindStartIsland&gt;b__36" to="âæ">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Boolean</Signature>
      </Method>
      <Method from="&lt;FindEndIsland&gt;b__38" to="âé">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Boolean</Signature>
      </Method>
      <Method from="&lt;FindAllEnemyInstallationTiles&gt;b__3a" to="âë">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Common.Predicates.&lt;&gt;c__DisplayClass1" to="åæ.&lt;&gt;c__DisplayClass1" />
    <Type from="Wof.Model.Level.Common.Predicates.&lt;&gt;c__DisplayClass6" to="åæ.&lt;&gt;c__DisplayClass6" />
    <Type from="Wof.Model.Level.Common.Predicates.&lt;&gt;c__DisplayClass9" to="åæ.&lt;&gt;c__DisplayClass9" />
    <Type from="Wof.Model.Level.Common.Predicates.&lt;&gt;c__DisplayClassc" to="åæ.&lt;&gt;c__DisplayClassc" />
    <Type from="Wof.Model.Level.Common.Predicates.&lt;&gt;c__DisplayClass1f" to="åæ.&lt;&gt;c__DisplayClass1f" />
    <Type from="Wof.Model.Level.Common.Predicates.&lt;&gt;c__DisplayClass22" to="åæ.&lt;&gt;c__DisplayClass22" />
    <Type from="Wof.Model.Level.Common.Predicates.&lt;&gt;c__DisplayClass25" to="åæ.&lt;&gt;c__DisplayClass25" />
    <Type from="Wof.Model.Level.Common.Predicates.&lt;&gt;c__DisplayClass28" to="åæ.&lt;&gt;c__DisplayClass28" />
    <Type from="Wof.Model.Level.Common.Predicates.&lt;&gt;c__DisplayClass2b" to="åæ.&lt;&gt;c__DisplayClass2b" />
    <Type from="Wof.Model.Level.Common.Predicates.&lt;&gt;c__DisplayClass2e" to="åæ.&lt;&gt;c__DisplayClass2e" />
    <Type from="Wof.Model.Level.Common.Predicates.&lt;&gt;c__DisplayClass31" to="åæ.&lt;&gt;c__DisplayClass31" />
    <Type from="Wof.Model.Level.Common.Predicates.&lt;&gt;c__DisplayClass34" to="åæ.&lt;&gt;c__DisplayClass34" />
    <Type from="Wof.Model.Level.Common.Quadrangle" to="åé">
      <Field from="peaks" to="è" />
      <Field from="angle" to="â" />
      <Field from="width" to="ì" />
      <Field from="height" to="ã" />
      <Field from="climbingAngle" to="ý" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(System.Collections.Generic.ICollection`1) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Common.PointD, Single, Single) : Void</Signature>
      </Method>
      <Method from="get_Peaks" to="è">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="get_Center" to="â">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="get_Angle" to="ì">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_LowestY" to="ã">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Height" to="ý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Width" to="ò">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_HighestY" to="å">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_LeftMostX" to="æ">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_RightMostX" to="é">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_IsObverse" to="ë">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="PointInside" to="í">
        <Signature>(Wof.Model.Level.Common.PointD) : Boolean</Signature>
      </Method>
      <Method from="Angle2D" to="ê">
        <Signature>(Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD) : Single</Signature>
      </Method>
      <Method from="ToDrawingTable" to="î">
        <Signature>(Int32) : System.Drawing.Point[]</Signature>
      </Method>
      <Method from="ToString" to="íô">
        <Signature>() : String</Signature>
      </Method>
      <Method from="ToRectangleF" to="ä">
        <Signature>() : System.Drawing.RectangleF</Signature>
      </Method>
      <Method from="Intersects" to="ó">
        <Signature>(Wof.Model.Level.Common.Quadrangle) : Boolean</Signature>
      </Method>
      <Method from="Move" to="õ">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="Move" to="ñ">
        <Signature>(Wof.Model.Level.Common.PointD) : Void</Signature>
      </Method>
      <Method from="Rotate" to="ö">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="MirrorReflection" to="ù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="HorizontalReflection" to="ï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Draw" to="ú">
        <Signature>(System.Drawing.Graphics, System.Drawing.Color) : Void</Signature>
      </Method>
      <Method from="Dispose" to="êè">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Common.RectangleD" to="åë">
      <Field from="Empty" to="è" />
      <Field from="mX" to="â" />
      <Field from="mY" to="ì" />
      <Field from="mWidth" to="ã" />
      <Field from="mHeight" to="ý" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(System.Drawing.Point, Single, Single) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Single) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_X" to="è">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_X" to="â">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_Y" to="ì">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_Y" to="ã">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_Height" to="ý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_Height" to="ò">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_Width" to="å">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_Width" to="æ">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_IsEmpty" to="é">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="Cut" to="ë">
        <Signature>(Object) : Boolean</Signature>
      </Method>
      <Method from="Cut" to="í">
        <Signature>(Wof.Model.Level.Common.RectangleD) : Boolean</Signature>
      </Method>
      <Method from="ToString" to="êâ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="Equals" to="êì">
        <Signature>(Object) : Boolean</Signature>
      </Method>
      <Method from="GetHashCode" to="êã">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="Equals" to="ê">
        <Signature>(Wof.Model.Level.Common.RectangleD, Wof.Model.Level.Common.RectangleD) : Boolean</Signature>
      </Method>
      <Method from="op_Implicit" to="î">
        <Signature>(Wof.Model.Level.Common.RectangleD) : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.DayTime" to="Wof.Model.Level.DayTime" />
    <Type from="Wof.Model.Level.StringValueAttribute" to="Wof.Model.Level.StringValueAttribute" />
    <Type from="Wof.Model.Level.Direction" to="Wof.Model.Level.Direction" />
    <Type from="Wof.Model.Level.DirectionAxis" to="Wof.Model.Level.DirectionAxis" />
    <Type from="Wof.Model.Level.FlyDirectionHint" to="Wof.Model.Level.FlyDirectionHint" />
    <Type from="Wof.Model.Level.Effects.BaseEffect" to="åí">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Update" to="êý">
        <Signature>(Int32) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Effects.AltitudeEffect" to="åê">
      <Field from="_effectLevel" to="è" />
      <Field from="_plane" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="get_EffectLevel" to="è">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="Update" to="êý">
        <Signature>(Int32) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Effects.TimeEffect" to="åî">
      <Field from="ChangeValue" to="è" />
      <Field from="_loadInterval" to="â" />
      <Field from="_consumptionInterval" to="ì" />
      <Field from="_effectLevel" to="ã" />
      <Field from="_lastUpdate" to="ý" />
      <Field from="_state" to="ò" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Int32, Int32) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_LoadInterval" to="è">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_LoadInterval" to="â">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_ConsumptionInterval" to="ì">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_ConsumptionInterval" to="ã">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_EffectLevel" to="ý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="StartLoad" to="êò">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StartConsumption" to="êå">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Effects.BulletTimeEffect" to="åä">
      <Field from="LevelEffectChange" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Int32, Int32) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="add_LevelEffectChange" to="è">
        <Signature>(Wof.Model.Level.Effects.LevelEffectChangeHandler) : Void</Signature>
      </Method>
      <Method from="remove_LevelEffectChange" to="â">
        <Signature>(Wof.Model.Level.Effects.LevelEffectChangeHandler) : Void</Signature>
      </Method>
      <Method from="Update" to="êý">
        <Signature>(Int32) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Effects.ModelEffectsManager" to="åó">
      <Field from="_manager" to="è" />
      <Field from="_timeEffects" to="â" />
      <Field from="_otherEffects" to="ì" />
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegate6" to="ã" />
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegate7" to="ý" />
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegatea" to="ò" />
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegateb" to="å" />
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegated" to="æ" />
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegatef" to="é" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_Instance" to="è">
        <Signature>() : Wof.Model.Level.Effects.ModelEffectsManager</Signature>
      </Method>
      <Method from="Reset" to="â">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="BulletTimeEffectLevelEffectChange" to="ì">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="UpdateEffects" to="ã">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="UpdateEffect" to="ý">
        <Signature>(Int32, Wof.Model.Level.Effects.EffectType) : Void</Signature>
      </Method>
      <Method from="GetEffectLevel" to="ò">
        <Signature>(Wof.Model.Level.Effects.EffectType) : Single</Signature>
      </Method>
      <Method from="StartLoadEffect" to="å">
        <Signature>(Wof.Model.Level.Effects.EffectType) : Void</Signature>
      </Method>
      <Method from="StartConsumptionEffect" to="æ">
        <Signature>(Wof.Model.Level.Effects.EffectType) : Void</Signature>
      </Method>
      <Method from="&lt;UpdateEffect&gt;b__4" to="é">
        <Signature>(Wof.Model.Level.Effects.TimeEffect) : Boolean</Signature>
      </Method>
      <Method from="&lt;UpdateEffect&gt;b__5" to="ë">
        <Signature>(Wof.Model.Level.Effects.BaseEffect) : Boolean</Signature>
      </Method>
      <Method from="&lt;GetEffectLevel&gt;b__8" to="í">
        <Signature>(Wof.Model.Level.Effects.TimeEffect) : Boolean</Signature>
      </Method>
      <Method from="&lt;GetEffectLevel&gt;b__9" to="ê">
        <Signature>(Wof.Model.Level.Effects.BaseEffect) : Boolean</Signature>
      </Method>
      <Method from="&lt;StartLoadEffect&gt;b__c" to="î">
        <Signature>(Wof.Model.Level.Effects.TimeEffect) : Boolean</Signature>
      </Method>
      <Method from="&lt;StartConsumptionEffect&gt;b__e" to="ä">
        <Signature>(Wof.Model.Level.Effects.TimeEffect) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Effects.ModelEffectsManager.&lt;&gt;c__DisplayClass2" to="åó.&lt;&gt;c__DisplayClass2" />
    <Type from="Wof.Model.Level.Effects.EffectState" to="åõ">
      <Field from="Load" to="è" />
      <Field from="Consumption" to="â" />
    </Type>
    <Type from="Wof.Model.Level.Effects.LevelEffectChangeHandler" to="åñ">
      <Method from=".ctor" to=".ctor">
        <Signature>(Object, IntPtr) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Effects.EffectType" to="åö">
      <Field from="BulletTimeEffect" to="è" />
      <Field from="AltitudeEffect" to="â" />
    </Type>
    <Type from="Wof.Model.Level.Infantry.Soldier" to="åù">
      <Field from="FireDistance" to="è" />
      <Field from="ProbabilityCoefficient" to="â" />
      <Field from="RocketCount" to="ì" />
      <Field from="RocketSpeedMultiplier" to="ã" />
      <Field from="TimeUnit" to="ý" />
      <Field from="RocketDistanceMultiplier" to="ò" />
      <Field from="height" to="å" />
      <Field from="width" to="æ" />
      <Field from="weaponManager" to="é" />
      <Field from="xPos" to="ë" />
      <Field from="yPos" to="í" />
      <Field from="startPosition" to="ê" />
      <Field from="startLevelIndex" to="î" />
      <Field from="direction" to="ä" />
      <Field from="_soldierStatus" to="ó" />
      <Field from="speed" to="õ" />
      <Field from="refToLevel" to="ñ" />
      <Field from="protectedTime" to="ö" />
      <Field from="homelessCounterTime" to="ù" />
      <Field from="canReEnter" to="ï" />
      <Field from="canDie" to="ú" />
      <Field from="leftBornTile" to="ü" />
      <Field from="type" to="ç" />
      <Field from="hasBazooka" to="û" />
      <Field from="lastFireTick" to="ÿ" />
      <Field from="preparingToFireTime" to="ô" />
      <Field from="firePrepareDelay" to="âè" />
      <Field from="fireInterval" to="ââ" />
      <Field from="bazookaRotationPerSecond" to="âì" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Wof.Model.Level.Direction, Wof.Model.Level.Level, Single, Boolean) : Void</Signature>
      </Method>
      <Method from="get_ShouldFire" to="è">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_CanFire" to="â">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_HasBazooka" to="ì">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_Weapon" to="ã">
        <Signature>() : Wof.Model.Level.Weapon.WeaponManager</Signature>
      </Method>
      <Method from="get_Speed" to="ý">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_Speed" to="ò">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_IsAlive" to="å">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="ReturnToBunker" to="æ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_Status" to="é">
        <Signature>() : Wof.Model.Level.Infantry.Soldier.SoldierStatus</Signature>
      </Method>
      <Method from="get_StartLevelIndex" to="ë">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_Type" to="í">
        <Signature>() : Wof.Model.Level.Infantry.Soldier.SoldierType</Signature>
      </Method>
      <Method from="get_XPosition" to="ê">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_YPosition" to="î">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_YPosition" to="ä">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Position" to="ó">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="get_Direction" to="æã">
        <Signature>() : Wof.Model.Level.Direction</Signature>
      </Method>
      <Method from="get_CanDie" to="õ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_StartPosition" to="ñ">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="Check" to="ö">
        <Signature>(Int32) : Boolean</Signature>
      </Method>
      <Method from="IsBunker" to="ù">
        <Signature>(Int32) : Boolean</Signature>
      </Method>
      <Method from="ChangeLocation" to="ï">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="ToString" to="êæ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="Kill" to="ú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Move" to="íï">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_Center" to="æâ">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="get_Bounds" to="æì">
        <Signature>() : Wof.Model.Level.Common.Quadrangle</Signature>
      </Method>
      <Method from="get_RelativeAngle" to="æý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_MovementVector" to="æò">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="get_IsEnemy" to="æå">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_AbsoluteAngle" to="ææ">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="GetConsts" to="æé">
        <Signature>() : Wof.Model.Configuration.GameConsts.GenericPlane</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Infantry.Soldier.SoldierStatus" to="åù.åï">
      <Field from="IsAlive" to="è" />
      <Field from="IsDead" to="â" />
      <Field from="InBunker" to="ì" />
    </Type>
    <Type from="Wof.Model.Level.Infantry.Soldier.SoldierType" to="åù.åú">
      <Field from="SOLDIER" to="è" />
      <Field from="GENERAL" to="â" />
      <Field from="SEAMAN" to="ì" />
    </Type>
    <Type from="Wof.Model.Level.Infantry.General" to="åü">
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Wof.Model.Level.Direction, Wof.Model.Level.Level, Single) : Void</Signature>
      </Method>
      <Method from="Move" to="íï">
        <Signature>(Int32) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Infantry.Seaman" to="åç">
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Wof.Model.Level.Direction, Wof.Model.Level.Level, Single, Boolean) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Level" to="Wof.Model.Level.Level" />
    <Type from="Wof.Model.Level.LevelsManager" to="Wof.Model.Level.LevelsManager" />
    <Type from="Wof.Model.Level.LevelTiles.AircraftCarrierTiles.AircraftCarrierTile" to="åû">
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.AircraftCarrierTiles.BeginAircraftCarrierTile" to="åÿ">
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle) : Void</Signature>
      </Method>
      <Method from="get_GetXMLName" to="åñ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="set_TileIndex" to="åö">
        <Signature>(Int32) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.AircraftCarrierTiles.EndAircraftCarrierTile" to="åô">
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle) : Void</Signature>
      </Method>
      <Method from="get_GetXMLName" to="åñ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="set_TileIndex" to="åö">
        <Signature>(Int32) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.AircraftCarrierTiles.MiddleAircraftCarrierTile" to="æè">
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle) : Void</Signature>
      </Method>
      <Method from="get_GetXMLName" to="åñ">
        <Signature>() : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.AircraftCarrierTiles.RestoreAmmunitionCarrierTile" to="æâ">
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle) : Void</Signature>
      </Method>
      <Method from="get_GetXMLName" to="åñ">
        <Signature>() : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.IslandTiles.BeginIslandTile" to="æì">
      <Field from="meshName" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32, String) : Void</Signature>
      </Method>
      <Method from="get_MeshName" to="è">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_GetXMLName" to="åñ">
        <Signature>() : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.IslandTiles.EndIslandTile" to="æã">
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32) : Void</Signature>
      </Method>
      <Method from="get_GetXMLName" to="åñ">
        <Signature>() : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.BarrackTile" to="æý">
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32, Int32, Int32, System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="get_GetXMLName" to="åñ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="Destroy" to="åÿ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.ConcreteBunkerTile" to="æò">
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32, Int32, Int32, System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="Fire" to="æí">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="ToString" to="åú">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_GetXMLName" to="åñ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_TileIndex" to="åù">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_TileIndex" to="åö">
        <Signature>(Int32) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.EnemyInstallationState" to="æå">
      <Field from="Destroyed" to="è" />
      <Field from="Intact" to="â" />
      <Field from="None" to="ì" />
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.RegistrySoldier" to="ææ">
      <Method from=".ctor" to=".ctor">
        <Signature>(Object, IntPtr) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.FortressBunkerTile" to="æé">
      <Field from="rocketHitsLeft" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32, Int32, Int32, System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="get_ShouldBeDestroyed" to="è">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="Hit" to="â">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.WoodBunkerTile" to="æë">
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32, Int32, Int32, System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="Reconstruct" to="æî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Fire" to="æí">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="Destroy" to="åÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_GetXMLName" to="åñ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_TileIndex" to="åù">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_TileIndex" to="åö">
        <Signature>(Int32) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.IslandTiles.ExplosiveObjects.BarrelTile" to="æí">
      <Field from="mIsDestroyed" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32, System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="get_IsDestroyed" to="è">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="Destroy" to="â">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_GetXMLName" to="åñ">
        <Signature>() : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.IslandTiles.MiddleIslandTile" to="æê">
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32, System.Collections.Generic.List`1, Boolean) : Void</Signature>
      </Method>
      <Method from="get_GetXMLName" to="åñ">
        <Signature>() : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.CollisionType" to="æî">
      <Field from="CollisionRectagle" to="è" />
      <Field from="Altitude" to="â" />
      <Field from="Hitbound" to="ì" />
      <Field from="None" to="ã" />
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.TileKind" to="æä">
      <Field from="Ocean" to="è" />
      <Field from="AircraftCarrier" to="â" />
      <Field from="Island" to="ì" />
      <Field from="Ship" to="ã" />
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.OceanTile" to="æó">
      <Field from="waterDepth" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32, System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_GetXMLName" to="åñ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_TileIndex" to="åù">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_TileIndex" to="åö">
        <Signature>(Int32) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.Watercraft.ShipTile" to="æõ">
      <Field from="traversable" to="è" />
      <Field from="refToLevel" to="â" />
      <Field from="_shipManager" to="ì" />
      <Field from="sinkComponent" to="ã" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32, System.Collections.Generic.List`1, Boolean) : Void</Signature>
      </Method>
      <Method from="get_ShipOwner" to="è">
        <Signature>() : Wof.Model.Level.LevelTiles.Watercraft.ShipManagers.ShipManager</Signature>
      </Method>
      <Method from="set_ShipOwner" to="â">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.ShipManagers.ShipManager) : Void</Signature>
      </Method>
      <Method from="get_Traversable" to="ì">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_LevelProperties" to="åô">
        <Signature>(Wof.Model.Level.Level) : Void</Signature>
      </Method>
      <Method from="get_LevelProperties" to="æè">
        <Signature>() : Wof.Model.Level.Level</Signature>
      </Method>
      <Method from="get_IsDestroyed" to="åû">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="Destroy" to="åÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Submerge" to="ã">
        <Signature>(Single, Single) : Single</Signature>
      </Method>
      <Method from="DestroyAndSinkShipElement" to="ý">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Boolean</Signature>
      </Method>
      <Method from="DoSinking" to="æï">
        <Signature>(Single, Single) : Single</Signature>
      </Method>
      <Method from="DoSubmerge" to="æú">
        <Signature>(Single, Single) : Single</Signature>
      </Method>
      <Method from="DoEmerge" to="æü">
        <Signature>(Single, Single) : Single</Signature>
      </Method>
      <Method from="get_Depth" to="éè">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_IsSinking" to="éâ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsSunkDown" to="éì">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsSubmerged" to="éý">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsSubmerging" to="éæ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsEmerging" to="éé">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="StartSinking" to="æö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StopSinking" to="æù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StartSubmerging" to="æÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StopSubmerging" to="æô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StartEmerging" to="æç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StopEmerging" to="æû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_IsEmerged" to="éã">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_SubmergeTimeElapsed" to="éò">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_SinkingTimeElapsed" to="éå">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Tile" to="éë">
        <Signature>() : Wof.Model.Level.LevelTiles.LevelTile</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.Watercraft.BeginShipTile" to="æñ">
      <Field from="typeOfEnemyShip" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32, System.Collections.Generic.List`1, Boolean, Wof.Model.Level.LevelTiles.Watercraft.TypeOfEnemyShip) : Void</Signature>
      </Method>
      <Method from="get_GetXMLName" to="åñ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="set_TileIndex" to="åö">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_TypeOfEnemyShip" to="è">
        <Signature>() : Wof.Model.Level.LevelTiles.Watercraft.TypeOfEnemyShip</Signature>
      </Method>
      <Method from="Destroy" to="åÿ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.Watercraft.ShipBunkerTile" to="æö">
      <Field from="sinkComponent" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32, Int32, Int32, System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="Fire" to="æí">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="GetGunXShift" to="æä">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="DoSubmerge" to="æú">
        <Signature>(Single, Single) : Single</Signature>
      </Method>
      <Method from="DoEmerge" to="æü">
        <Signature>(Single, Single) : Single</Signature>
      </Method>
      <Method from="MoveSoldiersY" to="è">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="DoSinking" to="æï">
        <Signature>(Single, Single) : Single</Signature>
      </Method>
      <Method from="get_Center" to="æâ">
        <Signature>() : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="get_Depth" to="éè">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_IsSinking" to="éâ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsSunkDown" to="éì">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsSubmerged" to="éý">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsSubmerging" to="éæ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsEmerging" to="éé">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="StartSinking" to="æö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StopSinking" to="æù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StartSubmerging" to="æÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StopSubmerging" to="æô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StartEmerging" to="æç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StopEmerging" to="æû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_IsEmerged" to="éã">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_SubmergeTimeElapsed" to="éò">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_SinkingTimeElapsed" to="éå">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Tile" to="éë">
        <Signature>() : Wof.Model.Level.LevelTiles.LevelTile</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.Watercraft.ShipConcreteBunkerTile" to="æù">
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32, Int32, Int32, System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="Fire" to="æí">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="ToString" to="åú">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_GetXMLName" to="åñ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_TileIndex" to="åù">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_TileIndex" to="åö">
        <Signature>(Int32) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.Watercraft.MiddleShipTile" to="æï">
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32, System.Collections.Generic.List`1, Boolean) : Void</Signature>
      </Method>
      <Method from="get_GetXMLName" to="åñ">
        <Signature>() : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.Watercraft.ShipManagers.PatrolBoatManager" to="æú">
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.TypeOfEnemyShip) : Void</Signature>
      </Method>
      <Method from="TorpedoHit" to="éê">
        <Signature>(Wof.Model.Level.Weapon.Ammunition, Wof.Model.Level.LevelTiles.Watercraft.ShipTile) : Void</Signature>
      </Method>
      <Method from="ManageSubmergence" to="éä">
        <Signature>(Wof.Model.Level.Planes.Plane, Single, Single) : Void</Signature>
      </Method>
      <Method from="get_IsLastHit" to="éí">
        <Signature>() : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.Watercraft.ShipManagers.WarShipManager" to="æü">
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.TypeOfEnemyShip) : Void</Signature>
      </Method>
      <Method from="ManageSubmergence" to="éä">
        <Signature>(Wof.Model.Level.Planes.Plane, Single, Single) : Void</Signature>
      </Method>
      <Method from="TorpedoHit" to="éê">
        <Signature>(Wof.Model.Level.Weapon.Ammunition, Wof.Model.Level.LevelTiles.Watercraft.ShipTile) : Void</Signature>
      </Method>
      <Method from="get_IsLastHit" to="éí">
        <Signature>() : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.Watercraft.ShipState" to="æç">
      <Field from="Intact" to="è" />
      <Field from="LightDamaged" to="â" />
      <Field from="HeavyDamage" to="ì" />
      <Field from="Destroyed" to="ã" />
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.Watercraft.EndShipTile" to="æû">
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32, System.Collections.Generic.List`1, Boolean) : Void</Signature>
      </Method>
      <Method from="get_GetXMLName" to="åñ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="set_TileIndex" to="åö">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="Destroy" to="åÿ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.Watercraft.ShipWoodBunkerTile" to="æÿ">
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Single, Wof.Model.Level.Common.Quadrangle, Int32, Int32, Int32, System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="Reconstruct" to="æî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Fire" to="æí">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="Destroy" to="åÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_GetXMLName" to="åñ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_TileIndex" to="åù">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_TileIndex" to="åö">
        <Signature>(Int32) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.LevelTiles.Watercraft.TypeOfEnemyShip" to="æô" />
    <Type from="Wof.Model.Level.Planes.EnemyFighter" to="éè">
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Level, Single, Single) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Level) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Planes.StartPositionInfo" to="éâ">
      <Field from="PositionType" to="è" />
      <Field from="Position" to="â" />
      <Field from="Direction" to="ì" />
      <Field from="Speed" to="ã" />
      <Field from="WheelsState" to="ý" />
      <Field from="EngineState" to="ò" />
      <Field from="MissionType" to="å" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Planes.StartPositionType" to="éì">
      <Field from="Carrier" to="è" />
      <Field from="Airborne" to="â" />
    </Type>
    <Type from="Wof.Model.Level.Planes.InputFlag" to="éã">
      <Field from="Up" to="è" />
      <Field from="Down" to="â" />
      <Field from="Left" to="ì" />
      <Field from="Right" to="ã" />
      <Field from="EngineOn" to="ý" />
      <Field from="Spin" to="ò" />
    </Type>
    <Type from="Wof.Model.Level.Planes.TurnType" to="éý">
      <Field from="Airborne" to="è" />
      <Field from="Carrier" to="â" />
    </Type>
    <Type from="Wof.Model.Level.Planes.TurnInfo" to="éò">
      <Field from="plane" to="è" />
      <Field from="turnDurationInSeconds" to="â" />
      <Field from="turnType" to="ì" />
    </Type>
    <Type from="Wof.Model.Level.Planes.PlaneType" to="éå" />
    <Type from="Wof.Model.Level.Planes.RegisterWeapon" to="éæ">
      <Method from=".ctor" to=".ctor">
        <Signature>(Object, IntPtr) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Planes.PlaneState" to="éé">
      <Field from="Intact" to="è" />
      <Field from="Destroyed" to="â" />
      <Field from="Damaged" to="ì" />
      <Field from="Crashed" to="ã" />
    </Type>
    <Type from="Wof.Model.Level.Planes.EngineState" to="éë">
      <Field from="Working" to="è" />
      <Field from="SwitchedOff" to="â" />
    </Type>
    <Type from="Wof.Model.Level.Planes.LocationState" to="éí">
      <Field from="Air" to="è" />
      <Field from="AircraftCarrier" to="â" />
      <Field from="CarrierTurningRound" to="ì" />
      <Field from="AirTurningRound" to="ã" />
    </Type>
    <Type from="Wof.Model.Level.Planes.WheelsState" to="éê">
      <Field from="In" to="è" />
      <Field from="Out" to="â" />
      <Field from="TogglingOut" to="ì" />
      <Field from="TogglingIn" to="ã" />
    </Type>
    <Type from="Wof.Model.Level.Planes.LandingState" to="éî">
      <Field from="None" to="è" />
      <Field from="InitWheeling" to="â" />
      <Field from="Wheeling" to="ì" />
      <Field from="Breaking" to="ã" />
    </Type>
    <Type from="Wof.Model.Level.Planes.StoragePlane" to="éä">
      <Field from="tile" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Level, Wof.Model.Level.LevelTiles.AircraftCarrierTiles.AircraftCarrierTile, Wof.Model.Level.Planes.PlaneType) : Void</Signature>
      </Method>
      <Method from="get_Tile" to="è">
        <Signature>() : Wof.Model.Level.LevelTiles.AircraftCarrierTiles.AircraftCarrierTile</Signature>
      </Method>
      <Method from="set_Tile" to="â">
        <Signature>(Wof.Model.Level.LevelTiles.AircraftCarrierTiles.AircraftCarrierTile) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Weapon.Bomb" to="éó">
      <Field from="BombWidth" to="è" />
      <Field from="BombHeight" to="â" />
      <Field from="timer" to="ì" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Wof.Model.Level.Common.PointD, Wof.Model.Level.Level, Single, Wof.Model.Level.Weapon.IObject2D) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD, Wof.Model.Level.Level, Single, Wof.Model.Level.Weapon.IObject2D) : Void</Signature>
      </Method>
      <Method from="Move" to="éö">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="ChangePosition" to="è">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithPlanes" to="â">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithGround" to="ì">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Weapon.Gun" to="éõ">
      <Field from="RangeX" to="è" />
      <Field from="RangeY" to="â" />
      <Field from="referenceToLevel" to="ì" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Level) : Void</Signature>
      </Method>
      <Method from="GetHitPosition" to="è">
        <Signature>(Wof.Model.Level.Common.Quadrangle, Wof.Model.Level.Common.PointD, Wof.Model.Level.Direction) : Wof.Model.Level.Common.PointD</Signature>
      </Method>
      <Method from="CanHitObjectByGun" to="â">
        <Signature>(Wof.Model.Level.Weapon.IObject2D, Wof.Model.Level.Weapon.IObject2D, Single, Boolean) : Boolean</Signature>
      </Method>
      <Method from="IsCutInRange" to="ì">
        <Signature>(Wof.Model.Level.Common.PointD, Wof.Model.Level.Weapon.IObject2D) : Boolean</Signature>
      </Method>
      <Method from="IsCutInRangeX" to="ã">
        <Signature>(Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD) : Boolean</Signature>
      </Method>
      <Method from="GetStartIndex" to="ý">
        <Signature>(Single) : Int32</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Weapon.MissileState" to="éñ">
      <Field from="Destroyed" to="è" />
      <Field from="Intact" to="â" />
    </Type>
    <Type from="Wof.Model.Level.Weapon.Rocket" to="éö">
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Wof.Model.Level.Common.PointD, Wof.Model.Level.Level, Single, Wof.Model.Level.Weapon.IObject2D) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD, Wof.Model.Level.Level, Single, Wof.Model.Level.Weapon.IObject2D) : Void</Signature>
      </Method>
      <Method from="Move" to="éö">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="ChangePosition" to="éú">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithEnemyPlanes" to="éü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithUserPlane" to="éç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithGround" to="éû">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Weapon.Torpedo" to="éù">
      <Field from="TorpedoWidth" to="è" />
      <Field from="TorpedoHeight" to="â" />
      <Field from="MinYPosition" to="ì" />
      <Field from="MaxDistanceToPlane" to="ã" />
      <Field from="MaxHeightDistanceToPlane" to="ý" />
      <Field from="mIsInWater" to="ò" />
      <Field from="dropAngle" to="å" />
      <Field from="dropHeight" to="æ" />
      <Field from="maxDropHeight" to="é" />
      <Field from="waterTravelDistance" to="ë" />
      <Field from="maxWaterTravelDistance" to="í" />
      <Field from="minWaterTravelDistance" to="ê" />
      <Field from="timer" to="î" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Wof.Model.Level.Common.PointD, Wof.Model.Level.Level, Single, Wof.Model.Level.Weapon.IObject2D) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Common.PointD, Wof.Model.Level.Common.PointD, Wof.Model.Level.Level, Single, Wof.Model.Level.Weapon.IObject2D) : Void</Signature>
      </Method>
      <Method from="get_IsInWater" to="è">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="Move" to="éö">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="ChangePositionInAir" to="â">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="SinkTorpedo" to="ì">
        <Signature>(System.Nullable`1) : Void</Signature>
      </Method>
      <Method from="ChangePositionInWater" to="ã">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithPlanes" to="ý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CheckCollisionWithGroundAndShips" to="ò">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CanBeDestroyed" to="å">
        <Signature>(Int32) : Boolean</Signature>
      </Method>
      <Method from="Unregister" to="æ">
        <Signature>() : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Weapon.TorpedoFailure" to="éï">
      <Field from="TooHigh" to="è" />
      <Field from="LongTravelDistance" to="â" />
    </Type>
    <Type from="Wof.Model.Level.Weapon.RegisterWeaponToModel" to="éú">
      <Method from=".ctor" to=".ctor">
        <Signature>(Object, IntPtr) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Weapon.WeaponManager" to="éü">
      <Field from="DistanceBetweenPlanes" to="è" />
      <Field from="maxRockets" to="â" />
      <Field from="MaxTorpedoes" to="ì" />
      <Field from="maxBombs" to="ã" />
      <Field from="RegisterWeaponToModelEvent" to="ý" />
      <Field from="rocketCount" to="ò" />
      <Field from="bombCount" to="å" />
      <Field from="torpedoCount" to="æ" />
      <Field from="actualWeapon" to="é" />
      <Field from="selectWeapon" to="ë" />
      <Field from="refToLevel" to="í" />
      <Field from="ammunitionOwner" to="ê" />
      <Field from="lastFireTick" to="î" />
      <Field from="gun" to="ä" />
      <Field from="mRand" to="ó" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Level, Wof.Model.Level.Weapon.IObject2D, Int32, Int32, Int32) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Level, Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="add_RegisterWeaponToModelEvent" to="è">
        <Signature>(Wof.Model.Level.Weapon.RegisterWeaponToModel) : Void</Signature>
      </Method>
      <Method from="remove_RegisterWeaponToModelEvent" to="â">
        <Signature>(Wof.Model.Level.Weapon.RegisterWeaponToModel) : Void</Signature>
      </Method>
      <Method from="get_ActualWeapon" to="ì">
        <Signature>() : Wof.Model.Level.Weapon.WeaponType</Signature>
      </Method>
      <Method from="get_BombCount" to="ã">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_RocketCount" to="ý">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_TorpedoCount" to="ò">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_IsRocketAvailable" to="å">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsBombAvailable" to="æ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsTorpedoAvailable" to="é">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_SelectWeapon" to="ë">
        <Signature>(Wof.Model.Level.Weapon.WeaponType) : Void</Signature>
      </Method>
      <Method from="get_SelectWeapon" to="í">
        <Signature>() : Wof.Model.Level.Weapon.WeaponType</Signature>
      </Method>
      <Method from="get_IsCurentWeaponAvailable" to="ê">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="PlaneFireGun" to="î">
        <Signature>(Single, Boolean, Wof.Model.Level.Weapon.MissileBase.CollisionDirectionLocation) : System.Collections.Generic.IList`1</Signature>
      </Method>
      <Method from="FlakFire" to="ä">
        <Signature>(Wof.Model.Level.Weapon.IObject2D) : Wof.Model.Level.Weapon.FlakBullet</Signature>
      </Method>
      <Method from="FlakFire" to="ó">
        <Signature>(Wof.Model.Level.Weapon.IObject2D, Single) : Wof.Model.Level.Weapon.FlakBullet</Signature>
      </Method>
      <Method from="BunkerShellFire" to="õ">
        <Signature>(Wof.Model.Level.Weapon.IObject2D, Single) : Wof.Model.Level.Weapon.BunkerShellBullet</Signature>
      </Method>
      <Method from="RocketFire" to="ñ">
        <Signature>(Single, Wof.Model.Level.Common.PointD, Single) : Wof.Model.Level.Weapon.Rocket</Signature>
      </Method>
      <Method from="RocketFire" to="ö">
        <Signature>(Single) : Wof.Model.Level.Weapon.Rocket</Signature>
      </Method>
      <Method from="RocketFire" to="ù">
        <Signature>() : Wof.Model.Level.Weapon.Rocket</Signature>
      </Method>
      <Method from="TorpedoFire" to="ï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="BombFire" to="ú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="FireAtAngle" to="ü">
        <Signature>(Single, Wof.Model.Level.Weapon.WeaponType, Boolean, Wof.Model.Level.Weapon.MissileBase.CollisionDirectionLocation) : Void</Signature>
      </Method>
      <Method from="Fire" to="ç">
        <Signature>(Wof.Model.Level.Weapon.WeaponType) : Void</Signature>
      </Method>
      <Method from="RestoreBombs" to="û">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="RestoreRockets" to="ÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="RestoreTorpedoes" to="ô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="RestoreSelectedWeapon" to="âè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PreviousWeapon" to="ââ">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="NextWeapon" to="âì">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="ToString" to="êé">
        <Signature>() : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.Weapon.WeaponType" to="éç">
      <Field from="Gun" to="è" />
      <Field from="Rocket" to="â" />
      <Field from="Bomb" to="ì" />
      <Field from="Torpedo" to="ã" />
      <Field from="None" to="ý" />
    </Type>
    <Type from="Wof.Model.Level.XmlParser.Attributes" to="éû">
      <Field from="Name" to="è" />
      <Field from="YEnd" to="â" />
      <Field from="Width" to="ì" />
      <Field from="YStart" to="ã" />
      <Field from="ViewXShift" to="ý" />
      <Field from="Barrels" to="ò" />
      <Field from="DayTime" to="å" />
      <Field from="EnhancedOnly" to="æ" />
      <Field from="Mesh" to="é" />
      <Field from="MissionType" to="ë" />
      <Field from="TimeToFirstEnemyPlane" to="í" />
      <Field from="TimeToNextEnemyPlane" to="ê" />
      <Field from="Variation" to="î" />
      <Field from="EnemyFighters" to="ä" />
      <Field from="EnemyBombers" to="ó" />
      <Field from="Traversable" to="õ" />
      <Field from="NumSoldiers" to="ñ" />
      <Field from="HasRockets" to="ö" />
      <Field from="NumGenerals" to="ù" />
      <Field from="Type" to="ï" />
      <Field from="Amount" to="ú" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.XmlParser.Nodes" to="éÿ">
      <Field from="Achievement" to="è" />
      <Field from="Tile" to="â" />
      <Field from="Level" to="ì" />
      <Field from="Ocean" to="ã" />
      <Field from="Barrels" to="ý" />
      <Field from="Terrain" to="ò" />
      <Field from="Barrack" to="å" />
      <Field from="IslandEnd" to="æ" />
      <Field from="IslandBegin" to="é" />
      <Field from="WoodenBunker" to="ë" />
      <Field from="FlakBunker" to="í" />
      <Field from="ConcreteBunker" to="ê" />
      <Field from="FortressBunker" to="î" />
      <Field from="ShipWoodenBunker" to="ä" />
      <Field from="ShipConcreteBunker" to="ó" />
      <Field from="AircraftCarrier" to="õ" />
      <Field from="AircraftCarrierEnd" to="ñ" />
      <Field from="AircraftCarrierBegin" to="ö" />
      <Field from="AircraftCarrierMiddle" to="ù" />
      <Field from="AircraftCarrierRestoreAmmunition" to="ï" />
      <Field from="Ship" to="ú" />
      <Field from="ShipEnd" to="ü" />
      <Field from="ShipDeck" to="ç" />
      <Field from="ShipBegin" to="û" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.XmlParser.TilesManager" to="éô">
      <Field from="path" to="è" />
      <Field from="rawPath" to="â" />
      <Field from="dictionary" to="ì" />
      <Field from="isOkRead" to="ã" />
      <Field from="concretebunkerCount" to="ý" />
      <Field from="woodenbunkerCount" to="ò" />
      <Field from="shipwoodenbunkerCount" to="å" />
      <Field from="shipconcretebunkerCount" to="æ" />
      <Field from="shipDeckCount" to="é" />
      <Field from="terrainCount" to="ë" />
      <Field from="barrackCount" to="í" />
      <Field from="barrelCount" to="ê" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_Dictionary" to="è">
        <Signature>() : System.Collections.Generic.Dictionary`2</Signature>
      </Method>
      <Method from="get_IsReadOK" to="â">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_TilesPath" to="ì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_RAWTilesPath" to="ã">
        <Signature>() : String</Signature>
      </Method>
      <Method from="Read" to="ý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ReadTile" to="ò">
        <Signature>(System.Xml.XmlReader, System.Globalization.NumberFormatInfo) : Void</Signature>
      </Method>
      <Method from="ReadAttributes" to="å">
        <Signature>(Wof.Model.Level.XmlParser.TilesNode, System.Xml.XmlReader, System.Globalization.NumberFormatInfo) : Void</Signature>
      </Method>
      <Method from="StringToQuadrangle" to="æ">
        <Signature>(String, System.Globalization.NumberFormatInfo) : Wof.Model.Level.Common.Quadrangle</Signature>
      </Method>
      <Method from="StringToRectangle" to="é">
        <Signature>(String, System.Globalization.NumberFormatInfo) : Wof.Model.Level.Common.RectangleD</Signature>
      </Method>
      <Method from="Dispose" to="êë">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.XmlParser.TilesNode" to="ëè">
      <Field from="baseName" to="è" />
      <Field from="id" to="â" />
      <Field from="yEnd" to="ì" />
      <Field from="yStart" to="ã" />
      <Field from="viewXShift" to="ý" />
      <Field from="variation" to="ò" />
      <Field from="rectangle" to="å" />
      <Field from="hitRectangle" to="æ" />
      <Field from="collisionRectangle" to="é" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_YEnd" to="è">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_YEnd" to="â">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_YStart" to="ì">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_YStart" to="ã">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_ViewXShift" to="ý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_ViewXShift" to="ò">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_Variation" to="å">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_Variation" to="æ">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_HitRectangle" to="é">
        <Signature>() : Wof.Model.Level.Common.Quadrangle</Signature>
      </Method>
      <Method from="set_HitRectangle" to="ë">
        <Signature>(Wof.Model.Level.Common.Quadrangle) : Void</Signature>
      </Method>
      <Method from="get_Rectangle" to="í">
        <Signature>() : Wof.Model.Level.Common.Quadrangle</Signature>
      </Method>
      <Method from="set_Rectangle" to="ê">
        <Signature>(Wof.Model.Level.Common.Quadrangle) : Void</Signature>
      </Method>
      <Method from="get_CollisionRectangle" to="î">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="set_CollisionRectangle" to="ä">
        <Signature>(System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="get_ID" to="ó">
        <Signature>() : String</Signature>
      </Method>
      <Method from="set_ID" to="õ">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="get_BaseName" to="ñ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="set_BaseName" to="ö">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="get_IsValidName" to="ù">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsValidYEnd" to="ï">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsValidYStart" to="ú">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsValidViewXShift" to="ü">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsValidRectangle" to="ç">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsValidHitRectangle" to="û">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsValidVariation" to="ÿ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="ToString" to="êí">
        <Signature>() : String</Signature>
      </Method>
      <Method from="GenerateID" to="ô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GenerateID" to="âè">
        <Signature>(String, Int32) : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Model.Level.XmlParser.XmlLevelParser" to="ëâ">
      <Field from="C_LEVEL_FOLDER" to="è" />
      <Field from="C_LEVEL_PREFIX" to="â" />
      <Field from="C_LEVEL_POSTFIX" to="ì" />
      <Field from="dayTime" to="ã" />
      <Field from="enhancedOnly" to="ý" />
      <Field from="levelFile" to="ò" />
      <Field from="missionType" to="å" />
      <Field from="enemyFighters" to="æ" />
      <Field from="enemyBombers" to="é" />
      <Field from="timeToFirstEnemyPlane" to="ë" />
      <Field from="timeToNextEnemyPlane" to="í" />
      <Field from="tilesManager" to="ê" />
      <Field from="tileNodeArray" to="î" />
      <Field from="levelTiles" to="ä" />
      <Field from="achievements" to="ó" />
      <Field from="shipManagers" to="õ" />
      <Method from=".ctor" to=".ctor">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="Initialize" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetIndex" to="â">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetAsString" to="ì">
        <Signature>(Byte[]) : String</Signature>
      </Method>
      <Method from="PeekMissionDetails" to="ã">
        <Signature>(String, Wof.Model.Level.MissionType&amp;, Boolean&amp;, System.Collections.Generic.List`1&amp;) : Void</Signature>
      </Method>
      <Method from="SaveLevel" to="ý">
        <Signature>(Wof.Model.Level.Level, String) : Boolean</Signature>
      </Method>
      <Method from="AppendAttribute" to="ò">
        <Signature>(System.Xml.XmlDocument, System.Xml.XmlElement, String, Object) : Void</Signature>
      </Method>
      <Method from="Read" to="å">
        <Signature>(String) : Boolean</Signature>
      </Method>
      <Method from="ReadTerrain" to="æ">
        <Signature>(System.Xml.XmlReader) : Boolean</Signature>
      </Method>
      <Method from="ReadBarrels" to="é">
        <Signature>(System.Xml.XmlReader) : Boolean</Signature>
      </Method>
      <Method from="ReadAircraftCarrierElement" to="ë">
        <Signature>(System.Xml.XmlReader, String) : Boolean</Signature>
      </Method>
      <Method from="ReadShipElement" to="í">
        <Signature>(System.Xml.XmlReader, String) : Boolean</Signature>
      </Method>
      <Method from="ReadBunkerOrBarrack" to="ê">
        <Signature>(System.Xml.XmlReader, String) : Boolean</Signature>
      </Method>
      <Method from="ReadIslandBegin" to="î">
        <Signature>(System.Xml.XmlReader) : Boolean</Signature>
      </Method>
      <Method from="ReadIslandEnd" to="ä">
        <Signature>(System.Xml.XmlReader) : Boolean</Signature>
      </Method>
      <Method from="ReadAchievement" to="ó">
        <Signature>(System.Xml.XmlReader) : Wof.Model.Level.Achievement</Signature>
      </Method>
      <Method from="ReadLevelAttributes" to="õ">
        <Signature>(System.Xml.XmlReader) : Boolean</Signature>
      </Method>
      <Method from="ReadOcean" to="ñ">
        <Signature>(System.Xml.XmlReader) : Boolean</Signature>
      </Method>
      <Method from="GetTilesForID" to="ö">
        <Signature>(String) : Wof.Model.Level.XmlParser.TilesNode</Signature>
      </Method>
      <Method from="GetDayTimeForName" to="ù">
        <Signature>(String) : Wof.Model.Level.DayTime</Signature>
      </Method>
      <Method from="GetAchievementType" to="ï">
        <Signature>(String) : Wof.Model.Level.AchievementType</Signature>
      </Method>
      <Method from="GetMissionTypeForName" to="ú">
        <Signature>(String) : Wof.Model.Level.MissionType</Signature>
      </Method>
      <Method from="get_DayTime" to="ü">
        <Signature>() : Wof.Model.Level.DayTime</Signature>
      </Method>
      <Method from="get_MissionType" to="ç">
        <Signature>() : Wof.Model.Level.MissionType</Signature>
      </Method>
      <Method from="get_EnemyFighters" to="û">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_EnemyBombers" to="ÿ">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_TimeToFirstEnemyPlane" to="ô">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_TimeToNextEnemyPlane" to="âè">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_Tiles" to="ââ">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="get_Achievements" to="âì">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="get_ShipManagers" to="âã">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="get_LevelFile" to="âý">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_EnhancedOnly" to="âò">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="Dispose" to="êê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetLevelFileName" to="âå">
        <Signature>(UInt32) : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.Statistics.LevelStatistics" to="ëì">
      <Field from="mPlanesShotDown" to="è" />
      <Field from="mRocketCount" to="â" />
      <Field from="mTorpedoCount" to="ì" />
      <Field from="mBombCount" to="ã" />
      <Field from="mGunCount" to="ý" />
      <Field from="mHitByRocket" to="ò" />
      <Field from="mHitByTorpedo" to="å" />
      <Field from="mHitByBomb" to="æ" />
      <Field from="mHitByGun" to="é" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_RocketCount" to="è">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_RocketCount" to="â">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_TorpedoCount" to="ì">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_TorpedoCount" to="ã">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_PlanesShotDown" to="ý">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_PlanesShotDown" to="ò">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_BombCount" to="å">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_BombCount" to="æ">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_GunCount" to="é">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_GunCount" to="ë">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_HitByRocket" to="í">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_HitByRocket" to="ê">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_HitByBomb" to="î">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_HitByBomb" to="ä">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_HitByTorpedo" to="ó">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_HitByTorpedo" to="õ">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_HitByGun" to="ñ">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_HitByGun" to="ö">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_RocketStats" to="ù">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_TorpedoStats" to="ï">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_BombStats" to="ú">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_GunStats" to="ü">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="ToString" to="êî">
        <Signature>() : String</Signature>
      </Method>
    </Type>
    <Type from="Wof.src.Tests.ControllerTest.Input.Keyboard.KeyMapTest" to="ëã">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Main" to="è">
        <Signature>(String[]) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tools.FileCRC" to="ëý">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Main" to="è">
        <Signature>(String[]) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tools.FileEncrypter" to="ëò">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Main" to="è">
        <Signature>(String[]) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tests.KamilTests" to="ëå">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Main" to="è">
        <Signature>(String[]) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tests.KamilTests.KamilTestView" to="ëå.ëæ">
      <Field from="lvlView" to="è" />
      <Field from="lvl" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateCamera" to="ýî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateScene" to="ýç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ModelFrameStarted" to="ýñ">
        <Signature>(Mogre.FrameEvent) : Void</Signature>
      </Method>
      <Method from="FrameStarted" to="ýù">
        <Signature>(Mogre.FrameEvent) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tests.IntersectionTest" to="ëé">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Main" to="è">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tests.IntersectionTestForm" to="ëë">
      <Field from="Step" to="è" />
      <Field from="q1" to="â" />
      <Field from="q2" to="ì" />
      <Field from="activeQ" to="ã" />
      <Field from="p1" to="ý" />
      <Field from="components" to="ò" />
      <Field from="pictureBox1" to="å" />
      <Field from="menuStrip1" to="æ" />
      <Field from="testToolStripMenuItem" to="é" />
      <Field from="checkIntersectionToolStripMenuItem" to="ë" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="IntersectionTestForm_Load" to="è">
        <Signature>(Object, System.EventArgs) : Void</Signature>
      </Method>
      <Method from="pictureBox1_Paint" to="â">
        <Signature>(Object, System.Windows.Forms.PaintEventArgs) : Void</Signature>
      </Method>
      <Method from="checkIntersectionToolStripMenuItem_Click" to="ì">
        <Signature>(Object, System.EventArgs) : Void</Signature>
      </Method>
      <Method from="IntersectionTestForm_KeyPress" to="ã">
        <Signature>(Object, System.Windows.Forms.KeyPressEventArgs) : Void</Signature>
      </Method>
      <Method from="IntersectionTestForm_KeyDown" to="ý">
        <Signature>(Object, System.Windows.Forms.KeyEventArgs) : Void</Signature>
      </Method>
      <Method from="Dispose" to="êä">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="InitializeComponent" to="ò">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Tests.ModelTest.LevelTest.CommonTest.RectanglesTest.RectanglesTestForm" to="ëí">
      <Field from="tab" to="è" />
      <Field from="components" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="RectanglesTest_Paint" to="è">
        <Signature>(Object, System.Windows.Forms.PaintEventArgs) : Void</Signature>
      </Method>
      <Method from="RectanglesTestForm_Load" to="â">
        <Signature>(Object, System.EventArgs) : Void</Signature>
      </Method>
      <Method from="Dispose" to="êó">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="InitializeComponent" to="ì">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Tests.ModelTest.LevelTest.CommonTest.RectanglesTest.Program" to="ëê">
      <Method from="Main" to="è">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tests.TestPointD" to="ëî">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Test" to="è">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tests.TestQuadrangle" to="ëä">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="TestCompare" to="è">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tests.TestRectangleD" to="ëó">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Main" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="TestEqual" to="â">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="TestCut" to="ì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ShowCutTest" to="ã">
        <Signature>(Wof.Model.Level.Common.RectangleD, Wof.Model.Level.Common.RectangleD) : Void</Signature>
      </Method>
      <Method from="ShowEqualTest" to="ý">
        <Signature>(Wof.Model.Level.Common.RectangleD, Wof.Model.Level.Common.RectangleD) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tests.TestLevel" to="ëõ">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="TestSoldierMove" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="TestToggleEngine" to="â">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="View.src.Tests.ModelTest.LevelTest.WeaponTest.SoldierTest" to="ëñ">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="TestSoldiers" to="è">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tests.ReadXmlTest" to="ëö">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tests.Predicates" to="ëù">
      <Field from="CS$&lt;&gt;9__CachedAnonymousMethodDelegate1" to="è" />
      <Method from="GetMiddleTile" to="è">
        <Signature>() : System.Predicate`1</Signature>
      </Method>
      <Method from="&lt;GetMiddleTile&gt;b__0" to="â">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Tests.ModelTest.PlaneTest.PlaneFlyTestForm" to="ëï">
      <Field from="level" to="è" />
      <Field from="components" to="â" />
      <Field from="pictureBox1" to="ì" />
      <Field from="timer1" to="ã" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="timer1_Tick" to="è">
        <Signature>(Object, System.EventArgs) : Void</Signature>
      </Method>
      <Method from="PlaneFlyTestForm_KeyDown" to="â">
        <Signature>(Object, System.Windows.Forms.KeyEventArgs) : Void</Signature>
      </Method>
      <Method from="pictureBox1_Paint" to="ì">
        <Signature>(Object, System.Windows.Forms.PaintEventArgs) : Void</Signature>
      </Method>
      <Method from="Dispose" to="êõ">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="InitializeComponent" to="ã">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Tests.ModelTest.PlaneTest.PlaneOnAircraftTestForm" to="ëú">
      <Field from="aircraft" to="è" />
      <Field from="level" to="â" />
      <Field from="components" to="ì" />
      <Field from="pictureBoxMain" to="ã" />
      <Field from="timerMain" to="ý" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="timerMain_Tick" to="è">
        <Signature>(Object, System.EventArgs) : Void</Signature>
      </Method>
      <Method from="pictureBoxMain_Paint" to="â">
        <Signature>(Object, System.Windows.Forms.PaintEventArgs) : Void</Signature>
      </Method>
      <Method from="PlaneOnAircraftTestForm_KeyDown" to="ì">
        <Signature>(Object, System.Windows.Forms.KeyEventArgs) : Void</Signature>
      </Method>
      <Method from="Dispose" to="êñ">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="InitializeComponent" to="ã">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Tests.ModelTest.PlaneTest.PlaneTest" to="ëü">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Main" to="è">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tests.SceneTestProgram" to="ëç">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Main" to="è">
        <Signature>(String[]) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tests.SceneTest" to="ëû">
      <Field from="time" to="è" />
      <Field from="carrierNode" to="â" />
      <Field from="japanFlagNode" to="ì" />
      <Field from="playerNode" to="ã" />
      <Field from="a6mNode" to="ý" />
      <Field from="p47OuterNode" to="ò" />
      <Field from="p47InnerNode" to="å" />
      <Field from="bladeNode" to="æ" />
      <Field from="rearWheelNode" to="é" />
      <Field from="lWheelNode" to="ë" />
      <Field from="rWheelNode" to="í" />
      <Field from="islandNode" to="ê" />
      <Field from="island2Node" to="î" />
      <Field from="island3Node" to="ä" />
      <Field from="island6Node" to="ó" />
      <Field from="flakBarrelNode" to="õ" />
      <Field from="gunEmplacementNode" to="ñ" />
      <Field from="woodenBunkerNode" to="ö" />
      <Field from="tentNode" to="ù" />
      <Field from="carrierAerial1Node" to="ï" />
      <Field from="carrierAerial2Node" to="ú" />
      <Field from="lCarrierWaterTrailNode" to="ü" />
      <Field from="rCarrierWaterTrailNode" to="ç" />
      <Field from="lGunHitNode" to="û" />
      <Field from="rGunHitNode" to="ÿ" />
      <Field from="cameraNode" to="ô" />
      <Field from="enemyAirscrewNode" to="âè" />
      <Field from="flakBarrel" to="ââ" />
      <Field from="p47" to="âì" />
      <Field from="a6m" to="âã" />
      <Field from="p47AnimationState" to="âý" />
      <Field from="flakBarrelState" to="âò" />
      <Field from="japanFlagState" to="âå" />
      <Field from="soldiersState" to="âæ" />
      <Field from="p47Animation" to="âé" />
      <Field from="p47InnerAnimation" to="âë" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateCamera" to="ýî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="WireEventListeners" to="ýó">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CreateScene" to="ýç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ModelFrameStarted" to="ýñ">
        <Signature>(Mogre.FrameEvent) : Void</Signature>
      </Method>
      <Method from="FrameStarted" to="ýù">
        <Signature>(Mogre.FrameEvent) : Boolean</Signature>
      </Method>
    </Type>
    <Type from="Wof.Tools.Zipfiles" to="ëÿ">
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ExtractZipFile" to="è">
        <Signature>(String, String) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.AmmunitionView" to="ëô">
      <Field from="ammunitionCounter" to="è" />
      <Field from="ammunitionID" to="â" />
      <Field from="ammunition" to="ì" />
      <Field from="sceneMgr" to="ã" />
      <Field from="framework" to="ý" />
      <Field from="ammunitionModel" to="ò" />
      <Field from="explosionFlash" to="å" />
      <Field from="ammunitionNode" to="æ" />
      <Field from="minimapItem" to="é" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Weapon.Ammunition, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_Ammunition" to="è">
        <Signature>() : Wof.Model.Level.Weapon.Ammunition</Signature>
      </Method>
      <Method from="set_Ammunition" to="â">
        <Signature>(Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="set_Framework" to="ì">
        <Signature>(Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="get_ExplosionFlash" to="ã">
        <Signature>() : Mogre.Light</Signature>
      </Method>
      <Method from="get_AmmunitionNode" to="ý">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_MinimapItem" to="ò">
        <Signature>() : Wof.View.MinimapItem</Signature>
      </Method>
      <Method from="MoveToHiddenPosition" to="êö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="refreshPosition" to="êù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="preInitOnScene" to="êú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="postInitOnScene" to="êü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="DestroyExplosionFlash" to="êç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Hide" to="êû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="RemoveNode" to="å">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Dispose" to="êÿ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.AmmunitionViewFactory" to="íè">
      <Field from="type" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(System.Type) : Void</Signature>
      </Method>
      <Method from="GetAmmunitionView" to="è">
        <Signature>(Wof.Controller.IFrameWork) : Wof.View.AmmunitionView</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.VertexAnimation.Animable" to="íâ">
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.VertexAnimation.VertexAnimable" to="íì">
      <Method from="rewind" to="êô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="enableAnimation" to="îè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="disableAnimation" to="îâ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.BombView" to="íã">
      <Field from="bombAvailablePool" to="è" />
      <Field from="bombUsedPool" to="â" />
      <Field from="hiddenPosition" to="ì" />
      <Field from="animationState" to="ã" />
      <Field from="visualRotation" to="ý" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Weapon.Ammunition, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="InitPool" to="è">
        <Signature>(Int32, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="GetInstance" to="â">
        <Signature>(Wof.Model.Level.Weapon.Ammunition) : Wof.View.BombView</Signature>
      </Method>
      <Method from="FreeInstance" to="ì">
        <Signature>(Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="DestroyPool" to="ã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="fly" to="ý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="MoveToHiddenPosition" to="êö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="refreshPosition" to="êù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="preInitOnScene" to="êú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="postInitOnScene" to="êü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initOnScene" to="ò">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="rewind" to="êô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="enableAnimation" to="îè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="disableAnimation" to="îâ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Dispose" to="êÿ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.MissileBaseView`1" to="íý">
      <Field from="missileAvailablePool" to="è" />
      <Field from="missileUsedPool" to="â" />
      <Field from="factory" to="ì" />
      <Field from="missileAnimation" to="ã" />
      <Field from="innerNode" to="ý" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="InitPool" to="è">
        <Signature>(Int32, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="GetInstance" to="â">
        <Signature>(Wof.Model.Level.Weapon.Ammunition, Wof.Controller.IFrameWork) : Wof.View.AmmunitionView</Signature>
      </Method>
      <Method from="FreeInstance" to="ì">
        <Signature>(Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="DestroyPool" to="ã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="postInitOnScene" to="êü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Hide" to="êû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="Dispose" to="êÿ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.AmmunitionViews.BunkerShellBulletView" to="íò">
      <Field from="hiddenPosition" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="preInitOnScene" to="êú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="MoveToHiddenPosition" to="êö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="postInitOnScene" to="êü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Hide" to="êû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.AmmunitionViews.FlakBulletView" to="íå">
      <Field from="hiddenPosition" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="preInitOnScene" to="êú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="MoveToHiddenPosition" to="êö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="postInitOnScene" to="êü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Hide" to="êû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.AmmunitionViews.GunBulletView" to="íæ">
      <Field from="hiddenPosition" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="getLocalSpriteName" to="è">
        <Signature>(String) : String</Signature>
      </Method>
      <Method from="getLocalSpriteNameTop" to="â">
        <Signature>(String) : String</Signature>
      </Method>
      <Method from="hideEffect" to="ì">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="MoveToHiddenPosition" to="êö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="preInitOnScene" to="êú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="prepareGunEffect" to="ã">
        <Signature>(Mogre.Vector3, Single, String) : Void</Signature>
      </Method>
      <Method from="getPlaneType" to="ý">
        <Signature>() : Wof.Model.Level.Planes.PlaneType</Signature>
      </Method>
      <Method from="getGunPosLeft" to="ò">
        <Signature>() : Mogre.Vector3</Signature>
      </Method>
      <Method from="getGunPosRight" to="å">
        <Signature>() : Mogre.Vector3</Signature>
      </Method>
      <Method from="getGunPosMiddle" to="æ">
        <Signature>() : Mogre.Vector3</Signature>
      </Method>
      <Method from="postInitOnScene" to="êü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Hide" to="êû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="refreshPosition" to="êù">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.IOwnedBySceneNode" to="íé">
      <Method from="get_AmmunitionNode" to="îì">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_OwnerSceneNode" to="îã">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="set_OwnerSceneNode" to="îý">
        <Signature>(Mogre.SceneNode) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.Effects.WaterTrailGenerator" to="íë">
      <Method from="get_IsReadyForLastWaterTrail" to="îò">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_LastWaterTrailTime" to="îå">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_LastWaterTrailTime" to="îæ">
        <Signature>(Single) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.TorpedoView" to="íí">
      <Field from="hiddenPosition" to="è" />
      <Field from="lastWaterTrailTime" to="â" />
      <Field from="levelViewRef" to="ì" />
      <Field from="torpedoAvailablePool" to="ã" />
      <Field from="torpedoUsedPool" to="ý" />
      <Field from="torpedoAnimation" to="ò" />
      <Field from="innerNode" to="å" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="get_IsReadyForLastWaterTrail" to="îò">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_LastWaterTrailTime" to="îå">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_LastWaterTrailTime" to="îæ">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_LevelViewRef" to="è">
        <Signature>() : Wof.View.LevelView</Signature>
      </Method>
      <Method from="InitPool" to="â">
        <Signature>(Int32, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="GetInstance" to="ì">
        <Signature>(Wof.Model.Level.Weapon.Ammunition, Wof.View.LevelView) : Wof.View.TorpedoView</Signature>
      </Method>
      <Method from="FreeInstance" to="ã">
        <Signature>(Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="DestroyPool" to="ý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="MoveToHiddenPosition" to="êö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="refreshPosition" to="êù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="preInitOnScene" to="êú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="postInitOnScene" to="êü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Hide" to="êû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initOnScene" to="ò">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="Dispose" to="êÿ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.RocketView" to="íê">
      <Field from="hiddenPosition" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="preInitOnScene" to="êú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="MoveToHiddenPosition" to="êö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="postInitOnScene" to="êü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initSmoke" to="è">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="Hide" to="êû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.CompositeModelView" to="íî">
      <Field from="firstTileIndex" to="è" />
      <Field from="tileViews" to="â" />
      <Field from="name" to="ì" />
      <Field from="mainNode" to="ã" />
      <Field from="parentNode" to="ý" />
      <Field from="compositeModel" to="ò" />
      <Field from="framework" to="å" />
      <Field from="sceneMgr" to="æ" />
      <Field from="backgroundDummy" to="é" />
      <Method from=".ctor" to=".ctor">
        <Signature>(System.Collections.Generic.List`1, Wof.Controller.IFrameWork, Mogre.SceneNode, String) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Int32, Wof.Controller.IFrameWork, Mogre.SceneNode, String) : Void</Signature>
      </Method>
      <Method from="get_TileViews" to="è">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="get_Name" to="â">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_MainNode" to="ì">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_ParentNode" to="ã">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="initOnScene" to="îé">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.IslandView" to="íä">
      <Field from="parkedPlanes" to="è" />
      <Field from="islandCounter" to="â" />
      <Field from="staticNode" to="ì" />
      <Field from="meshName" to="ã" />
      <Field from="count" to="ý" />
      <Field from="minimapItem" to="ò" />
      <Method from=".ctor" to=".ctor">
        <Signature>(System.Collections.Generic.List`1, Wof.Controller.IFrameWork, Mogre.SceneNode) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Int32, Wof.Controller.IFrameWork, Mogre.SceneNode) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_StaticNode" to="è">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_MinimapItem" to="â">
        <Signature>() : Wof.View.MinimapItem</Signature>
      </Method>
      <Method from="initOnScene" to="îé">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initPalm" to="ì">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Mogre.Vector3) : Void</Signature>
      </Method>
      <Method from="initPalm" to="ã">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Mogre.Vector3, Boolean) : Mogre.SceneNode</Signature>
      </Method>
      <Method from="initPalm" to="ý">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Mogre.Vector3, Boolean, Boolean) : Mogre.SceneNode</Signature>
      </Method>
      <Method from="initPalm2" to="ò">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Mogre.Vector3) : Void</Signature>
      </Method>
      <Method from="initPalm2" to="å">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Mogre.Vector3, Boolean, Boolean) : Mogre.SceneNode</Signature>
      </Method>
      <Method from="initPalm2" to="æ">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Mogre.Vector3, Boolean) : Mogre.SceneNode</Signature>
      </Method>
      <Method from="initLampPost" to="é">
        <Signature>(Mogre.SceneNode, Mogre.Vector3, Mogre.Radian) : Void</Signature>
      </Method>
      <Method from="initNonCollisionTreesDiamond" to="ë">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Single, Single) : Void</Signature>
      </Method>
      <Method from="initLampPosts" to="í">
        <Signature>(Mogre.SceneNode, Single, Single, Single, Single, Mogre.Radian) : Void</Signature>
      </Method>
      <Method from="initNonCollisionTreesDiamond" to="ê">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Single, Single, Single, Single, Single) : Void</Signature>
      </Method>
      <Method from="initNonCollisionTreesDiamond" to="î">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Single, Single, Single, Single, Single, Boolean) : Void</Signature>
      </Method>
      <Method from="initNonCollisionTreesCircle" to="ä">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Single, Single) : Void</Signature>
      </Method>
      <Method from="initNonCollisionTreesCircle" to="ó">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Single, Single, Boolean) : Void</Signature>
      </Method>
      <Method from="initNonCollisionTreesDiamond" to="õ">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Single, Single, Single) : Void</Signature>
      </Method>
      <Method from="initNonCollisionTreesDiamond" to="ñ">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Single, Single, Single, Boolean) : Void</Signature>
      </Method>
      <Method from="Dispose" to="îë">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.BackGroundDummyIslandView" to="íó">
      <Field from="C_DUMMY_ISLAND_ROUND" to="è" />
      <Field from="C_DUMMY_ISLAND_LAGUNA" to="â" />
      <Field from="C_DUMMY_ISLAND_DLAGUNA" to="ì" />
      <Field from="C_DUMMY_ISLAND_6" to="ã" />
      <Field from="C_DUMMY_RADAR_DOME" to="ý" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Int32, String, Wof.Controller.IFrameWork, Mogre.SceneNode) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.CameraHolder" to="íõ">
      <Method from="GetCameraHolders" to="îí">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="ResetCameraHolders" to="îê">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.CarrierView" to="íñ">
      <Field from="arrestingWiresSpan" to="è" />
      <Field from="carrierCounter" to="â" />
      <Field from="hangarDepth" to="ì" />
      <Field from="carrierAerial1" to="ã" />
      <Field from="carrierAerial2" to="ý" />
      <Field from="carrierHangar" to="ò" />
      <Field from="adEntity" to="å" />
      <Field from="isHangaringPlane" to="æ" />
      <Field from="hangarPlane" to="é" />
      <Field from="hangaringDirection" to="ë" />
      <Field from="isHangaringFinished" to="í" />
      <Field from="carrierAerial1Node" to="ê" />
      <Field from="carrierAerial2Node" to="î" />
      <Field from="carrierHangarNode" to="ä" />
      <Field from="adNode" to="ó" />
      <Field from="aerialAnimation1" to="õ" />
      <Field from="aerialAnimation2" to="ñ" />
      <Field from="storagePlanes" to="ö" />
      <Field from="arrestingWires" to="ù" />
      <Field from="activeArrestingWires" to="ï" />
      <Field from="arrestingWiresH" to="ú" />
      <Field from="planeBeingCaught" to="ü" />
      <Field from="crewAnimationStates" to="ç" />
      <Field from="japanFlagState" to="û" />
      <Field from="japanFlag" to="ÿ" />
      <Field from="flagNode" to="ô" />
      <Field from="minimapItem" to="âè" />
      <Field from="isCatchingPlane" to="ââ" />
      <Field from="isReleasingPlane" to="âì" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Int32, Wof.Controller.IFrameWork, Mogre.SceneNode) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(System.Collections.Generic.List`1, Wof.Controller.IFrameWork, Mogre.SceneNode) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_MinimapItem" to="è">
        <Signature>() : Wof.View.MinimapItem</Signature>
      </Method>
      <Method from="get_ArrestingWiresSpan" to="â">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_IsCatchingPlane" to="ì">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsReleasingPlane" to="ã">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_HangarPlane" to="ý">
        <Signature>() : Wof.View.PlaneView</Signature>
      </Method>
      <Method from="showHangaringArrow" to="ò">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="showChangeAmmoArrow" to="å">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="hideHangaringArrow" to="æ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="hideChangeAmmo" to="é">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CrewStatePlaneOnCarrier" to="ë">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="CrewStatePlaneAirborne" to="í">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="AddCrew" to="ê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="InitLights" to="î">
        <Signature>(Mogre.ColourValue, Mogre.ColourValue) : Void</Signature>
      </Method>
      <Method from="initOnScene" to="îé">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initFlag" to="ä">
        <Signature>(Mogre.Vector3) : Void</Signature>
      </Method>
      <Method from="InitStoragePlaneOnCarrier" to="ó">
        <Signature>(Wof.Model.Level.Planes.StoragePlane) : Void</Signature>
      </Method>
      <Method from="FindStoragePlaneView" to="õ">
        <Signature>(Wof.Model.Level.Planes.StoragePlane) : Wof.View.PlaneView</Signature>
      </Method>
      <Method from="RemoveNextStoragePlane" to="ñ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="DestoryStoragePlanes" to="ö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="DestoryStoragePlane" to="ù">
        <Signature>(Wof.Model.Level.LevelTiles.AircraftCarrierTiles.AircraftCarrierTile) : Boolean</Signature>
      </Method>
      <Method from="InitArrestingWires" to="ï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="InitArrestingWire" to="ú">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="activateClosestArrestingWires" to="ü">
        <Signature>(Wof.View.PlaneView) : Void</Signature>
      </Method>
      <Method from="IsHangaringFinished" to="ç">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="ResetHangaringFinished" to="û">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StartCatchingPlane" to="ÿ">
        <Signature>(Wof.View.PlaneView, Wof.Model.Level.LevelTiles.AircraftCarrierTiles.EndAircraftCarrierTile) : Void</Signature>
      </Method>
      <Method from="StartReleasingPlane" to="ô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initLArrestingWire" to="âè">
        <Signature>(Mogre.SceneNode) : Void</Signature>
      </Method>
      <Method from="initRArrestingWire" to="ââ">
        <Signature>(Mogre.SceneNode) : Void</Signature>
      </Method>
      <Method from="animateArrestingWire" to="âì">
        <Signature>(Mogre.SceneNode, Single) : Single</Signature>
      </Method>
      <Method from="finishReleasingPlane" to="âã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="shouldStopReleasingPlane" to="âý">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="StartHangaringPlane" to="âò">
        <Signature>(Wof.View.PlaneView, Int32) : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="rewind" to="êô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="enableAnimation" to="îè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="disableAnimation" to="îâ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Dispose" to="îî">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.CarrierView.&lt;&gt;c__DisplayClass1" to="íñ.&lt;&gt;c__DisplayClass1" />
    <Type from="Wof.View.CarrierView.&lt;&gt;c__DisplayClass4" to="íñ.&lt;&gt;c__DisplayClass4" />
    <Type from="Wof.View.Effects.Quadrangle3D" to="íö">
      <Field from="name" to="è" />
      <Field from="manualObject" to="â" />
      <Field from="sceneMgr" to="ì" />
      <Field from="corners" to="ã" />
      <Field from="quadrangle" to="ý" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneManager, String) : Void</Signature>
      </Method>
      <Method from="get_ManualObject" to="è">
        <Signature>() : Mogre.ManualObject</Signature>
      </Method>
      <Method from="get_Quadrangle" to="â">
        <Signature>() : Wof.Model.Level.Common.Quadrangle</Signature>
      </Method>
      <Method from="GetCorners3DArray" to="ì">
        <Signature>() : Single[][]</Signature>
      </Method>
      <Method from="OnSetCorners" to="îä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetCorners3D" to="ã">
        <Signature>(Wof.Model.Level.Common.Quadrangle, Mogre.Vector3, String) : Void</Signature>
      </Method>
      <Method from="SetCorners" to="ý">
        <Signature>(Wof.Model.Level.Common.Quadrangle) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.Effects.AdQuadrangle3D" to="íù">
      <Field from="billboardId" to="è" />
      <Field from="ad" to="â" />
      <Field from="wasShown" to="ì" />
      <Field from="parent" to="ã" />
      <Field from="adNode" to="ý" />
      <Field from="isPersistent" to="ò" />
      <Field from="opacity" to="å" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneManager, Wof.Controller.AdAction.AdManager.Ad, Boolean) : Void</Signature>
      </Method>
      <Method from="ResetOpacity" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnSetCorners" to="îä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="DecreaseOpacity" to="â">
        <Signature>(Single) : Boolean</Signature>
      </Method>
      <Method from="get_Ad" to="ì">
        <Signature>() : Wof.Controller.AdAction.AdManager.Ad</Signature>
      </Method>
      <Method from="get_WasShown" to="ã">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_WasShown" to="ý">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_IsPersistent" to="ò">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="SetSceneNodes" to="å">
        <Signature>(Mogre.SceneNode, Mogre.SceneNode) : Void</Signature>
      </Method>
      <Method from="GetParent" to="æ">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="GetAdNode" to="é">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="SetBillboardId" to="ë">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="GetBillboardId" to="í">
        <Signature>() : Int32</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.Effects.EffectsManager" to="íï">
      <Field from="minRepeatDelay" to="è" />
      <Field from="effects" to="â" />
      <Field from="smokeMgr" to="ì" />
      <Field from="rocketSmokeMgr" to="ã" />
      <Field from="trailSmokeMgr" to="ý" />
      <Field from="lightSmokeMgr" to="ò" />
      <Field from="lightSmokeNightMgr" to="å" />
      <Field from="darkLightSmokeMgr" to="æ" />
      <Field from="totalTime" to="é" />
      <Field from="animationsToRemove" to="ë" />
      <Field from="isLoaded" to="í" />
      <Field from="isEffectsPreloaded" to="ê" />
      <Field from="smokeSystems" to="î" />
      <Field from="singleton" to="ä" />
      <Field from="additionalPreloadedTextures" to="ó" />
      <Field from="additionalPreloadedMeshes" to="õ" />
      <Field from="billboardSet" to="ñ" />
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_Singleton" to="è">
        <Signature>() : Wof.View.Effects.EffectsManager</Signature>
      </Method>
      <Method from="get_TotalTime" to="â">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="RegisterAdditionalPreloadedTextures" to="ì">
        <Signature>(Mogre.Entity) : Void</Signature>
      </Method>
      <Method from="RegisterAdditionalPreloadedTexture" to="ã">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="RegisterAdditionalPreloadedMesh" to="ý">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="Clear" to="ò">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Init" to="å">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="BuildMaterials" to="æ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PreloadGameResources" to="é">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PreloadMesh" to="ë">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="PreloadMesh" to="í">
        <Signature>(String, String) : Void</Signature>
      </Method>
      <Method from="EffectExists" to="ê">
        <Signature>(String) : Boolean</Signature>
      </Method>
      <Method from="UpdateTimeAndAnimateAll" to="î">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="GetSmokeManager" to="ä">
        <Signature>(Wof.View.Effects.EffectsManager.SmokeType) : Wof.View.Effects.ParticleManager</Signature>
      </Method>
      <Method from="Smoke" to="ó">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Wof.View.Effects.EffectsManager.SmokeType, Mogre.Vector3, Mogre.Vector3, Mogre.Vector2) : Mogre.ParticleSystem</Signature>
      </Method>
      <Method from="Smoke" to="õ">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Wof.View.Effects.EffectsManager.SmokeType, Mogre.Vector3, Mogre.Vector3, Mogre.Vector2, Boolean) : Mogre.ParticleSystem</Signature>
      </Method>
      <Method from="Smoke" to="ñ">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Mogre.Vector3, Mogre.Vector3, Mogre.Vector2) : Mogre.ParticleSystem</Signature>
      </Method>
      <Method from="Smoke" to="ö">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Mogre.Vector3, Mogre.Vector3) : Mogre.ParticleSystem</Signature>
      </Method>
      <Method from="Smoke" to="ù">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode) : Mogre.ParticleSystem</Signature>
      </Method>
      <Method from="IsSmoking" to="ï">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Wof.View.Effects.EffectsManager.SmokeType) : Boolean</Signature>
      </Method>
      <Method from="IsSmoking" to="ú">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode) : Boolean</Signature>
      </Method>
      <Method from="NoSmoke" to="ü">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode) : Void</Signature>
      </Method>
      <Method from="NoSmoke" to="ç">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Wof.View.Effects.EffectsManager.SmokeType) : Void</Signature>
      </Method>
      <Method from="AddCustomEffect" to="û">
        <Signature>(Wof.View.NodeAnimation.NodeAnimation) : Wof.View.NodeAnimation.NodeAnimation</Signature>
      </Method>
      <Method from="RemoveAnimation" to="ÿ">
        <Signature>(Wof.View.NodeAnimation.NodeAnimation) : Boolean</Signature>
      </Method>
      <Method from="RemoveAnimationSafe" to="ô">
        <Signature>(Wof.View.NodeAnimation.NodeAnimation) : Boolean</Signature>
      </Method>
      <Method from="Sprite" to="âè">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Mogre.Vector3, Mogre.Vector2, Wof.View.Effects.EffectsManager.EffectType, Boolean) : Wof.View.NodeAnimation.VisibilityNodeAnimation</Signature>
      </Method>
      <Method from="Sprite" to="ââ">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Wof.View.Effects.EffectsManager.EffectType) : Wof.View.NodeAnimation.VisibilityNodeAnimation</Signature>
      </Method>
      <Method from="Sprite" to="âì">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Wof.View.Effects.EffectsManager.EffectType, String) : Wof.View.NodeAnimation.VisibilityNodeAnimation</Signature>
      </Method>
      <Method from="Sprite" to="âã">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Wof.View.Effects.EffectsManager.EffectType, String, Boolean) : Wof.View.NodeAnimation.VisibilityNodeAnimation</Signature>
      </Method>
      <Method from="GetEffectInfo" to="âý">
        <Signature>(Wof.View.Effects.EffectsManager.EffectType) : Wof.View.Effects.EffectsManager.EffectInfo</Signature>
      </Method>
      <Method from="HideSprite" to="âò">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Wof.View.Effects.EffectsManager.EffectType, String) : Void</Signature>
      </Method>
      <Method from="HideSprite" to="âå">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Wof.View.Effects.EffectsManager.EffectType, UInt32) : Void</Signature>
      </Method>
      <Method from="NoSprite" to="âæ">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Wof.View.Effects.EffectsManager.EffectType, UInt32) : Void</Signature>
      </Method>
      <Method from="NoSprite" to="âé">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Wof.View.Effects.EffectsManager.EffectType, String) : Void</Signature>
      </Method>
      <Method from="GetEffect" to="âë">
        <Signature>(String) : Wof.View.NodeAnimation.NodeAnimation</Signature>
      </Method>
      <Method from="BuildSpriteEffectName" to="âí">
        <Signature>(Mogre.SceneNode, Wof.View.Effects.EffectsManager.EffectType, String) : String</Signature>
      </Method>
      <Method from="Sprite" to="âê">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Mogre.Vector3, Mogre.Vector2, Wof.View.Effects.EffectsManager.EffectType, Boolean, UInt32) : Wof.View.NodeAnimation.VisibilityNodeAnimation</Signature>
      </Method>
      <Method from="Sprite" to="âî">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Mogre.Vector3, Mogre.Vector2, Wof.View.Effects.EffectsManager.EffectType, Boolean, String) : Wof.View.NodeAnimation.VisibilityNodeAnimation</Signature>
      </Method>
      <Method from="Sprite" to="âä">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Mogre.Vector3, Mogre.Vector2, Wof.View.Effects.EffectsManager.EffectType, Boolean, String, Mogre.Quaternion) : Wof.View.NodeAnimation.VisibilityNodeAnimation</Signature>
      </Method>
      <Method from="EffectEnded" to="âó">
        <Signature>(String) : Boolean</Signature>
      </Method>
      <Method from="RectangularEffect" to="âõ">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, String, Wof.View.Effects.EffectsManager.EffectType, Mogre.Vector3, Mogre.Vector2, Mogre.Quaternion, Boolean) : Wof.View.NodeAnimation.VisibilityNodeAnimation</Signature>
      </Method>
      <Method from="RectangularEffect" to="âñ">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, String, Wof.View.Effects.EffectsManager.EffectType, Mogre.Vector3, Mogre.Quaternion, Boolean) : Wof.View.NodeAnimation.VisibilityNodeAnimation</Signature>
      </Method>
      <Method from="WaterImpact" to="âö">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Mogre.Vector3, Mogre.Vector2, Boolean, String) : Void</Signature>
      </Method>
      <Method from="Reflector" to="âù">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Mogre.Vector3, Mogre.Vector2, Boolean, String) : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="AddSeagulls" to="âï">
        <Signature>(Mogre.SceneManager, Mogre.Vector3, Mogre.Vector2, Mogre.Degree, Single, UInt32) : Void</Signature>
      </Method>
      <Method from="ChangeSeagullDirection" to="âú">
        <Signature>(Object) : Void</Signature>
      </Method>
      <Method from="AddClouds" to="âü">
        <Signature>(Mogre.SceneManager, Mogre.Vector3, Mogre.Vector2, Mogre.Degree, UInt32) : Void</Signature>
      </Method>
      <Method from="AddClouds" to="âç">
        <Signature>(Mogre.SceneManager, Mogre.Vector3, Mogre.Vector2, Mogre.Degree, UInt32, Boolean) : Void</Signature>
      </Method>
      <Method from="AddClouds" to="âû">
        <Signature>(Mogre.SceneManager, Mogre.Vector3, Mogre.Vector2, Mogre.Degree, UInt32, Boolean, Mogre.Quaternion, Single, Mogre.ColourValue) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.Effects.EffectsManager.EffectInfo" to="íï.íú">
      <Field from="material" to="è" />
      <Field from="type" to="â" />
      <Field from="duration" to="ì" />
    </Type>
    <Type from="Wof.View.Effects.EffectsManager.SmokeType" to="íï.íü">
      <Field from="NORMAL" to="è" />
      <Field from="ROCKET" to="â" />
      <Field from="SMOKETRAIL" to="ì" />
      <Field from="LIGHTSMOKE" to="ã" />
      <Field from="DARKLIGHTSMOKE" to="ý" />
    </Type>
    <Type from="Wof.View.Effects.EffectsManager.EffectType" to="íï.íç" />
    <Type from="Wof.View.Effects.EffectsManager.MaterialToPreload" to="íï.íû">
      <Field from="General" to="è" />
      <Field from="Soldier" to="â" />
      <Field from="Wood" to="ì" />
      <Field from="Concrete" to="ã" />
      <Field from="Rocket" to="ý" />
    </Type>
    <Type from="Wof.View.Effects.HydraxManager" to="íÿ">
      <Field from="ASYNC_FRAME_TIME" to="è" />
      <Field from="USE_UPDATER_THREAD" to="â" />
      <Field from="stopUpdater" to="ì" />
      <Field from="hydrax" to="ã" />
      <Field from="singleton" to="ý" />
      <Field from="updater" to="ò" />
      <Field from="hydraxDepthMaterials" to="å" />
      <Field from="hydraxDepthMaterialsMap" to="æ" />
      <Field from="timeSinceUpdate" to="é" />
      <Field from="forceUpdate" to="ë" />
      <Field from="cfgFileName" to="í" />
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_Singleton" to="è">
        <Signature>() : Wof.View.Effects.HydraxManager</Signature>
      </Method>
      <Method from="BuildHydraxDepthMaterialsInfo" to="â">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="RemoveHydraxDepthTechniques" to="ì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="AddHydraxDepthTechnique" to="ã">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="AddHydraxDepthTechniques" to="ý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Update" to="ò">
        <Signature>(Mogre.FrameEvent) : Void</Signature>
      </Method>
      <Method from="ForceUpdate" to="å">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Update" to="æ">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="UpdateLoop" to="é">
        <Signature>(Object) : Void</Signature>
      </Method>
      <Method from="GetHydrax" to="ë">
        <Signature>() : MHydrax.MHydrax</Signature>
      </Method>
      <Method from="TranslateSurface" to="í">
        <Signature>(Mogre.Vector3) : Void</Signature>
      </Method>
      <Method from="ReCreateHydrax" to="ê">
        <Signature>(Mogre.SceneManager, Mogre.Camera, Mogre.Viewport) : Void</Signature>
      </Method>
      <Method from="CreateHydrax" to="î">
        <Signature>(String, Mogre.SceneManager, Mogre.Camera, Mogre.Viewport) : Void</Signature>
      </Method>
      <Method from="DisposeHydrax" to="ä">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.Effects.ParticleManager" to="íô">
      <Field from="systemName" to="è" />
      <Field from="materialName" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>(String, String) : Void</Signature>
      </Method>
      <Method from="get_SystemName" to="è">
        <Signature>() : String</Signature>
      </Method>
      <Method from="set_SystemName" to="â">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="get_MaterialName" to="ì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="set_MaterialName" to="ã">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="IsEmitting" to="ý">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode) : Boolean</Signature>
      </Method>
      <Method from="Start" to="ò">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode) : Mogre.ParticleSystem</Signature>
      </Method>
      <Method from="Start" to="å">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Mogre.Vector3, Mogre.Vector3) : Mogre.ParticleSystem</Signature>
      </Method>
      <Method from="Start" to="æ">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Mogre.Vector3, Mogre.Vector3, Mogre.Vector2) : Mogre.ParticleSystem</Signature>
      </Method>
      <Method from="Start" to="é">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode, Mogre.Vector3, Mogre.Vector3, Mogre.Vector2, Boolean) : Mogre.ParticleSystem</Signature>
      </Method>
      <Method from="Stop" to="ë">
        <Signature>(Mogre.SceneManager, Mogre.SceneNode) : Mogre.ParticleSystem</Signature>
      </Method>
    </Type>
    <Type from="SkyX.AtmosphereManager" to="êè">
      <Field from="NativeHandle" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(IntPtr) : Void</Signature>
      </Method>
      <Method from="AtmosphereManager_GetTime" to="AtmosphereManager_GetTime">
        <Signature>(IntPtr) : IntPtr</Signature>
      </Method>
      <Method from="AtmosphereManager_GetEastPosition" to="AtmosphereManager_GetEastPosition">
        <Signature>(IntPtr) : IntPtr</Signature>
      </Method>
      <Method from="AtmosphereManager_GetWaveLength" to="AtmosphereManager_GetWaveLength">
        <Signature>(IntPtr) : IntPtr</Signature>
      </Method>
      <Method from="AtmosphereManager_GetInnerRadius" to="AtmosphereManager_GetInnerRadius">
        <Signature>(IntPtr) : Single</Signature>
      </Method>
      <Method from="AtmosphereManager_GetOuterRadius" to="AtmosphereManager_GetOuterRadius">
        <Signature>(IntPtr) : Single</Signature>
      </Method>
      <Method from="AtmosphereManager_GetHeightPosition" to="AtmosphereManager_GetHeightPosition">
        <Signature>(IntPtr) : Single</Signature>
      </Method>
      <Method from="AtmosphereManager_GetRayleighMultiplier" to="AtmosphereManager_GetRayleighMultiplier">
        <Signature>(IntPtr) : Single</Signature>
      </Method>
      <Method from="AtmosphereManager_GetMieMultiplier" to="AtmosphereManager_GetMieMultiplier">
        <Signature>(IntPtr) : Single</Signature>
      </Method>
      <Method from="AtmosphereManager_GetSunIntensity" to="AtmosphereManager_GetSunIntensity">
        <Signature>(IntPtr) : Single</Signature>
      </Method>
      <Method from="AtmosphereManager_GetG" to="AtmosphereManager_GetG">
        <Signature>(IntPtr) : Single</Signature>
      </Method>
      <Method from="AtmosphereManager_GetExposure" to="AtmosphereManager_GetExposure">
        <Signature>(IntPtr) : Single</Signature>
      </Method>
      <Method from="AtmosphereManager_GetNumberOfSamples" to="AtmosphereManager_GetNumberOfSamples">
        <Signature>(IntPtr) : Int32</Signature>
      </Method>
      <Method from="get_Time" to="è">
        <Signature>() : Mogre.Vector3</Signature>
      </Method>
      <Method from="get_EastPosition" to="â">
        <Signature>() : Mogre.Vector2</Signature>
      </Method>
      <Method from="get_WaveLength" to="ì">
        <Signature>() : Mogre.Vector3</Signature>
      </Method>
      <Method from="get_InnerRadius" to="ã">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_OuterRadius" to="ý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_HeightPosition" to="ò">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_RayleighMultiplier" to="å">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_MieMultiplier" to="æ">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_SunIntensity" to="é">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_G" to="ë">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Exposure" to="í">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_NumberOfSamples" to="ê">
        <Signature>() : Int32</Signature>
      </Method>
    </Type>
    <Type from="SkyX.CloudLayer" to="êâ">
      <Field from="NativeHandle" to="è" />
      <Field from="options" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>(IntPtr, SkyX.CloudLayer.LayerOptions) : Void</Signature>
      </Method>
      <Method from="get_Options" to="è">
        <Signature>() : SkyX.CloudLayer.LayerOptions</Signature>
      </Method>
    </Type>
    <Type from="SkyX.CloudLayer.LayerOptions" to="êâ.êì">
      <Field from="Height" to="è" />
      <Field from="Scale" to="â" />
      <Field from="WindDirection" to="ì" />
      <Field from="TimeMultiplier" to="ã" />
      <Field from="DistanceAttenuation" to="ý" />
      <Field from="DetailAttenuation" to="ò" />
      <Field from="NormalMultiplier" to="å" />
      <Field from="HeightVolume" to="æ" />
      <Field from="VolumetricDisplacement" to="é" />
      <Method from=".ctor" to=".ctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Mogre.Vector2, Single) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Single, Mogre.Vector2, Single, Single, Single, Single, Single, Single) : Void</Signature>
      </Method>
    </Type>
    <Type from="SkyX.CloudsManager" to="êã">
      <Field from="NativeHandle" to="è" />
      <Field from="layers" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>(IntPtr) : Void</Signature>
      </Method>
      <Method from="CloudsManager_Add" to="CloudsManager_Add">
        <Signature>(IntPtr, Single, Single, Mogre.Vector2, Single, Single, Single, Single, Single, Single) : IntPtr</Signature>
      </Method>
      <Method from="CloudsManager_Remove" to="CloudsManager_Remove">
        <Signature>(IntPtr, IntPtr) : Void</Signature>
      </Method>
      <Method from="CloudsManager_Unregister" to="CloudsManager_Unregister">
        <Signature>(IntPtr, IntPtr) : Void</Signature>
      </Method>
      <Method from="CloudsManager_RemoveAll" to="CloudsManager_RemoveAll">
        <Signature>(IntPtr) : Void</Signature>
      </Method>
      <Method from="CloudsManager_RegisterAll" to="CloudsManager_RegisterAll">
        <Signature>(IntPtr) : Void</Signature>
      </Method>
      <Method from="CloudsManager_UnregisterAll" to="CloudsManager_UnregisterAll">
        <Signature>(IntPtr) : Void</Signature>
      </Method>
      <Method from="Add" to="è">
        <Signature>(SkyX.CloudLayer.LayerOptions) : SkyX.CloudLayer</Signature>
      </Method>
      <Method from="Remove" to="â">
        <Signature>(SkyX.CloudLayer) : Void</Signature>
      </Method>
      <Method from="Unregister" to="ì">
        <Signature>(SkyX.CloudLayer) : Void</Signature>
      </Method>
      <Method from="RemoveAll" to="ã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="RegisterAll" to="ý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="UnregisterAll" to="ò">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="SkyX.LightingMode" to="êý">
      <Field from="LDR" to="è" />
      <Field from="HDR" to="â" />
    </Type>
    <Type from="SkyX.GPUManager" to="êò">
      <Field from="NativeHandle" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(IntPtr) : Void</Signature>
      </Method>
      <Method from="GPUManager_AddGroundPass" to="GPUManager_AddGroundPass">
        <Signature>(IntPtr, IntPtr, Single, Mogre.SceneBlendType) : Void</Signature>
      </Method>
      <Method from="AddGroundPass" to="è">
        <Signature>(Mogre.Pass, Single, Mogre.SceneBlendType) : Void</Signature>
      </Method>
      <Method from="AddGroundPass" to="â">
        <Signature>(Mogre.Pass, Single) : Void</Signature>
      </Method>
      <Method from="AddGroundPass" to="ì">
        <Signature>(Mogre.Pass) : Void</Signature>
      </Method>
      <Method from="get_MoonMaterialName" to="ã">
        <Signature>() : String</Signature>
      </Method>
    </Type>
    <Type from="SkyX.MeshManager" to="êå">
      <Field from="NativeHandle" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(IntPtr) : Void</Signature>
      </Method>
      <Method from="MeshManager_SetSkydomeFadingParameters" to="MeshManager_SetSkydomeFadingParameters">
        <Signature>(IntPtr, Boolean, Single) : Void</Signature>
      </Method>
      <Method from="MeshManager_GetSmoothSkydomeFading" to="MeshManager_GetSmoothSkydomeFading">
        <Signature>(IntPtr) : Boolean</Signature>
      </Method>
      <Method from="MeshManager_GetSkydomeFadingPercent" to="MeshManager_GetSkydomeFadingPercent">
        <Signature>(IntPtr) : Single</Signature>
      </Method>
      <Method from="MeshManager_GetSteps" to="MeshManager_GetSteps">
        <Signature>(IntPtr) : Int32</Signature>
      </Method>
      <Method from="MeshManager_GetCircles" to="MeshManager_GetCircles">
        <Signature>(IntPtr) : Int32</Signature>
      </Method>
      <Method from="MeshManager_GetSkydomeRadius" to="MeshManager_GetSkydomeRadius">
        <Signature>(IntPtr) : Single</Signature>
      </Method>
      <Method from="MeshManager_SetGeometryParameters" to="MeshManager_SetGeometryParameters">
        <Signature>(IntPtr, Int32, Int32) : Void</Signature>
      </Method>
      <Method from="MeshManager_SetMaterialName" to="MeshManager_SetMaterialName">
        <Signature>(IntPtr, String) : Void</Signature>
      </Method>
      <Method from="MeshManager_GetMaterialName" to="MeshManager_GetMaterialName">
        <Signature>(IntPtr) : IntPtr</Signature>
      </Method>
      <Method from="SetSkydomeFadingParameters" to="è">
        <Signature>(Boolean, Single) : Void</Signature>
      </Method>
      <Method from="SetSkydomeFadingParameters" to="â">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_SmoothSkydomeFading" to="ì">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_SmoothSkydomeFading" to="ã">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_SkydomeFadingPercent" to="ý">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_SkydomeFadingPercent" to="ò">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_Steps" to="å">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_Steps" to="æ">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_Circles" to="é">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="set_Circles" to="ë">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="get_SkyDomeRadius" to="í">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_MaterialName" to="ê">
        <Signature>() : String</Signature>
      </Method>
      <Method from="set_MaterialName" to="î">
        <Signature>(String) : Void</Signature>
      </Method>
    </Type>
    <Type from="SkyX.MoonManager" to="êæ">
      <Field from="NativeHandle" to="è" />
      <Field from="billboardSet" to="â" />
      <Field from="sceneNode" to="ì" />
      <Method from=".ctor" to=".ctor">
        <Signature>(IntPtr) : Void</Signature>
      </Method>
      <Method from="MoonManager_GetMoonBillboard" to="MoonManager_GetMoonBillboard">
        <Signature>(IntPtr) : IntPtr</Signature>
      </Method>
      <Method from="MoonManager_GetMoonSceneNode" to="MoonManager_GetMoonSceneNode">
        <Signature>(IntPtr) : IntPtr</Signature>
      </Method>
      <Method from="MoonManager_SetMoonSize" to="MoonManager_SetMoonSize">
        <Signature>(IntPtr, Single) : Void</Signature>
      </Method>
      <Method from="MoonManager_GetMoonSize" to="MoonManager_GetMoonSize">
        <Signature>(IntPtr) : Single</Signature>
      </Method>
      <Method from="get_MoonSize" to="è">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_MoonSize" to="â">
        <Signature>(Single) : Void</Signature>
      </Method>
    </Type>
    <Type from="SkyX.ReflectionHelper" to="êé">
      <Field from="defaultFlags" to="è" />
      <Method from="Wrapper_FreeOutString" to="Wrapper_FreeOutString">
        <Signature>(IntPtr) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Construct" to="è">
        <Signature>&lt;T&gt;(System.Type[], Object[]) : T</Signature>
      </Method>
      <Method from="Construct" to="â">
        <Signature>&lt;T&gt;() : T</Signature>
      </Method>
      <Method from="Construct" to="ì">
        <Signature>&lt;T&gt;(Object[]) : T</Signature>
      </Method>
      <Method from="Construct" to="ã">
        <Signature>(System.Type) : Object</Signature>
      </Method>
      <Method from="Construct" to="ý">
        <Signature>(System.Type, Object[]) : Object</Signature>
      </Method>
      <Method from="GetField" to="ò">
        <Signature>&lt;T&gt;(Object, String) : T</Signature>
      </Method>
      <Method from="GetField" to="å">
        <Signature>&lt;T&gt;(T, String) : Object</Signature>
      </Method>
      <Method from="GetFieldPointer" to="æ">
        <Signature>(Object, String) : IntPtr</Signature>
      </Method>
      <Method from="SetField" to="é">
        <Signature>&lt;T&gt;(T, String, Object) : Void</Signature>
      </Method>
      <Method from="GetProperty" to="ë">
        <Signature>&lt;T, U&gt;(T, String) : U</Signature>
      </Method>
      <Method from="GetProperty" to="í">
        <Signature>&lt;T&gt;(T, String) : Object</Signature>
      </Method>
      <Method from="SetProperty" to="ê">
        <Signature>&lt;T&gt;(T, String, Object) : Void</Signature>
      </Method>
      <Method from="IntPtrToString" to="î">
        <Signature>(IntPtr) : String</Signature>
      </Method>
      <Method from="StringToIntPtr" to="ä">
        <Signature>(String) : IntPtr</Signature>
      </Method>
    </Type>
    <Type from="SkyX.SkyManager" to="êë">
      <Field from="Disposed" to="è" />
      <Field from="manager" to="â" />
      <Field from="camera" to="ì" />
      <Field from="meshManager" to="ã" />
      <Field from="gpuManager" to="ý" />
      <Field from="moonManager" to="ò" />
      <Field from="atmosphereManager" to="å" />
      <Field from="cloudsManager" to="æ" />
      <Field from="vCloudsManager" to="é" />
      <Field from="NativeHandle" to="ë" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneManager, Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="New_Manager" to="New_Manager">
        <Signature>(Void*, Void*) : IntPtr</Signature>
      </Method>
      <Method from="Manager_Create" to="Manager_Create">
        <Signature>(IntPtr) : Void</Signature>
      </Method>
      <Method from="Manager_Remove" to="Manager_Remove">
        <Signature>(IntPtr) : Void</Signature>
      </Method>
      <Method from="Manager_Update" to="Manager_Update">
        <Signature>(IntPtr, Single) : Void</Signature>
      </Method>
      <Method from="Manager_SetTimeMultiplier" to="Manager_SetTimeMultiplier">
        <Signature>(IntPtr, Single) : Void</Signature>
      </Method>
      <Method from="Manager_GetTimeMultiplier" to="Manager_GetTimeMultiplier">
        <Signature>(IntPtr) : Single</Signature>
      </Method>
      <Method from="Manager_GetTimeOffset" to="Manager_GetTimeOffset">
        <Signature>(IntPtr) : Single</Signature>
      </Method>
      <Method from="Manager_SetLightingMode" to="Manager_SetLightingMode">
        <Signature>(IntPtr, SkyX.LightingMode) : Void</Signature>
      </Method>
      <Method from="Manager_GetLightingMode" to="Manager_GetLightingMode">
        <Signature>(IntPtr) : SkyX.LightingMode</Signature>
      </Method>
      <Method from="Manager_SetStarfieldEnabled" to="Manager_SetStarfieldEnabled">
        <Signature>(IntPtr, Boolean) : Void</Signature>
      </Method>
      <Method from="Manager_GetStarfieldEnabled" to="Manager_GetStarfieldEnabled">
        <Signature>(IntPtr) : Boolean</Signature>
      </Method>
      <Method from="Manager_GetGPUManager" to="Manager_GetGPUManager">
        <Signature>(IntPtr) : IntPtr</Signature>
      </Method>
      <Method from="Manager_GetMoonManager" to="Manager_GetMoonManager">
        <Signature>(IntPtr) : IntPtr</Signature>
      </Method>
      <Method from="Manager_GetMeshManager" to="Manager_GetMeshManager">
        <Signature>(IntPtr) : IntPtr</Signature>
      </Method>
      <Method from="Manager_GetAtmosphereManager" to="Manager_GetAtmosphereManager">
        <Signature>(IntPtr) : IntPtr</Signature>
      </Method>
      <Method from="Manager_GetCloudsManager" to="Manager_GetCloudsManager">
        <Signature>(IntPtr) : IntPtr</Signature>
      </Method>
      <Method from="Manager_GetVCloudsManager" to="Manager_GetVCloudsManager">
        <Signature>(IntPtr) : IntPtr</Signature>
      </Method>
      <Method from="add_Disposed" to="è">
        <Signature>(System.EventHandler) : Void</Signature>
      </Method>
      <Method from="remove_Disposed" to="â">
        <Signature>(System.EventHandler) : Void</Signature>
      </Method>
      <Method from="Dispose" to="îó">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Dispose" to="îõ">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="Create" to="ì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Remove" to="ã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Update" to="ý">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_TimeMultiplier" to="ò">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_TimeMultiplier" to="å">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_TimeOffset" to="æ">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_LightingMode" to="é">
        <Signature>() : SkyX.LightingMode</Signature>
      </Method>
      <Method from="set_LightingMode" to="ë">
        <Signature>(SkyX.LightingMode) : Void</Signature>
      </Method>
      <Method from="get_StarfieldEnabled" to="í">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_StarfieldEnabled" to="ê">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_GPUManager" to="î">
        <Signature>() : SkyX.GPUManager</Signature>
      </Method>
      <Method from="get_MoonManager" to="ä">
        <Signature>() : SkyX.MoonManager</Signature>
      </Method>
      <Method from="get_MeshManager" to="ó">
        <Signature>() : SkyX.MeshManager</Signature>
      </Method>
      <Method from="get_AtmosphereManager" to="õ">
        <Signature>() : SkyX.AtmosphereManager</Signature>
      </Method>
      <Method from="get_CloudsManager" to="ñ">
        <Signature>() : SkyX.CloudsManager</Signature>
      </Method>
      <Method from="get_VCloudsManager" to="ö">
        <Signature>() : SkyX.VCloudsManager</Signature>
      </Method>
      <Method from="get_SceneManager" to="ù">
        <Signature>() : Mogre.SceneManager</Signature>
      </Method>
      <Method from="get_Camera" to="ï">
        <Signature>() : Mogre.Camera</Signature>
      </Method>
    </Type>
    <Type from="SkyX.VCloudsManager" to="êí">
      <Field from="NativeHandle" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(IntPtr) : Void</Signature>
      </Method>
      <Method from="VCloudsManager_Create" to="VCloudsManager_Create">
        <Signature>(IntPtr) : Void</Signature>
      </Method>
      <Method from="VCloudsManager_Update" to="VCloudsManager_Update">
        <Signature>(IntPtr, Single) : Void</Signature>
      </Method>
      <Method from="VCloudsManager_Remove" to="VCloudsManager_Remove">
        <Signature>(IntPtr) : Void</Signature>
      </Method>
      <Method from="VCloudsManager_SetHeight" to="VCloudsManager_SetHeight">
        <Signature>(IntPtr, Mogre.Vector2&amp;) : Void</Signature>
      </Method>
      <Method from="VCloudsManager_GetHeight" to="VCloudsManager_GetHeight">
        <Signature>(IntPtr) : IntPtr</Signature>
      </Method>
      <Method from="VCloudsManager_SetAutoupdate" to="VCloudsManager_SetAutoupdate">
        <Signature>(IntPtr, Boolean) : Void</Signature>
      </Method>
      <Method from="VCloudsManager_GetAutoupdate" to="VCloudsManager_GetAutoupdate">
        <Signature>(IntPtr) : Boolean</Signature>
      </Method>
      <Method from="VCloudsManager_SetWindSpeed" to="VCloudsManager_SetWindSpeed">
        <Signature>(IntPtr, Single) : Void</Signature>
      </Method>
      <Method from="VCloudsManager_GetWindSpeed" to="VCloudsManager_GetWindSpeed">
        <Signature>(IntPtr) : Single</Signature>
      </Method>
      <Method from="Create" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Update" to="â">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="Remove" to="ì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_Height" to="ã">
        <Signature>() : Mogre.Vector2</Signature>
      </Method>
      <Method from="set_Height" to="ý">
        <Signature>(Mogre.Vector2) : Void</Signature>
      </Method>
      <Method from="get_AutoUpdate" to="ò">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_AutoUpdate" to="å">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_WindSpeed" to="æ">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_WindSpeed" to="é">
        <Signature>(Single) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.LevelView" to="êê">
      <Field from="C_AD_BASE_X" to="è" />
      <Field from="C_AD_Z_DIST" to="â" />
      <Field from="C_AD_X_DIST" to="ì" />
      <Field from="C_AD_Y_DIST" to="ã" />
      <Field from="C_AD_SIZE" to="ý" />
      <Field from="C_AD_DYNAMIC_ADS_COUNT" to="ò" />
      <Field from="oceanSize" to="å" />
      <Field from="C_AD_MAX_DISPLAY_TIMES" to="æ" />
      <Field from="cameraIndexBeforeHangaring" to="é" />
      <Field from="currentCameraHolderIndex" to="ë" />
      <Field from="cameraHolders" to="í" />
      <Field from="tileWidth" to="ê" />
      <Field from="propCounter" to="î" />
      <Field from="isNightScene" to="ä" />
      <Field from="modelToViewAdjust" to="ó" />
      <Field from="tempTileViews" to="õ" />
      <Field from="availableSplashNodesPool" to="ñ" />
      <Field from="usedSplashNodesPool" to="ö" />
      <Field from="level" to="ù" />
      <Field from="planeViews" to="ï" />
      <Field from="soldierViews" to="ú" />
      <Field from="dyingSoldierViews" to="ü" />
      <Field from="ammunitionViews" to="ç" />
      <Field from="tileViews" to="û" />
      <Field from="compositeModelViews" to="ÿ" />
      <Field from="dynamicAds" to="ô" />
      <Field from="carrierView" to="âè" />
      <Field from="backgroundViews" to="ââ" />
      <Field from="playerPlaneView" to="âì" />
      <Field from="framework" to="âã" />
      <Field from="sceneMgr" to="âý" />
      <Field from="minimapMgr" to="âò" />
      <Field from="controller" to="âå" />
      <Field from="defaultVisibilityMask" to="âæ" />
      <Field from="dynamicAdsTimer" to="âé" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.IFrameWork, Wof.Controller.IController) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_CurrentCameraHolderIndex" to="è">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_CurrentCameraHolder" to="â">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_CameraHolders" to="ì">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="get_TileWidth" to="ã">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_IsNightScene" to="ý">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_PropCounter" to="ò">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="get_ModelToViewAdjust" to="å">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="Destroy" to="æ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="InitSplashPool" to="é">
        <Signature>(Int32) : Void</Signature>
      </Method>
      <Method from="getSplashNode" to="ë">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="freeSplashNode" to="í">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_SceneMgr" to="ê">
        <Signature>() : Mogre.SceneManager</Signature>
      </Method>
      <Method from="get_MinimapMgr" to="î">
        <Signature>() : Mogre.SceneManager</Signature>
      </Method>
      <Method from="SetVisible" to="ä">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="FindPlaneView" to="ó">
        <Signature>(Wof.Model.Level.Planes.Plane) : Wof.View.PlaneView</Signature>
      </Method>
      <Method from="FindTileView" to="õ">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Wof.View.TileViews.TileView</Signature>
      </Method>
      <Method from="FindShipView" to="ñ">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Wof.View.ShipView</Signature>
      </Method>
      <Method from="OnRegisterBackgroundDynamicAd" to="ö">
        <Signature>(Wof.Controller.AdAction.AdManager.Ad) : Void</Signature>
      </Method>
      <Method from="OnRegisterTile" to="ù">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnRegisterSoldier" to="ï">
        <Signature>(Wof.Model.Level.Infantry.Soldier, Wof.Model.Level.MissionType) : Void</Signature>
      </Method>
      <Method from="FindSoldierViewIndex" to="ú">
        <Signature>(Wof.Model.Level.Infantry.Soldier) : Int32</Signature>
      </Method>
      <Method from="OnUnregisterSoldier" to="ü">
        <Signature>(Wof.Model.Level.Infantry.Soldier) : Void</Signature>
      </Method>
      <Method from="OnSoldierPrepareToFire" to="ç">
        <Signature>(Wof.Model.Level.Infantry.Soldier, Single) : Void</Signature>
      </Method>
      <Method from="OnSoldierEndPrepareToFire" to="û">
        <Signature>(Wof.Model.Level.Infantry.Soldier) : Void</Signature>
      </Method>
      <Method from="OnKillSoldier" to="ÿ">
        <Signature>(Wof.Model.Level.Infantry.Soldier, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from="OnRegisterAmmunition" to="ô">
        <Signature>(Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="OnLoopEnemyPlaneEngineSound" to="âè">
        <Signature>(Wof.Model.Level.Planes.EnemyPlaneBase) : Void</Signature>
      </Method>
      <Method from="OnLoopEnemyPlaneEngineSounds" to="ââ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnStopPlayingEnemyPlaneEngineSound" to="âì">
        <Signature>(Wof.Model.Level.Planes.EnemyPlaneBase) : Void</Signature>
      </Method>
      <Method from="OnStopPlayingEnemyPlaneEngineSounds" to="âã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnRegisterPlane" to="âý">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnUnregisterPlane" to="âò">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="DoFlakExplosion" to="âå">
        <Signature>(Wof.Model.Level.Weapon.FlakBullet) : Wof.View.NodeAnimation.NodeAnimation</Signature>
      </Method>
      <Method from="OnBunkerFire" to="âæ">
        <Signature>(Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.BunkerTile, Wof.Model.Level.Planes.Plane, Boolean) : Void</Signature>
      </Method>
      <Method from="FindAmmunitionViewIndex" to="âé">
        <Signature>(Wof.Model.Level.Weapon.Ammunition) : Int32</Signature>
      </Method>
      <Method from="SmokeUpVector" to="âë">
        <Signature>(Wof.View.PlaneView) : Mogre.Vector3</Signature>
      </Method>
      <Method from="OnPlaneDestroyed" to="âí">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnPlaneCrashed" to="âê">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Model.Level.LevelTiles.TileKind) : Void</Signature>
      </Method>
      <Method from="OnUnregisterRocket" to="âî">
        <Signature>(Wof.Model.Level.Weapon.Rocket) : Void</Signature>
      </Method>
      <Method from="OnUnregisterTorpedo" to="âä">
        <Signature>(Wof.Model.Level.Weapon.Torpedo) : Void</Signature>
      </Method>
      <Method from="OnUnregisterFlakBullet" to="âó">
        <Signature>(Wof.Model.Level.Weapon.FlakBullet) : Void</Signature>
      </Method>
      <Method from="OnUnregisterBunkerShellBullet" to="âõ">
        <Signature>(Wof.Model.Level.Weapon.BunkerShellBullet) : Void</Signature>
      </Method>
      <Method from="OnUnregisterGunBullet" to="âñ">
        <Signature>(Wof.Model.Level.Weapon.GunBullet) : Void</Signature>
      </Method>
      <Method from="OnEnemyPlaneBombed" to="âö">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="OnTorpedoHitGroundOrWater" to="âù">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Model.Level.Weapon.Torpedo, Single, Single) : Void</Signature>
      </Method>
      <Method from="OnAmmunitionExplode" to="âï">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnAmmunitionVanish" to="âú">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="OnAmmunitionExplode" to="âü">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="onShakeFinish" to="âç">
        <Signature>(Object) : Void</Signature>
      </Method>
      <Method from="onAmmunitionExplodeFinish" to="âû">
        <Signature>(Object) : Void</Signature>
      </Method>
      <Method from="OnTileRestored" to="âÿ">
        <Signature>(Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.BunkerTile) : Void</Signature>
      </Method>
      <Method from="onUnregisterShip" to="âô">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.BeginShipTile) : Void</Signature>
      </Method>
      <Method from="OnShipDamaged" to="ìè">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.ShipTile, Wof.Model.Level.LevelTiles.Watercraft.ShipState) : Void</Signature>
      </Method>
      <Method from="OnShipSunk" to="ìâ">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.BeginShipTile) : Void</Signature>
      </Method>
      <Method from="OnShipBeginSinking" to="ìì">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.ShipTile) : Void</Signature>
      </Method>
      <Method from="OnShipSinking" to="ìã">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.ShipTile) : Void</Signature>
      </Method>
      <Method from="OnShipBeginSubmerging" to="ìý">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipBeginEmerging" to="ìò">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipSubmerging" to="ìå">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipEmerging" to="ìæ">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipEmerged" to="ìé">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipSubmerged" to="ìë">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnFortressHit" to="ìí">
        <Signature>(Wof.Model.Level.LevelTiles.IslandTiles.EnemyInstallationTiles.FortressBunkerTile, Wof.Model.Level.Weapon.Ammunition) : Void</Signature>
      </Method>
      <Method from="OnTileDestroyed" to="ìê">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnWarCry" to="ìî">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnPlanePass" to="ìä">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnFireGun" to="ìó">
        <Signature>(Wof.Model.Level.Weapon.IObject2D) : Void</Signature>
      </Method>
      <Method from="OnGunHitPlane" to="ìõ">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnBeginSpin" to="ìñ">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnPrepareChangeDirection" to="ìö">
        <Signature>(Wof.Model.Level.Direction, Wof.Model.Level.Planes.Plane, Wof.Model.Level.Planes.TurnType) : Void</Signature>
      </Method>
      <Method from="UpdatePlaneView" to="ìù">
        <Signature>(Wof.View.PlaneView, Single) : Void</Signature>
      </Method>
      <Method from="NextLife" to="ìï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnRegisterBoundingQuadrangle" to="ìú">
        <Signature>(Wof.Model.Level.Common.IRenderableQuadrangles, Mogre.SceneManager) : Void</Signature>
      </Method>
      <Method from="OnUnregisterBoundingQuadrangle" to="ìü">
        <Signature>(Wof.Model.Level.Common.IRenderableQuadrangles) : Void</Signature>
      </Method>
      <Method from="OnFrameEnded" to="ìç">
        <Signature>(Mogre.FrameEvent) : Void</Signature>
      </Method>
      <Method from="HandleDynamicAds" to="ìû">
        <Signature>(Mogre.FrameEvent) : Void</Signature>
      </Method>
      <Method from="OnFrameStarted" to="ìÿ">
        <Signature>(Mogre.FrameEvent) : Void</Signature>
      </Method>
      <Method from="OnStartHangaring" to="ìô">
        <Signature>(Int32, Boolean) : Void</Signature>
      </Method>
      <Method from="IsHangaringFinished" to="ãè">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="OnHangaringFinished" to="ãâ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnRegisterLevel" to="ãì">
        <Signature>(Wof.Model.Level.Level) : Void</Signature>
      </Method>
      <Method from="OnEndLoadingLevel" to="ãã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="InitOceanSurface" to="ãý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="InitSkies" to="ãò">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="InitDawnLight" to="ãå">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="InitLight" to="ãæ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="InitNightLight" to="ãé">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnToggleGear" to="ãë">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnGunHit" to="ãí">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Single, Single) : Void</Signature>
      </Method>
      <Method from="onFreeSplashNode" to="ãê">
        <Signature>(Object) : Void</Signature>
      </Method>
      <Method from="OnCatchPlane" to="ãî">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Model.Level.LevelTiles.AircraftCarrierTiles.EndAircraftCarrierTile) : Void</Signature>
      </Method>
      <Method from="OnReleasePlane" to="ãä">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Model.Level.LevelTiles.AircraftCarrierTiles.EndAircraftCarrierTile) : Void</Signature>
      </Method>
      <Method from="OnPlaneEnterRestoreAmmunitionTile" to="ãó">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnPlaneLeaveRestoreAmmunitionTile" to="ãõ">
        <Signature>(Wof.Model.Level.Planes.Plane) : Void</Signature>
      </Method>
      <Method from="OnTakeOff" to="ãñ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnTouchDown" to="ãö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="BuildCameraHolders" to="ãù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnChangeCamera" to="ãï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnChangeCamera" to="ãú">
        <Signature>(Mogre.SceneNode) : Int32</Signature>
      </Method>
      <Method from="OnChangeCamera" to="ãü">
        <Signature>(Int32) : Int32</Signature>
      </Method>
      <Method from="OnResetCamera" to="ãç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnReCreateHydrax" to="ãû">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.LevelView.&lt;&gt;c__DisplayClass1" to="êê.&lt;&gt;c__DisplayClass1" />
    <Type from="Wof.View.LevelView.&lt;&gt;c__DisplayClass4" to="êê.&lt;&gt;c__DisplayClass4" />
    <Type from="Wof.View.LevelView.&lt;&gt;c__DisplayClass7" to="êê.&lt;&gt;c__DisplayClass7" />
    <Type from="Wof.View.NodeAnimation.NodeAnimation" to="êî">
      <Field from="delta" to="è" />
      <Field from="percent" to="â" />
      <Field from="percentAfter" to="ì" />
      <Field from="lastAmplitude" to="ã" />
      <Field from="amplitudeAtEnd" to="ý" />
      <Field from="amplitudeAtStart" to="ò" />
      <Field from="startNewLoop" to="å" />
      <Field from="onFinish" to="æ" />
      <Field from="onStart" to="é" />
      <Field from="onFinishInfo" to="ë" />
      <Field from="onStartInfo" to="í" />
      <Field from="nextAnimation" to="ê" />
      <Field from="nextAnimationPercentTime" to="î" />
      <Field from="repeatNextAnimation" to="ä" />
      <Field from="nextAnimationStarted" to="ó" />
      <Field from="cycleLength" to="õ" />
      <Field from="nodes" to="ñ" />
      <Field from="name" to="ö" />
      <Field from="duration" to="ù" />
      <Field from="timeScale" to="ï" />
      <Field from="animationTime" to="ú" />
      <Field from="timeSinceLastFrame" to="ü" />
      <Field from="enabled" to="ç" />
      <Field from="looped" to="û" />
      <Method from=".ctor" to=".ctor">
        <Signature>(System.Collections.Generic.List`1, Single, String, Mogre.Radian) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Single, String, Mogre.Radian) : Void</Signature>
      </Method>
      <Method from="get_CycleLength" to="è">
        <Signature>() : Mogre.Radian</Signature>
      </Method>
      <Method from="get_Nodes" to="â">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="set_Nodes" to="ì">
        <Signature>(System.Collections.Generic.List`1) : Void</Signature>
      </Method>
      <Method from="get_FirstNode" to="ã">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_Name" to="ý">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_Duration" to="ò">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_Duration" to="å">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_TimeScale" to="æ">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_TimeScale" to="é">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_AnimationTime" to="ë">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_TimeSinceLastFrame" to="í">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Enabled" to="ê">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_Enabled" to="î">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_Looped" to="ä">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_Looped" to="ó">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_Ended" to="õ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="getPercent" to="ñ">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="animate" to="îñ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="updateTime" to="îö">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="rewindToRandom" to="ö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="rewind" to="ù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="rewind" to="ï">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="startNextAnimation" to="ú">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="animationFunction" to="îù">
        <Signature>(Single) : Single</Signature>
      </Method>
      <Method from="Destroy" to="ü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="frameInit" to="ç">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.NodeAnimation.NodeAnimation.NotityFinish" to="êî.êä">
      <Method from=".ctor" to=".ctor">
        <Signature>(Object, IntPtr) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.NodeAnimation.NodeAnimation.NotityStart" to="êî.êó">
      <Method from=".ctor" to=".ctor">
        <Signature>(Object, IntPtr) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.NodeAnimation.RotateNodeAnimation" to="êõ">
      <Field from="maxAngle" to="è" />
      <Field from="axis" to="â" />
      <Field from="returnToInitialOrientation" to="ì" />
      <Field from="initialOrientation" to="ã" />
      <Method from=".ctor" to=".ctor">
        <Signature>(System.Collections.Generic.List`1, Single, Mogre.Degree, Mogre.Radian, Mogre.Vector3, String) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Single, Mogre.Degree, Mogre.Radian, Mogre.Vector3, String) : Void</Signature>
      </Method>
      <Method from="get_MaxAngle" to="è">
        <Signature>() : Mogre.Degree</Signature>
      </Method>
      <Method from="set_MaxAngle" to="â">
        <Signature>(Mogre.Degree) : Void</Signature>
      </Method>
      <Method from="get_Axis" to="ì">
        <Signature>() : Mogre.Vector3</Signature>
      </Method>
      <Method from="get_ReturnToInitialOrientation" to="ã">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_ReturnToInitialOrientation" to="ý">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="updateTime" to="îö">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="animate" to="îñ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.NodeAnimation.Acc2RotateNodeAnimation" to="êñ">
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Single, Mogre.Degree, Mogre.Radian, Mogre.Vector3, String) : Void</Signature>
      </Method>
      <Method from="animationFunction" to="îù">
        <Signature>(Single) : Single</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.NodeAnimation.MoveNodeAnimation" to="êö">
      <Field from="maxMove" to="è" />
      <Field from="axis" to="â" />
      <Field from="initialOrientation" to="ì" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Single, Mogre.Radian, Mogre.Vector3, String) : Void</Signature>
      </Method>
      <Method from="get_MaxMove" to="è">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Axis" to="â">
        <Signature>() : Mogre.Vector3</Signature>
      </Method>
      <Method from="animate" to="îñ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.NodeAnimation.ConstMoveNodeAnimation" to="êù">
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Single, Single, Mogre.Vector3, String) : Void</Signature>
      </Method>
      <Method from="animationFunction" to="îù">
        <Signature>(Single) : Single</Signature>
      </Method>
      <Method from="SwapDirection" to="è">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.NodeAnimation.AccRotateNodeAnimation" to="êï">
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Single, Mogre.Degree, Mogre.Radian, Mogre.Vector3, String) : Void</Signature>
      </Method>
      <Method from="animationFunction" to="îù">
        <Signature>(Single) : Single</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.NodeAnimation.ShakeNodeAnimation" to="êú">
      <Field from="initialPosition" to="è" />
      <Field from="maxPower" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>(System.Collections.Generic.List`1, Single, Mogre.Radian, Single, String) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Single, Mogre.Radian, Single, String) : Void</Signature>
      </Method>
      <Method from="updateTime" to="îö">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="animationFunction" to="îù">
        <Signature>(Single) : Single</Signature>
      </Method>
      <Method from="animate" to="îñ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.NodeAnimation.HalfSinRotateNodeAnimation" to="êü">
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Single, Mogre.Degree, Mogre.Radian, Mogre.Vector3, String, Boolean) : Void</Signature>
      </Method>
      <Method from="animationFunction" to="îù">
        <Signature>(Single) : Single</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.NodeAnimation.LightAttenuationAnimation" to="êç">
      <Field from="light" to="è" />
      <Field from="multiplier" to="â" />
      <Field from="baseDiffuseColour" to="ì" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.Light, Single, Single, Mogre.Radian, String) : Void</Signature>
      </Method>
      <Method from="get_Light" to="è">
        <Signature>() : Mogre.Light</Signature>
      </Method>
      <Method from="set_Light" to="â">
        <Signature>(Mogre.Light) : Void</Signature>
      </Method>
      <Method from="get_Multiplier" to="ì">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_Multiplier" to="ã">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_BaseDiffuseColour" to="ý">
        <Signature>() : Mogre.ColourValue</Signature>
      </Method>
      <Method from="set_BaseDiffuseColour" to="ò">
        <Signature>(Mogre.ColourValue) : Void</Signature>
      </Method>
      <Method from="animate" to="îñ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.NodeAnimation.VisibilityNodeAnimation" to="êû">
      <Field from="lastInitTime" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Single, String, Wof.View.NodeAnimation.VisibilityNodeAnimation.VisibilityType, Wof.View.NodeAnimation.VisibilityNodeAnimation.VisibilityType) : Void</Signature>
      </Method>
      <Method from="get_LastInitTime" to="è">
        <Signature>() : Int32</Signature>
      </Method>
      <Method from="SetVisible" to="â">
        <Signature>(Object) : Void</Signature>
      </Method>
      <Method from="SetVisible" to="ì">
        <Signature>(Wof.View.NodeAnimation.VisibilityNodeAnimation.VisibilityType) : Void</Signature>
      </Method>
      <Method from="updateTime" to="îö">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="animationFunction" to="îù">
        <Signature>(Single) : Single</Signature>
      </Method>
      <Method from="animate" to="îñ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.NodeAnimation.VisibilityNodeAnimation.VisibilityType" to="êû.êÿ">
      <Field from="VISIBLE" to="è" />
      <Field from="HIDDEN" to="â" />
      <Field from="NOCHANGE" to="ì" />
    </Type>
    <Type from="Wof.View.NodeAnimation.EffectTextureAnimation" to="êô">
      <Field from="state" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Mogre.TextureUnitState, Single, String, Wof.View.NodeAnimation.VisibilityNodeAnimation.VisibilityType, Wof.View.NodeAnimation.VisibilityNodeAnimation.VisibilityType) : Void</Signature>
      </Method>
      <Method from="animationFunction" to="îù">
        <Signature>(Single) : Single</Signature>
      </Method>
      <Method from="animate" to="îñ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.NodeAnimation.SinLightAttenuationAnimation" to="îè">
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.Light, Single, Single, Mogre.Radian, String) : Void</Signature>
      </Method>
      <Method from="animationFunction" to="îù">
        <Signature>(Single) : Single</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.PlaneView" to="îâ">
      <Field from="frameWork" to="è" />
      <Field from="planePassSound" to="â" />
      <Field from="torpedoHolder" to="ì" />
      <Field from="lastWaterTrailTime" to="ã" />
      <Field from="planeEntity" to="ý" />
      <Field from="sceneMgr" to="ò" />
      <Field from="plane" to="å" />
      <Field from="isSmokingSlightly" to="æ" />
      <Field from="isSmokingHeavily" to="é" />
      <Field from="animationState" to="ë" />
      <Field from="parentNode" to="í" />
      <Field from="planeNode" to="ê" />
      <Field from="innerSteeringNode" to="î" />
      <Field from="outerSteeringNode" to="ä" />
      <Field from="outerNode" to="ó" />
      <Field from="innerNode" to="õ" />
      <Field from="idleNode" to="ñ" />
      <Field from="bladeNode" to="ö" />
      <Field from="bladeNodeL" to="ù" />
      <Field from="bladeNodeR" to="ï" />
      <Field from="lWingNode" to="ú" />
      <Field from="rWingNode" to="ü" />
      <Field from="lWheelNode" to="ç" />
      <Field from="rWheelNode" to="û" />
      <Field from="rearWheelNode" to="ÿ" />
      <Field from="cameraHolders" to="ô" />
      <Field from="hangaringCameraHolder" to="âè" />
      <Field from="lWheelInnerNode" to="ââ" />
      <Field from="rWheelInnerNode" to="âì" />
      <Field from="rearWheelInnerNode" to="âã" />
      <Field from="name" to="âý" />
      <Field from="animationMgr" to="âò" />
      <Field from="minimapItem" to="âå" />
      <Field from="crossHairEffectNodeAnimation" to="âæ" />
      <Field from="isDestroyed" to="âé" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Controller.IFrameWork, Mogre.SceneNode, String) : Void</Signature>
      </Method>
      <Method from="get_IsReadyForLastWaterTrail" to="îò">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_LastWaterTrailTime" to="îå">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_LastWaterTrailTime" to="îæ">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_PlaneEntity" to="è">
        <Signature>() : Mogre.Entity</Signature>
      </Method>
      <Method from="get_Plane" to="â">
        <Signature>() : Wof.Model.Level.Planes.Plane</Signature>
      </Method>
      <Method from="get_IsSmokingSlightly" to="ì">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_IsSmokingSlightly" to="ã">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_IsSmokingHeavily" to="ý">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_IsSmokingHeavily" to="ò">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_AnimationState" to="å">
        <Signature>() : Mogre.AnimationState</Signature>
      </Method>
      <Method from="GetMainMeshName" to="æ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_CameraHolders" to="é">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="get_RearWheelNode" to="ë">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_RWheelNode" to="í">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_LWheelNode" to="ê">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_LWingNode" to="î">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_RWingNode" to="ä">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_RearWheelInnerNode" to="ó">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_RWheelInnerNode" to="õ">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_LWheelInnerNode" to="ñ">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_PlaneNode" to="ö">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_ParentNode" to="ù">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_BladeNode" to="ï">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_BladeNodeL" to="ú">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_BladeNodeR" to="ü">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_InnerNode" to="ç">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_OuterNode" to="û">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_IdleNode" to="ÿ">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_InnerSteeringNode" to="ô">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_OuterSteeringNode" to="âè">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_Name" to="ââ">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_AnimationMgr" to="âì">
        <Signature>() : Wof.View.NodeAnimation.PlaneNodeAnimationManager</Signature>
      </Method>
      <Method from="get_MinimapItem" to="âã">
        <Signature>() : Wof.View.MinimapItem</Signature>
      </Method>
      <Method from="get_HangaringCameraHolder" to="âý">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="InitLight" to="âò">
        <Signature>(Mogre.SceneNode, Mogre.ColourValue, Mogre.Vector3, Mogre.Vector2) : Void</Signature>
      </Method>
      <Method from="SetBladeVisibility" to="îï">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="ShowTorpedo" to="îú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="HideTorpedo" to="îü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ShowCrossHair" to="âå">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="HideCrossHair" to="âæ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="DestroyCrossHair" to="âé">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="UpdateCrossHairVisibility" to="âë">
        <Signature>(Mogre.Camera) : Void</Signature>
      </Method>
      <Method from="ResetWheels" to="âí">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Destroy" to="îç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Finalize" to="îû">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="EnableNightLights" to="îÿ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initOnScene" to="îô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initWheels" to="äè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initBlade" to="äâ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initAnimationManager" to="âê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initSmokeSystems" to="âî">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="refreshPosition" to="äì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SmashPaint" to="äã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Smash" to="äý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="RestorePaint" to="äò">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Restore" to="äå">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayPlanePass" to="âä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="rewind" to="êô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="enableAnimation" to="îè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="disableAnimation" to="îâ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetCameraHolders" to="îí">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="ResetCameraHolders" to="îê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnFireGun" to="äæ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnFireGunDo" to="âó">
        <Signature>(Mogre.Vector3, Mogre.Vector3, Mogre.Vector2, Boolean, Single) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.PlayerPlaneView" to="îì">
      <Field from="planeCounter" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Controller.IFrameWork, Mogre.SceneNode) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetCrossHairCameraIndexes" to="äé">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="initOnScene" to="îô">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.P47PlaneView" to="îã">
      <Field from="blade" to="è" />
      <Field from="airscrew" to="â" />
      <Field from="airscrewL" to="ì" />
      <Field from="airscrewR" to="ã" />
      <Field from="hasSmokeTrail" to="ý" />
      <Field from="bodyMaterialName" to="ò" />
      <Field from="destroyedBodyMaterialName" to="å" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Controller.IFrameWork, Mogre.SceneNode) : Void</Signature>
      </Method>
      <Method from="get_HasSmokeTrail" to="è">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_ShouldHaveSmokeTrail" to="â">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="GetMainMeshName" to="ì">
        <Signature>() : String</Signature>
      </Method>
      <Method from="StopSmokeTrails" to="ã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StartSmokeTrails" to="ý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initBlade" to="äâ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SwitchToFastEngine" to="äë">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SwitchToSlowEngine" to="äí">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetBladeVisibility" to="îï">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="ShowTorpedo" to="îú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="HideTorpedo" to="îü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initWheels" to="äè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ResetCameraHolders" to="îê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SmashPaint" to="äã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="RestorePaint" to="äò">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initOnScene" to="îô">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.B25PlaneView" to="îý">
      <Field from="bladeL" to="è" />
      <Field from="bladeR" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Controller.IFrameWork, Mogre.SceneNode) : Void</Signature>
      </Method>
      <Method from="GetCrossHairCameraIndexes" to="äé">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="initWheels" to="äè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ResetCameraHolders" to="îê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetBladeVisibility" to="îï">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="SwitchToSlowEngine" to="äí">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SwitchToFastEngine" to="äë">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initBlade" to="äâ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetMainMeshName" to="è">
        <Signature>() : String</Signature>
      </Method>
      <Method from="initOnScene" to="îô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnFireGun" to="äæ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.EnemyPlaneViewBase" to="îò">
      <Field from="engineSound" to="è" />
      <Field from="warCrySound" to="â" />
      <Field from="warCrySound2" to="ì" />
      <Field from="gunSound" to="ã" />
      <Field from="random" to="ý" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Controller.IFrameWork, Mogre.SceneNode, String) : Void</Signature>
      </Method>
      <Method from="PlayGunSound" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StopGunSound" to="â">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PlayWarcry" to="ì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Destroy" to="îç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="LoopEngineSound" to="ã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StopEngineSound" to="ý">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.EnemyBomberView" to="îå">
      <Field from="airscrewL" to="è" />
      <Field from="airscrewR" to="â" />
      <Field from="enemyBomberCounter" to="ì" />
      <Field from="bladeL" to="ã" />
      <Field from="bladeR" to="ý" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Controller.IFrameWork, Mogre.SceneNode) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetMainMeshName" to="è">
        <Signature>() : String</Signature>
      </Method>
      <Method from="Destroy" to="îç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ResetCameraHolders" to="îê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initBlade" to="äâ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initWheels" to="äè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetBladeVisibility" to="îï">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="ShowTorpedo" to="îú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="HideTorpedo" to="îü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnFireGun" to="äæ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initOnScene" to="îô">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.EnemyFighterView" to="îæ">
      <Field from="enemyPlaneCounter" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Controller.IFrameWork, Mogre.SceneNode) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetMainMeshName" to="è">
        <Signature>() : String</Signature>
      </Method>
      <Method from="ResetCameraHolders" to="îê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initBlade" to="äâ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initWheels" to="äè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="SetBladeVisibility" to="îï">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="ShowTorpedo" to="îú">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="HideTorpedo" to="îü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initOnScene" to="îô">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.MinimapItem" to="îé">
      <Field from="minimapMgr" to="è" />
      <Field from="realObjectNode" to="â" />
      <Field from="entity" to="ì" />
      <Field from="minimapNode" to="ã" />
      <Field from="meshName" to="ý" />
      <Field from="isVisible" to="ò" />
      <Field from="sizeEnity" to="å" />
      <Field from="scaleOverride" to="æ" />
      <Field from="minimapObjectsDepth" to="é" />
      <Field from="colourType" to="ë" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Mogre.SceneManager, String, Mogre.Entity, Mogre.Vector2) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Mogre.SceneManager, String, Mogre.ColourValue, Wof.View.MinimapItem.ColourType, Mogre.Entity, Mogre.Vector2) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Mogre.SceneManager, String, Mogre.ColourValue, Mogre.Vector2) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Mogre.SceneManager, String, String, Mogre.Entity) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Mogre.SceneManager, String, String, Mogre.Vector2) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Mogre.SceneManager, String, Mogre.ColourValue, Mogre.Entity) : Void</Signature>
      </Method>
      <Method from="get_MinimapMgr" to="è">
        <Signature>() : Mogre.SceneManager</Signature>
      </Method>
      <Method from="get_RealObjectNode" to="â">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_Entity" to="ì">
        <Signature>() : Mogre.Entity</Signature>
      </Method>
      <Method from="get_MinimapNode" to="ã">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_MeshName" to="ý">
        <Signature>() : String</Signature>
      </Method>
      <Method from="get_IsVisible" to="ò">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_SizeEnity" to="å">
        <Signature>(Mogre.Entity) : Void</Signature>
      </Method>
      <Method from="get_SizeEnity" to="æ">
        <Signature>() : Mogre.Entity</Signature>
      </Method>
      <Method from="set_ScaleOverride" to="é">
        <Signature>(Mogre.Vector2) : Void</Signature>
      </Method>
      <Method from="get_ScaleOverride" to="ë">
        <Signature>() : Mogre.Vector2</Signature>
      </Method>
      <Method from="set_MinimapObjectsDepth" to="í">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_MinimapObjectsDepth" to="ê">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_Colour" to="î">
        <Signature>(Mogre.ColourValue) : Void</Signature>
      </Method>
      <Method from="set_ColourTypeInstance" to="ä">
        <Signature>(Wof.View.MinimapItem.ColourType) : Void</Signature>
      </Method>
      <Method from="get_ColourTypeInstance" to="ó">
        <Signature>() : Wof.View.MinimapItem.ColourType</Signature>
      </Method>
      <Method from="Show" to="õ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Hide" to="ñ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="InitOnScene" to="ö">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Refresh" to="ù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Dispose" to="äê">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.MinimapItem.ColourType" to="îé.îë">
      <Field from="SOLID" to="è" />
      <Field from="SHADED" to="â" />
    </Type>
    <Type from="Wof.View.NodeAnimation.ConstRotateNodeAnimation" to="îí">
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Mogre.Degree, Mogre.Vector3, String) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(System.Collections.Generic.List`1, Mogre.Degree, Mogre.Vector3, String) : Void</Signature>
      </Method>
      <Method from="animationFunction" to="îù">
        <Signature>(Single) : Single</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.NodeAnimation.DummyNodeAnimation" to="îê">
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Single, String) : Void</Signature>
      </Method>
      <Method from="animate" to="îñ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="animationFunction" to="îù">
        <Signature>(Single) : Single</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.NodeAnimation.GaussRotateNodeAnimation" to="îî">
      <Field from="stdDeviation" to="è" />
      <Field from="gaussAtZero" to="â" />
      <Field from="minValueThreshold" to="ì" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Single, Mogre.Degree, Mogre.Vector3, String) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Single, Mogre.Degree, Single, Mogre.Vector3, String) : Void</Signature>
      </Method>
      <Method from="get_StdDeviation" to="è">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_GaussAtZero" to="â">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="animationFunction" to="îù">
        <Signature>(Single) : Single</Signature>
      </Method>
      <Method from="getCycleLength" to="ì">
        <Signature>() : Mogre.Radian</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.NodeAnimation.NodeAnimationManager" to="îä">
      <Field from="animations" to="è" />
      <Field from="currentAnimation" to="â" />
      <Field from="currentName" to="ì" />
      <Field from="currentTime" to="ã" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="get_CurrentAnimation" to="è">
        <Signature>() : Wof.View.NodeAnimation.NodeAnimation</Signature>
      </Method>
      <Method from="get_Item" to="â">
        <Signature>(String) : Wof.View.NodeAnimation.NodeAnimation</Signature>
      </Method>
      <Method from="set_Item" to="ì">
        <Signature>(String, Wof.View.NodeAnimation.NodeAnimation) : Void</Signature>
      </Method>
      <Method from="get_Item" to="ã">
        <Signature>(System.Enum) : Wof.View.NodeAnimation.NodeAnimation</Signature>
      </Method>
      <Method from="set_Item" to="ý">
        <Signature>(System.Enum, Wof.View.NodeAnimation.NodeAnimation) : Void</Signature>
      </Method>
      <Method from="System.Collections.IEnumerable.GetEnumerator" to="äî">
        <Signature>() : System.Collections.IEnumerator</Signature>
      </Method>
      <Method from="get_CurrentTime" to="ò">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Ended" to="å">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_Looped" to="æ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_Looped" to="é">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_Percent" to="ë">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="get_Enabled" to="í">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_Enabled" to="ê">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_TimeScale" to="î">
        <Signature>() : Single</Signature>
      </Method>
      <Method from="set_TimeScale" to="ä">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="getNameByType" to="ää">
        <Signature>(System.Enum) : String</Signature>
      </Method>
      <Method from="isCurrentAnimation" to="ó">
        <Signature>(System.Enum) : Boolean</Signature>
      </Method>
      <Method from="register" to="õ">
        <Signature>(Wof.View.NodeAnimation.NodeAnimation) : Void</Signature>
      </Method>
      <Method from="unregister" to="ñ">
        <Signature>(String) : Void</Signature>
      </Method>
      <Method from="unregister" to="ö">
        <Signature>(Wof.View.NodeAnimation.NodeAnimation) : Void</Signature>
      </Method>
      <Method from="unregister" to="ù">
        <Signature>(System.Enum) : Void</Signature>
      </Method>
      <Method from="isRegistered" to="ï">
        <Signature>(String) : Boolean</Signature>
      </Method>
      <Method from="isRegistered" to="ú">
        <Signature>(Wof.View.NodeAnimation.NodeAnimation) : Boolean</Signature>
      </Method>
      <Method from="isRegistered" to="ü">
        <Signature>(System.Enum) : Boolean</Signature>
      </Method>
      <Method from="switchTo" to="ç">
        <Signature>(String) : Boolean</Signature>
      </Method>
      <Method from="switchTo" to="û">
        <Signature>(System.Enum) : Boolean</Signature>
      </Method>
      <Method from="updateTime" to="ÿ">
        <Signature>(Single, String) : Boolean</Signature>
      </Method>
      <Method from="updateTime" to="ô">
        <Signature>(Single, System.Enum) : Boolean</Signature>
      </Method>
      <Method from="updateTimeAll" to="âè">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="animate" to="ââ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="animate" to="âì">
        <Signature>(String) : Boolean</Signature>
      </Method>
      <Method from="animateAll" to="âã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="rewind" to="âý">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="rewind" to="âò">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="rewindAll" to="âå">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="rewindAll" to="âæ">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="enableAll" to="âé">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="disableAll" to="âë">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.NodeAnimation.PlaneNodeAnimationManager" to="îó">
      <Field from="planeView" to="è" />
      <Field from="prepareToChangeDirection" to="â" />
      <Field from="prepareToChangeDirectionOnCarrier" to="ì" />
      <Field from="prepareToSpin" to="ã" />
      <Field from="queuedOnFinish" to="ý" />
      <Field from="queuedOnFinishInfo" to="ò" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Single, Wof.View.PlaneView) : Void</Signature>
      </Method>
      <Method from="set_IdleMaxAngle" to="è">
        <Signature>(Mogre.Degree) : Void</Signature>
      </Method>
      <Method from="get_IdleMaxAngle" to="â">
        <Signature>() : Mogre.Degree</Signature>
      </Method>
      <Method from="get_CanStopAnimation" to="ì">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_PrepareToChangeDirection" to="ã">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_PrepareToChangeDirection" to="ý">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_PrepareToChangeDirectionOnCarrier" to="ò">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_PrepareToChangeDirectionOnCarrier" to="å">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="get_PrepareToSpin" to="æ">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="set_PrepareToSpin" to="é">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="enableBlade" to="ë">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="disableBlade" to="í">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="switchToIdle" to="ê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="disableIdle" to="î">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="changeBladeSpeed" to="ä">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="switchToIdle" to="ó">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="switchToTurn" to="õ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="switchToTurn" to="ñ">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="switchToTurn" to="ö">
        <Signature>(Boolean, Wof.View.NodeAnimation.NodeAnimation.NotityStart, Wof.View.NodeAnimation.NodeAnimation.NotityFinish) : Void</Signature>
      </Method>
      <Method from="switchToTurnOnCarrier" to="ù">
        <Signature>(Boolean, Wof.View.NodeAnimation.NodeAnimation.NotityStart, Wof.View.NodeAnimation.NodeAnimation.NotityFinish) : Void</Signature>
      </Method>
      <Method from="switchToDeathSpin" to="ï">
        <Signature>(Boolean, Wof.View.NodeAnimation.NodeAnimation.NotityStart, Wof.View.NodeAnimation.NodeAnimation.NotityFinish) : Void</Signature>
      </Method>
      <Method from="switchToSpin" to="ú">
        <Signature>(Boolean, Wof.View.NodeAnimation.NodeAnimation.NotityStart, Wof.View.NodeAnimation.NodeAnimation.NotityFinish, Object, Boolean) : Void</Signature>
      </Method>
      <Method from="switchToGearUpDown" to="ü">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="switchToGearUpDown" to="ç">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="switchToGearUpDown" to="û">
        <Signature>(Boolean, Wof.View.NodeAnimation.NodeAnimation.NotityStart, Wof.View.NodeAnimation.NodeAnimation.NotityFinish) : Void</Signature>
      </Method>
      <Method from="SetGearsVisible" to="ÿ">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="register" to="ô">
        <Signature>(Wof.View.NodeAnimation.PlaneNodeAnimationManager.AnimationType, Single) : Boolean</Signature>
      </Method>
      <Method from="OnFinishHalfSpin" to="âè">
        <Signature>(Object) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.NodeAnimation.PlaneNodeAnimationManager.AnimationType" to="îó.îõ" />
    <Type from="Wof.View.NodeAnimation.SinRotateNodeAnimation" to="îñ">
      <Method from=".ctor" to=".ctor">
        <Signature>(Mogre.SceneNode, Single, Mogre.Degree, Mogre.Radian, Mogre.Vector3, String) : Void</Signature>
      </Method>
      <Method from="animationFunction" to="îù">
        <Signature>(Single) : Single</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.F4UPlaneView" to="îö">
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.Planes.Plane, Wof.Controller.IFrameWork, Mogre.SceneNode) : Void</Signature>
      </Method>
      <Method from="initWheels" to="äè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="ResetCameraHolders" to="îê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetMainMeshName" to="è">
        <Signature>() : String</Signature>
      </Method>
      <Method from="initOnScene" to="îô">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.SoldierView" to="îù">
      <Field from="soldierCounter" to="è" />
      <Field from="soldierID" to="â" />
      <Field from="soldier" to="ì" />
      <Field from="sceneMgr" to="ã" />
      <Field from="framework" to="ý" />
      <Field from="soldierNode" to="ò" />
      <Field from="soldierModel" to="å" />
      <Field from="weapon" to="æ" />
      <Field from="animationState" to="é" />
      <Field from="runAnimationState" to="ë" />
      <Field from="die1AnimationState" to="í" />
      <Field from="die2AnimationState" to="ê" />
      <Field from="prepareToFireAnimationState" to="î" />
      <Field from="soldierAvailablePool" to="ä" />
      <Field from="soldierUsedPool" to="ó" />
      <Field from="minimapItem" to="õ" />
      <Field from="dieSound" to="ñ" />
      <Field from="prepareToFireSound" to="ö" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_Soldier" to="è">
        <Signature>() : Wof.Model.Level.Infantry.Soldier</Signature>
      </Method>
      <Method from="get_MinimapItem" to="â">
        <Signature>() : Wof.View.MinimapItem</Signature>
      </Method>
      <Method from="Dispose" to="äó">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="InitPool" to="ì">
        <Signature>(Int32, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="DestroyPool" to="ã">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GetInstance" to="ý">
        <Signature>(Wof.Model.Level.Infantry.Soldier) : Wof.View.SoldierView</Signature>
      </Method>
      <Method from="FreeInstance" to="ò">
        <Signature>(Wof.Model.Level.Infantry.Soldier, Boolean) : Void</Signature>
      </Method>
      <Method from="PlaySoldierDeathSound" to="å">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="preInitOnScene" to="æ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="showArrow" to="é">
        <Signature>(Wof.View.Effects.EffectsManager.EffectType) : Void</Signature>
      </Method>
      <Method from="hideArrow" to="ë">
        <Signature>(Wof.View.Effects.EffectsManager.EffectType) : Void</Signature>
      </Method>
      <Method from="postInitOnScene" to="äõ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="refreshPosition" to="í">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Bleed" to="ê">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="StopBlood" to="î">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Run" to="ä">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="PrepareToFire" to="ó">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="DieFromGun" to="õ">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="DieFromExplosion" to="ñ">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="IsAnimationFinished" to="ö">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="rewind" to="êô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="enableAnimation" to="îè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="disableAnimation" to="îâ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.TileViews.TileView" to="îï">
      <Field from="levelTile" to="è" />
      <Field from="tileCounter" to="â" />
      <Field from="tileID" to="ì" />
      <Field from="framework" to="ã" />
      <Field from="sceneMgr" to="ý" />
      <Field from="parentNode" to="ò" />
      <Field from="installationNode" to="å" />
      <Field from="minimapItem" to="æ" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_InstallationNode" to="è">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_LevelTile" to="â">
        <Signature>() : Wof.Model.Level.LevelTiles.LevelTile</Signature>
      </Method>
      <Method from="get_MinimapItem" to="ì">
        <Signature>() : Wof.View.MinimapItem</Signature>
      </Method>
      <Method from="initOnScene" to="äñ">
        <Signature>(Mogre.SceneNode, Int32, Int32) : Void</Signature>
      </Method>
      <Method from="getRelativePosition" to="ã">
        <Signature>(Mogre.SceneNode, Wof.Model.Level.LevelTiles.LevelTile) : Single</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.TileViews.AircraftCarrierTileView" to="îú">
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.TileViews.MiddleIslandTileView" to="îü">
      <Field from="animableElements" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="initPalm" to="è">
        <Signature>(Mogre.Vector3) : Void</Signature>
      </Method>
      <Method from="initPalm2" to="â">
        <Signature>(Mogre.Vector3) : Void</Signature>
      </Method>
      <Method from="initFlag" to="ì">
        <Signature>(Mogre.Vector3) : Void</Signature>
      </Method>
      <Method from="initOnScene" to="äñ">
        <Signature>(Mogre.SceneNode, Int32, Int32) : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="rewind" to="êô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="enableAnimation" to="îè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="disableAnimation" to="îâ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.TileViews.EnemyInstallationTileView" to="îç">
      <Field from="lightBillboardSet" to="è" />
      <Field from="lightBillboard" to="â" />
      <Field from="light" to="ì" />
      <Field from="installationEntity" to="ã" />
      <Field from="animationState" to="ý" />
      <Field from="smokeParticleSystem" to="ò" />
      <Field from="gunNode" to="å" />
      <Field from="reflectorNode" to="æ" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="get_NozzleLocation" to="äö">
        <Signature>() : Mogre.Vector3</Signature>
      </Method>
      <Method from="get_GunNode" to="è">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_ReflectorNode" to="â">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="Restore" to="äù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initOnScene" to="äñ">
        <Signature>(Mogre.SceneNode, Int32, Int32) : Void</Signature>
      </Method>
      <Method from="GunFire" to="äï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GunFireDo" to="äú">
        <Signature>(Mogre.Vector3, Mogre.Vector2, Single) : Void</Signature>
      </Method>
      <Method from="SetLightFlareVisibility" to="ì">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="InitLightFlare" to="ã">
        <Signature>(Mogre.ColourValue, Mogre.Vector3, Mogre.Vector2) : Void</Signature>
      </Method>
      <Method from="Destroy" to="äü">
        <Signature>(Boolean, Boolean, Boolean) : Void</Signature>
      </Method>
      <Method from="Destroy" to="äç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.TileViews.BarrackTileView" to="îû">
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="initBarrack" to="è">
        <Signature>(Mogre.SceneNode, Single) : Void</Signature>
      </Method>
      <Method from="initOnScene" to="äñ">
        <Signature>(Mogre.SceneNode, Int32, Int32) : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="Restore" to="äù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GunFire" to="äï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Destroy" to="äç">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.TileViews.BeginIslandTileView" to="îÿ">
      <Field from="backgroundViews" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="get_BackgroundViews" to="è">
        <Signature>() : System.Collections.Generic.List`1</Signature>
      </Method>
      <Method from="initOnScene" to="äñ">
        <Signature>(Mogre.SceneNode, Int32, Int32) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.TileViews.BunkerTileView" to="îô">
      <Field from="gunPlaceNode" to="è" />
      <Field from="yawGunPlaceNode" to="â" />
      <Field from="isConcrete" to="ì" />
      <Field from="flickeringReflectorWhenDestroyed" to="ã" />
      <Field from="barrelState" to="ý" />
      <Field from="flakBarrel" to="ò" />
      <Field from="reflectorSubNodes" to="å" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="get_GunPlaceNode" to="è">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_YawGunPlaceNode" to="â">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_IsConcrete" to="ì">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_NozzleLocation" to="äö">
        <Signature>() : Mogre.Vector3</Signature>
      </Method>
      <Method from="get_HasRockets" to="ã">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="rotateGun" to="ý">
        <Signature>(Single, Single) : Void</Signature>
      </Method>
      <Method from="initRegularBunker" to="äû">
        <Signature>(Mogre.SceneNode, Single) : Void</Signature>
      </Method>
      <Method from="initFlakBunker" to="äÿ">
        <Signature>(Mogre.SceneNode, Single) : Void</Signature>
      </Method>
      <Method from="initRockets" to="äô">
        <Signature>(Mogre.SceneNode, Single) : Void</Signature>
      </Method>
      <Method from="initBunker" to="ò">
        <Signature>(Mogre.SceneNode, Single) : Void</Signature>
      </Method>
      <Method from="GunFire" to="äï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Restore" to="äù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Damage" to="å">
        <Signature>(Boolean) : Void</Signature>
      </Method>
      <Method from="Destroy" to="äç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initOnScene" to="äñ">
        <Signature>(Mogre.SceneNode, Int32, Int32) : Void</Signature>
      </Method>
      <Method from="initReflector" to="óè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="rotateReflector" to="æ">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.TileViews.BarrelTileView" to="äè">
      <Field from="barrelNodes" to="è" />
      <Field from="barrels" to="â" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="Restore" to="äù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="GunFire" to="äï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Destroy" to="è">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initBarrel" to="â">
        <Signature>(Mogre.SceneNode, Int32) : Void</Signature>
      </Method>
      <Method from="initOnScene" to="äñ">
        <Signature>(Mogre.SceneNode, Int32, Int32) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.ShipView" to="äâ">
      <Field from="shipCounter" to="è" />
      <Field from="staticNode" to="â" />
      <Field from="animationNode" to="ì" />
      <Field from="positionNode" to="ã" />
      <Field from="adjust" to="ý" />
      <Field from="dieSound" to="ò" />
      <Field from="submergingSound" to="å" />
      <Field from="emergingSound" to="æ" />
      <Field from="count" to="é" />
      <Field from="minimapItem" to="ë" />
      <Field from="backgroundDummyShipType" to="í" />
      <Field from="shipAnimationState" to="ê" />
      <Method from=".ctor" to=".ctor">
        <Signature>(System.Collections.Generic.List`1, Wof.Controller.IFrameWork, Mogre.SceneNode) : Void</Signature>
      </Method>
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.TypeOfEnemyShip, Int32, Wof.Controller.IFrameWork, Mogre.SceneNode) : Void</Signature>
      </Method>
      <Method from=".cctor" to=".cctor">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="get_StaticNode" to="è">
        <Signature>() : Mogre.SceneNode</Signature>
      </Method>
      <Method from="get_MinimapItem" to="â">
        <Signature>() : Wof.View.MinimapItem</Signature>
      </Method>
      <Method from="OnShipSunk" to="ì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="OnShipDamaged" to="ã">
        <Signature>(Wof.Model.Level.LevelTiles.Watercraft.ShipState) : Void</Signature>
      </Method>
      <Method from="OnShipBeginSubmerging" to="ý">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipSubmerging" to="ò">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipEmerging" to="å">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipBeginEmerging" to="æ">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="WaterSplashes" to="é">
        <Signature>(Int32, Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipBeginSinking" to="ë">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="BubblesWaterAnimation" to="í">
        <Signature>(Mogre.SceneManager, Mogre.Vector3, String, Int32, Mogre.Vector2, Mogre.Vector2) : Void</Signature>
      </Method>
      <Method from="SinkingWaterAnimation" to="ê">
        <Signature>(Mogre.SceneManager, Mogre.Vector3, String, Int32, Mogre.Vector2, Mogre.Vector2) : Void</Signature>
      </Method>
      <Method from="OnShipSinking" to="î">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipEmerged" to="ä">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="OnShipSubmerged" to="ó">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile) : Void</Signature>
      </Method>
      <Method from="initOnScene" to="îé">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="buildFloatAnimation" to="õ">
        <Signature>(Mogre.SceneNode, Single, Boolean) : Void</Signature>
      </Method>
      <Method from="refreshPosition" to="óâ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initLampPost" to="ñ">
        <Signature>(Mogre.SceneNode, Mogre.Vector3, Mogre.Radian) : Void</Signature>
      </Method>
      <Method from="Finalize" to="óì">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="rewind" to="êô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="enableAnimation" to="îè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="disableAnimation" to="îâ">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Dispose" to="óã">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.TileViews.BeginShipTileView" to="äì">
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="initOnScene" to="äñ">
        <Signature>(Mogre.SceneNode, Int32, Int32) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.TileViews.EndShipTileView" to="äã">
      <Field from="animableElements" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="initFlag" to="è">
        <Signature>(Mogre.Vector3) : Void</Signature>
      </Method>
      <Method from="initOnScene" to="äñ">
        <Signature>(Mogre.SceneNode, Int32, Int32) : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="rewind" to="êô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="enableAnimation" to="îè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="disableAnimation" to="îâ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.TileViews.EndIslandTileView" to="äý">
      <Field from="animableElements" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="initOnScene" to="äñ">
        <Signature>(Mogre.SceneNode, Int32, Int32) : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="rewind" to="êô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="enableAnimation" to="îè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="disableAnimation" to="îâ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.TileViews.MiddleShipTileView" to="äò">
      <Field from="animableElements" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="initFlag" to="è">
        <Signature>(Mogre.Vector3) : Void</Signature>
      </Method>
      <Method from="initOnScene" to="äñ">
        <Signature>(Mogre.SceneNode, Int32, Int32) : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="rewind" to="êô">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="enableAnimation" to="îè">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="disableAnimation" to="îâ">
        <Signature>() : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.TileViews.ShipBunkerTileView" to="äå">
      <Field from="isConcrete" to="è" />
      <Field from="barrelState" to="â" />
      <Field from="flakBarrel" to="ì" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="get_HasRockets" to="è">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="get_IsConcrete" to="â">
        <Signature>() : Boolean</Signature>
      </Method>
      <Method from="rotateGun" to="ì">
        <Signature>(Single) : Void</Signature>
      </Method>
      <Method from="initBunker" to="ã">
        <Signature>(Mogre.SceneNode, Single) : Void</Signature>
      </Method>
      <Method from="GunFire" to="äï">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Restore" to="äù">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="Destroy" to="äç">
        <Signature>() : Void</Signature>
      </Method>
      <Method from="initOnScene" to="äñ">
        <Signature>(Mogre.SceneNode, Int32, Int32) : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
    </Type>
    <Type from="Wof.View.TileViews.OceanTileView" to="äæ">
      <Field from="floatingNodes" to="è" />
      <Method from=".ctor" to=".ctor">
        <Signature>(Wof.Model.Level.LevelTiles.LevelTile, Wof.Controller.IFrameWork) : Void</Signature>
      </Method>
      <Method from="initRocks" to="è">
        <Signature>(Mogre.Vector3) : Void</Signature>
      </Method>
      <Method from="initSmallIsland" to="â">
        <Signature>(Mogre.Vector3, String) : Void</Signature>
      </Method>
      <Method from="initBigRocks" to="ì">
        <Signature>(Mogre.Vector3) : Void</Signature>
      </Method>
      <Method from="initBarrels" to="ã">
        <Signature>(Mogre.Vector3, Int32) : Void</Signature>
      </Method>
      <Method from="initOnScene" to="äñ">
        <Signature>(Mogre.SceneNode, Int32, Int32) : Void</Signature>
      </Method>
      <Method from="updateTime" to="êï">
        <Signature>(Single) : Void</Signature>
      </Method>
    </Type>
    <Type from="&lt;PrivateImplementationDetails&gt;{DA65D34A-0A47-451A-8604-683536265FB2}" to="&lt;PrivateImplementationDetails&gt;{DA65D34A-0A47-451A-8604-683536265FB2}" />
    <Type from="&lt;PrivateImplementationDetails&gt;{DA65D34A-0A47-451A-8604-683536265FB2}.__StaticArrayInitTypeSize=16" to="&lt;PrivateImplementationDetails&gt;{DA65D34A-0A47-451A-8604-683536265FB2}.__StaticArrayInitTypeSize=16" />
    <Type from="&lt;PrivateImplementationDetails&gt;{DA65D34A-0A47-451A-8604-683536265FB2}.__StaticArrayInitTypeSize=20" to="&lt;PrivateImplementationDetails&gt;{DA65D34A-0A47-451A-8604-683536265FB2}.__StaticArrayInitTypeSize=20" />
    <Resource from="Wof.Properties.Resources.resources" to="Wof.Properties.Resources.resources" />
    <Resource from="Wof.Controller.ErrorBox.resources" to="ü.resources" />
    <Resource from="Wof.Controller.Splash.resources" to="òù.resources" />
    <Resource from="Wof.Tests.GunTestForm.resources" to="ìô.resources" />
    <Resource from="Wof.Tests.IntersectionTestForm.resources" to="ëë.resources" />
    <Resource from="Tests.ModelTest.LevelTest.CommonTest.RectanglesTest.RectanglesTestForm.resources" to="ëí.resources" />
    <Resource from="Tests.ModelTest.PlaneTest.PlaneFlyTestForm.resources" to="ëï.resources" />
    <Resource from="Tests.ModelTest.PlaneTest.PlaneOnAircraftTestForm.resources" to="ëú.resources" />
  </Assembly>
</Mapping>